<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/25/2018 10:20:47 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="OERLAGITDHAUH"
  DTS:CreatorName="ORIENTAL-ER\Harrison.Uhunghama"
  DTS:DTSID="{33D372F2-02E0-4C38-A6FD-B3DD0CFD779C}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.107"
  DTS:LocaleID="1033"
  DTS:ObjectName="UploadERASDailyData"
  DTS:PackageType="5"
  DTS:VersionBuild="114"
  DTS:VersionGUID="{75231477-B74E-462C-A475-9FAF07DC07CA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{184B4460-0710-4D26-8585-943A1A146331}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\\oerloss01\Ebok_Drive\Production Accounting\Ebok_Daily_Report.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{8EA7227E-3BB5-4305-B2EF-FA09FDC529FA}"
      DTS:ObjectName="OERLAGITDHAUH.ERAS.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;User ID=sa;Initial Catalog=ERAS;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\CFBGasCompression-COMPA"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6D9E83CD-C164-42E4-BF24-7882F6590BE0}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBGasCompression-COMPA">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBGasCompression-COMPA\CFBGasCompression"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBGasCompression"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A168:F170]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[Compressor 'A']"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F6]"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[Compressor 'A']"
                      dataType="wstr"
                      length="255"
                      name="Compressor 'A'" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Error Output].Columns[Compressor 'A']"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Error Output].Columns[Compressor 'A']"
                      name="Compressor 'A'" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Error Output].Columns[F6]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Error Output].Columns[F6]"
                      name="F6" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasCompression MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasCompressions]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[Compressor]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="Compressor"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Compressor]"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[Compressor]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Compressor]"
                      dataType="nText"
                      name="Compressor" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPA\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from CFBGasCompressions</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from CFBGasCompressions) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasCompression-COMPA\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPA\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPA\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasCompression-COMPA\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasCompression-COMPA\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPA\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPA\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPA\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPA\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasCompression-COMPA\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPA\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPA\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPA\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasCompression-COMPA\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[Compressor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="12"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output].Columns[Compressor]"
                      name="Compressor"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"COMPRESSOR A"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"COMPRESSOR A"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPA\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBGasCompression-COMPA.Paths[Data Conversion Output]"
              endId="Package\CFBGasCompression-COMPA\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasCompression-COMPA\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasCompression-COMPA.Paths[Derived Column Output]"
              endId="Package\CFBGasCompression-COMPA\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasCompression-COMPA\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasCompression-COMPA.Paths[Excel Source Output]"
              endId="Package\CFBGasCompression-COMPA\Derived Column.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasCompression-COMPA\CFBGasCompression.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasCompression-COMPA.Paths[Lookup No Match Output]"
              endId="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasCompression-COMPA\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBGasCompression-COMPB"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{B0F50B52-CCA7-43E2-B6CA-C0C06CC99339}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBGasCompression-COMPB">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBGasCompression-COMPB\CFBGasCompression"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBGasCompression"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$I168:N170]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[Compressor 'B']"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F6]"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[Compressor 'B']"
                      dataType="wstr"
                      length="255"
                      name="Compressor 'B'" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Error Output].Columns[Compressor 'B']"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Error Output].Columns[Compressor 'B']"
                      name="Compressor 'B'" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Error Output].Columns[F6]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Error Output].Columns[F6]"
                      name="F6" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasCompression MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasCompressions]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[Compressor]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="Compressor"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Compressor]"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[Compressor]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Compressor]"
                      dataType="nText"
                      name="Compressor" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPB\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from CFBGasCompressions</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from CFBGasCompressions) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasCompression-COMPB\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPB\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPB\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasCompression-COMPB\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasCompression-COMPB\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPB\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPB\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPB\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPB\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasCompression-COMPB\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPB\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPB\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPB\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasCompression-COMPB\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[Compressor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="12"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output].Columns[Compressor]"
                      name="Compressor"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"COMPRESSOR B"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"COMPRESSOR B"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPB\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBGasCompression-COMPB.Paths[Data Conversion Output]"
              endId="Package\CFBGasCompression-COMPB\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasCompression-COMPB\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasCompression-COMPB.Paths[Derived Column Output]"
              endId="Package\CFBGasCompression-COMPB\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasCompression-COMPB\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasCompression-COMPB.Paths[Excel Source Output]"
              endId="Package\CFBGasCompression-COMPB\Derived Column.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasCompression-COMPB\CFBGasCompression.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasCompression-COMPB.Paths[Lookup No Match Output]"
              endId="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasCompression-COMPB\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBGasCompression-COMPC"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{8E5A17A5-5F36-4EB5-888F-E0318E94B078}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBGasCompression-COMPC">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBGasCompression-COMPC\CFBGasCompression"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBGasCompression"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$Q168:X170]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F8]"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[Compressor 'C']"
                      dataType="wstr"
                      length="255"
                      name="Compressor 'C'" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Error Output].Columns[F8]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Error Output].Columns[F8]"
                      name="F8" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasCompression MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasCompressions]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[Compressor]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="Compressor"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Compressor]"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[Compressor]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Compressor]"
                      dataType="nText"
                      name="Compressor" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPC\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from CFBGasCompressions</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from CFBGasCompressions) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasCompression-COMPC\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPC\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPC\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasCompression-COMPC\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasCompression-COMPC\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPC\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPC\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPC\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasCompression-COMPC\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasCompression-COMPC\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPC\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasCompression-COMPC\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasCompression-COMPC\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasCompression-COMPC\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[Compressor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="12"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output].Columns[Compressor]"
                      name="Compressor"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"COMPRESSOR C"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"COMPRESSOR C"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasCompression-COMPC\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBGasCompression-COMPC.Paths[Data Conversion Output]"
              endId="Package\CFBGasCompression-COMPC\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasCompression-COMPC\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasCompression-COMPC.Paths[Derived Column Output]"
              endId="Package\CFBGasCompression-COMPC\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasCompression-COMPC\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasCompression-COMPC.Paths[Excel Source Output]"
              endId="Package\CFBGasCompression-COMPC\Derived Column.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasCompression-COMPC\CFBGasCompression.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasCompression-COMPC.Paths[Lookup No Match Output]"
              endId="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasCompression-COMPC\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBGasLiftData"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{1E93D58A-B8F8-4582-931C-98271674E29F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBGasLiftData">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasLiftData10 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasLiftData11 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasLiftData12 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasLiftData13 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasLiftData26 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasLiftData27 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBGasLiftData9 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Convert10"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert10"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Convert10.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Convert10.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert10.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert10.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Convert11"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert11"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Convert11.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Convert11.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert11.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert11.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Convert12"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert12"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Convert12.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Convert12.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert12.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert12.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Convert13"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert13"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Convert13.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Convert13.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert13.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert13.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Convert26"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert26"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Convert26.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Convert26.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert26.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert26.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Convert27"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert27"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Convert27.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Convert27.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert27.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert27.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Convert9"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert9"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Convert9.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Convert9.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert9.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Convert9.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Derived10"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived10"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Derived10.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived10.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived10.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Derived11"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived11"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Derived11.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived11.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived11.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Derived12"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived12"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Derived12.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived12.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived12.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Derived13"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived13"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Derived13.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived13.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived13.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Derived26"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived26"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Derived26.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived26.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived26.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Derived27"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived27"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Derived27.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived27.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived27.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Derived9"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived9"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Derived9.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived9.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Derived9.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\EBOK10"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK10"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A173:Z178]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\EBOK10.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[Ebok-10]"
                      lineageId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="wstr"
                      length="255"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="wstr"
                      length="255"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="wstr"
                      length="255"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="wstr"
                      length="255"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="wstr"
                      length="255"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="wstr"
                      length="255"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="wstr"
                      length="255"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="wstr"
                      length="255"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="wstr"
                      length="255"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="wstr"
                      length="255"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[F25]"
                      dataType="wstr"
                      length="255"
                      name="F25" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[Ebok-9]"
                      dataType="r8"
                      name="Ebok-9" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[Ebok-10]"
                      dataType="r8"
                      name="Ebok-10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[Ebok-11]"
                      dataType="r8"
                      name="Ebok-11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[Ebok-12]"
                      dataType="r8"
                      name="Ebok-12" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[Ebok-13]"
                      dataType="r8"
                      name="Ebok-13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[Ebok-27]"
                      dataType="r8"
                      name="Ebok-27" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output].ExternalColumns[E-26]"
                      dataType="r8"
                      name="E-26" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Error Output].Columns[Ebok-10]"
                      dataType="r8"
                      lineageId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Error Output].Columns[Ebok-10]"
                      name="Ebok-10" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\EBOK11"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK11"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A173:Z178]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\EBOK11.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[Ebok-11]"
                      lineageId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="wstr"
                      length="255"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="wstr"
                      length="255"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="wstr"
                      length="255"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="wstr"
                      length="255"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="wstr"
                      length="255"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="wstr"
                      length="255"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="wstr"
                      length="255"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="wstr"
                      length="255"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="wstr"
                      length="255"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="wstr"
                      length="255"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[F25]"
                      dataType="wstr"
                      length="255"
                      name="F25" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[Ebok-9]"
                      dataType="r8"
                      name="Ebok-9" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[Ebok-10]"
                      dataType="r8"
                      name="Ebok-10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[Ebok-11]"
                      dataType="r8"
                      name="Ebok-11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[Ebok-12]"
                      dataType="r8"
                      name="Ebok-12" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[Ebok-13]"
                      dataType="r8"
                      name="Ebok-13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[Ebok-27]"
                      dataType="r8"
                      name="Ebok-27" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output].ExternalColumns[E-26]"
                      dataType="r8"
                      name="E-26" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Error Output].Columns[Ebok-11]"
                      dataType="r8"
                      lineageId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Error Output].Columns[Ebok-11]"
                      name="Ebok-11" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\EBOK12"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK12"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A173:Z178]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\EBOK12.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[Ebok-12]"
                      lineageId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="wstr"
                      length="255"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="wstr"
                      length="255"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="wstr"
                      length="255"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="wstr"
                      length="255"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="wstr"
                      length="255"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="wstr"
                      length="255"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="wstr"
                      length="255"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="wstr"
                      length="255"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="wstr"
                      length="255"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="wstr"
                      length="255"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[F25]"
                      dataType="wstr"
                      length="255"
                      name="F25" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[Ebok-9]"
                      dataType="r8"
                      name="Ebok-9" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[Ebok-10]"
                      dataType="r8"
                      name="Ebok-10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[Ebok-11]"
                      dataType="r8"
                      name="Ebok-11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[Ebok-12]"
                      dataType="r8"
                      name="Ebok-12" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[Ebok-13]"
                      dataType="r8"
                      name="Ebok-13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[Ebok-27]"
                      dataType="r8"
                      name="Ebok-27" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output].ExternalColumns[E-26]"
                      dataType="r8"
                      name="E-26" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Error Output].Columns[Ebok-12]"
                      dataType="r8"
                      lineageId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Error Output].Columns[Ebok-12]"
                      name="Ebok-12" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\EBOK13"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK13"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A173:Z178]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\EBOK13.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[Ebok-13]"
                      lineageId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="wstr"
                      length="255"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="wstr"
                      length="255"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="wstr"
                      length="255"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="wstr"
                      length="255"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="wstr"
                      length="255"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="wstr"
                      length="255"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="wstr"
                      length="255"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="wstr"
                      length="255"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="wstr"
                      length="255"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="wstr"
                      length="255"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[F25]"
                      dataType="wstr"
                      length="255"
                      name="F25" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[Ebok-9]"
                      dataType="r8"
                      name="Ebok-9" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[Ebok-10]"
                      dataType="r8"
                      name="Ebok-10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[Ebok-11]"
                      dataType="r8"
                      name="Ebok-11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[Ebok-12]"
                      dataType="r8"
                      name="Ebok-12" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[Ebok-13]"
                      dataType="r8"
                      name="Ebok-13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[Ebok-27]"
                      dataType="r8"
                      name="Ebok-27" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output].ExternalColumns[E-26]"
                      dataType="r8"
                      name="E-26" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Error Output].Columns[Ebok-13]"
                      dataType="r8"
                      lineageId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Error Output].Columns[Ebok-13]"
                      name="Ebok-13" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\EBOK26"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK26"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A173:Z178]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\EBOK26.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[E-26]"
                      lineageId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="wstr"
                      length="255"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="wstr"
                      length="255"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="wstr"
                      length="255"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="wstr"
                      length="255"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="wstr"
                      length="255"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="wstr"
                      length="255"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="wstr"
                      length="255"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="wstr"
                      length="255"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="wstr"
                      length="255"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="wstr"
                      length="255"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[F25]"
                      dataType="wstr"
                      length="255"
                      name="F25" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[Ebok-9]"
                      dataType="r8"
                      name="Ebok-9" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[Ebok-10]"
                      dataType="r8"
                      name="Ebok-10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[Ebok-11]"
                      dataType="r8"
                      name="Ebok-11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[Ebok-12]"
                      dataType="r8"
                      name="Ebok-12" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[Ebok-13]"
                      dataType="r8"
                      name="Ebok-13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[Ebok-27]"
                      dataType="r8"
                      name="Ebok-27" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output].ExternalColumns[E-26]"
                      dataType="r8"
                      name="E-26" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Error Output].Columns[E-26]"
                      dataType="r8"
                      lineageId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Error Output].Columns[E-26]"
                      name="E-26" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\EBOK27"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK27"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A173:Z178]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\EBOK27.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[Ebok-27]"
                      lineageId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="wstr"
                      length="255"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="wstr"
                      length="255"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="wstr"
                      length="255"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="wstr"
                      length="255"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="wstr"
                      length="255"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="wstr"
                      length="255"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="wstr"
                      length="255"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="wstr"
                      length="255"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="wstr"
                      length="255"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="wstr"
                      length="255"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[F25]"
                      dataType="wstr"
                      length="255"
                      name="F25" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[Ebok-9]"
                      dataType="r8"
                      name="Ebok-9" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[Ebok-10]"
                      dataType="r8"
                      name="Ebok-10" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[Ebok-11]"
                      dataType="r8"
                      name="Ebok-11" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[Ebok-12]"
                      dataType="r8"
                      name="Ebok-12" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[Ebok-13]"
                      dataType="r8"
                      name="Ebok-13" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[Ebok-27]"
                      dataType="r8"
                      name="Ebok-27" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output].ExternalColumns[E-26]"
                      dataType="r8"
                      name="E-26" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Error Output].Columns[Ebok-27]"
                      dataType="r8"
                      lineageId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Error Output].Columns[Ebok-27]"
                      name="Ebok-27" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\EBOK9"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK9"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A173:F177]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\EBOK9.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].ExternalColumns[Ebok-9]"
                      lineageId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output].ExternalColumns[Ebok-9]"
                      dataType="r8"
                      name="Ebok-9" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Error Output].Columns[Ebok-9]"
                      dataType="r8"
                      lineageId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Error Output].Columns[Ebok-9]"
                      name="Ebok-9" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Is_Duplicate10"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate10"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\Is_Duplicate10.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Is_Duplicate10.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate10.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate10.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate10.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate10.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Is_Duplicate11"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate11"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\Is_Duplicate11.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Is_Duplicate11.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate11.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate11.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate11.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate11.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Is_Duplicate12"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate12"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\Is_Duplicate12.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Is_Duplicate12.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate12.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate12.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate12.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate12.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Is_Duplicate13"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate13"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\Is_Duplicate13.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Is_Duplicate13.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate13.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate13.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate13.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate13.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Is_Duplicate26"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate26"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\Is_Duplicate26.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Is_Duplicate26.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate26.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate26.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate26.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate26.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Is_Duplicate27"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate27"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\Is_Duplicate27.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBGasLiftData\Is_Duplicate9"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate9"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBGasLiftData\Is_Duplicate9.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBGasLiftData\Is_Duplicate9.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate9.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate9.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate9.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBGasLiftData\Is_Duplicate9.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBGasLiftData.Paths[Data Conversion Output]"
              endId="Package\CFBGasLiftData\Is_Duplicate11.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasLiftData\Convert11.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Data Conversion Output1]"
              endId="Package\CFBGasLiftData\Is_Duplicate10.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasLiftData\Convert10.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Data Conversion Output2]"
              endId="Package\CFBGasLiftData\Is_Duplicate12.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasLiftData\Convert12.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Data Conversion Output3]"
              endId="Package\CFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasLiftData\Convert27.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Data Conversion Output4]"
              endId="Package\CFBGasLiftData\Is_Duplicate13.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasLiftData\Convert13.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Data Conversion Output5]"
              endId="Package\CFBGasLiftData\Is_Duplicate26.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasLiftData\Convert26.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Data Conversion Output6]"
              endId="Package\CFBGasLiftData\Is_Duplicate9.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBGasLiftData\Convert9.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Derived Column Output5]"
              endId="Package\CFBGasLiftData\Convert13.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasLiftData\Derived13.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Derived Column Output4]"
              endId="Package\CFBGasLiftData\Convert27.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasLiftData\Derived27.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Derived Column Output3]"
              endId="Package\CFBGasLiftData\Convert10.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasLiftData\Derived10.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Derived Column Output6]"
              endId="Package\CFBGasLiftData\Convert9.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasLiftData\Derived9.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Derived Column Output1]"
              endId="Package\CFBGasLiftData\Convert12.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasLiftData\Derived12.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Derived Column Output]"
              endId="Package\CFBGasLiftData\Convert26.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasLiftData\Derived26.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Derived Column Output2]"
              endId="Package\CFBGasLiftData\Convert11.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBGasLiftData\Derived11.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Excel Source Output6]"
              endId="Package\CFBGasLiftData\Derived26.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasLiftData\EBOK26.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Excel Source Output4]"
              endId="Package\CFBGasLiftData\Derived27.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasLiftData\EBOK27.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Excel Source Output3]"
              endId="Package\CFBGasLiftData\Derived11.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasLiftData\EBOK11.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Excel Source Output5]"
              endId="Package\CFBGasLiftData\Derived9.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasLiftData\EBOK9.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Excel Source Output1]"
              endId="Package\CFBGasLiftData\Derived12.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasLiftData\EBOK12.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Excel Source Output]"
              endId="Package\CFBGasLiftData\Derived13.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasLiftData\EBOK13.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Excel Source Output2]"
              endId="Package\CFBGasLiftData\Derived10.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBGasLiftData\EBOK10.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Lookup No Match Output5]"
              endId="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasLiftData\Is_Duplicate26.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Lookup No Match Output]"
              endId="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasLiftData\Is_Duplicate13.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Lookup No Match Output1]"
              endId="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasLiftData\Is_Duplicate9.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Lookup No Match Output2]"
              endId="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasLiftData\Is_Duplicate12.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Lookup No Match Output3]"
              endId="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasLiftData\Is_Duplicate27.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Lookup No Match Output4]"
              endId="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasLiftData\Is_Duplicate10.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\CFBGasLiftData.Paths[Lookup No Match Output6]"
              endId="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBGasLiftData\Is_Duplicate11.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBMaintenanceData"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{2CB20706-6BBF-419E-9A45-961681D032C3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBMaintenanceData">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBMaintenanceData\CFBMaintenanceData"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBMaintenanceData"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A245:O266]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBMaintenanceData\CFBMaintenanceData.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]"
                      name="Parameters"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[DailyTotal]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Daily Total]"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[DailyTotal]"
                      name="DailyTotal"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[PreviousTotal]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Previous Total]"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[PreviousTotal]"
                      name="PreviousTotal"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Cummulative]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Cumulative]"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Cummulative]"
                      name="Cummulative"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Comment]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Comments]"
                      length="255"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Comment]"
                      name="Comment"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Daily Total]"
                      dataType="r8"
                      name="Daily Total" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Previous Total]"
                      dataType="r8"
                      name="Previous Total" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F12]"
                      dataType="r8"
                      name="F12" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Cumulative]"
                      dataType="r8"
                      name="Cumulative" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Comments]"
                      dataType="wstr"
                      length="255"
                      name="Comments" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Daily Total]"
                      dataType="r8"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Daily Total]"
                      name="Daily Total" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Previous Total]"
                      dataType="r8"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Previous Total]"
                      name="Previous Total" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Cumulative]"
                      dataType="r8"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Cumulative]"
                      name="Cumulative" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Comments]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Comments]"
                      name="Comments" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBMaintenanceData MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBMaintenanceDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[DailyTotal]"
                      cachedDataType="r8"
                      cachedName="DailyTotal"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DailyTotal]"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[DailyTotal]" />
                    <inputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[PreviousTotal]"
                      cachedDataType="r8"
                      cachedName="PreviousTotal"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousTotal]"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[PreviousTotal]" />
                    <inputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Cummulative]"
                      cachedDataType="r8"
                      cachedName="Cummulative"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Cummulative]"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Cummulative]" />
                    <inputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Comment]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Comment"
                      externalMetadataColumnId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Comment]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DailyTotal]"
                      dataType="nText"
                      name="DailyTotal" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousTotal]"
                      dataType="nText"
                      name="PreviousTotal" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Cummulative]"
                      dataType="dbTimeStamp"
                      name="Cummulative" />
                    <externalMetadataColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      dataType="nText"
                      name="Comment" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBMaintenanceData\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBMaintenanceDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBMaintenanceDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBMaintenanceData\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBMaintenanceData\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBMaintenanceData\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBMaintenanceData\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBMaintenanceData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBMaintenanceData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBMaintenanceData\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      lineageId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBMaintenanceData\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Parameters)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBMaintenanceData.Paths[Conditional Split Default Output]"
              endId="Package\CFBMaintenanceData\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\CFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CFBMaintenanceData.Paths[Data Conversion Output]"
              endId="Package\CFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBMaintenanceData.Paths[Derived Column Output]"
              endId="Package\CFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBMaintenanceData\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBMaintenanceData.Paths[Excel Source Output]"
              endId="Package\CFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CFBMaintenanceData\CFBMaintenanceData.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBMaintenanceData.Paths[Lookup No Match Output]"
              endId="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBMaintenanceData\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBProcessData_GasConsumed"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9D97AF21-F8FE-4395-9404-466359B691C4}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBProcessData_GasConsumed">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBProcessData_GasConsumed"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$N192:S198]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F2]"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]"
                      name="GasFlowParameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlow]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[(mmscf)]"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlow]"
                      name="GasFlow"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="r8"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="r8"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="r8"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="r8"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[(mmscf)]"
                      dataType="r8"
                      name="(mmscf)" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[F2]"
                      dataType="r8"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[F2]"
                      name="F2" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[(mmscf)]"
                      dataType="r8"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[(mmscf)]"
                      name="(mmscf)" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBProcessData_GasConsumed MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBProcessData_GasConsumed]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[GasFlowParameter]"
                      cachedDataType="date"
                      cachedName="GasFlowParameter"
                      externalMetadataColumnId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlowParameter]"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[GasFlow]"
                      cachedDataType="r8"
                      cachedName="GasFlow"
                      externalMetadataColumnId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlow]"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlow]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlowParameter]"
                      dataType="nText"
                      name="GasFlowParameter" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlow]"
                      dataType="r8"
                      name="GasFlow" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasConsumed\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBProcessData_GasConsumed</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBProcessData_GasConsumed) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasConsumed\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasConsumed\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasConsumed\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasConsumed\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input].Columns[GasFlowParameter]"
                      cachedDataType="date"
                      cachedName="GasFlowParameter"
                      lineageId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(GasFlowParameter)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBProcessData_GasConsumed.Paths[Conditional Split Default Output]"
              endId="Package\CFBProcessData_GasConsumed\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CFBProcessData_GasConsumed.Paths[Data Conversion Output]"
              endId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBProcessData_GasConsumed.Paths[Derived Column Output]"
              endId="Package\CFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBProcessData_GasConsumed.Paths[Excel Source Output]"
              endId="Package\CFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBProcessData_GasConsumed.Paths[Lookup No Match Output]"
              endId="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBProcessData_GasProduced"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{70770656-4F98-44D7-BDE0-30C52C73CA3A}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBProcessData_GasProduced">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBProcessData_GasProduced"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$J192:L197]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[Gas Flow (mmscf)]"
                      length="255"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]"
                      name="GasFlowParameter"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[F2]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[F2]"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[F2]"
                      name="F2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlow]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[F3]"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlow]"
                      name="GasFlow"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[Gas Flow (mmscf)]"
                      dataType="wstr"
                      length="255"
                      name="Gas Flow (mmscf)" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="date"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="r8"
                      name="F3" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[Gas Flow (mmscf)]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[Gas Flow (mmscf)]"
                      name="Gas Flow (mmscf)" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[F2]"
                      dataType="date"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[F2]"
                      name="F2" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[F3]"
                      dataType="r8"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[F3]"
                      name="F3" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBProcessData_GasProduced MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBProcessData_GasProduced]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[GasFlowParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GasFlowParameter"
                      externalMetadataColumnId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlowParameter]"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]" />
                    <inputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[GasFlow]"
                      cachedDataType="r8"
                      cachedName="GasFlow"
                      externalMetadataColumnId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlow]"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlow]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlowParameter]"
                      dataType="nText"
                      name="GasFlowParameter" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlow]"
                      dataType="r8"
                      name="GasFlow" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasProduced\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBProcessData_GasProduced</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBProcessData_GasProduced) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBProcessData_GasProduced\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasProduced\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasProduced\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasProduced\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_GasProduced\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input].Columns[GasFlowParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GasFlowParameter"
                      lineageId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(GasFlowParameter)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBProcessData_GasProduced.Paths[Conditional Split Default Output]"
              endId="Package\CFBProcessData_GasProduced\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CFBProcessData_GasProduced.Paths[Data Conversion Output]"
              endId="Package\CFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBProcessData_GasProduced.Paths[Derived Column Output]"
              endId="Package\CFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBProcessData_GasProduced.Paths[Excel Source Output]"
              endId="Package\CFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBProcessData_GasProduced.Paths[Lookup No Match Output]"
              endId="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBProcessData_Reading"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{E60CF63A-8F6D-4DFB-B103-F22E93824C7F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBProcessData_Reading">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBProcessData_Reading\CFBProcessData_Reading"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBProcessData_Reading"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A192:H196]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].Columns[Pressure]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[Pressure (psig)]"
                      lineageId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].Columns[Pressure]"
                      name="Pressure"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].Columns[Temperature]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[Temp# (oF)]"
                      lineageId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].Columns[GasSource]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].Columns[GasSource]"
                      name="GasSource"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[Pressure (psig)]"
                      dataType="r8"
                      name="Pressure (psig)" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[Temp# (oF)]"
                      dataType="r8"
                      name="Temp# (oF)" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[Pressure (psig)]"
                      dataType="r8"
                      lineageId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[Pressure (psig)]"
                      name="Pressure (psig)" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[Temp# (oF)]"
                      dataType="r8"
                      lineageId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[Temp# (oF)]"
                      name="Temp# (oF)" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_Reading\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBProcessData_Reading</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBProcessData_Reading) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBProcessData_Reading\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_Reading\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_Reading\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBProcessData_Reading\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBProcessData_Reading\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBProcessData_Reading\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBProcessData_Reading MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBProcessData_Reading]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasSource]"
                      dataType="nText"
                      name="GasSource" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                      dataType="nText"
                      name="Pressure" />
                    <externalMetadataColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Temperature]"
                      dataType="nText"
                      name="Temperature" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBProcessData_Reading.Paths[Data Conversion Output]"
              endId="Package\CFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBProcessData_Reading.Paths[Derived Column Output]"
              endId="Package\CFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBProcessData_Reading\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBProcessData_Reading.Paths[Excel Source Output]"
              endId="Package\CFBProcessData_Reading\Derived Column.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\CFBProcessData_Reading\CFBProcessData_Reading.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBProcessData_Reading.Paths[Lookup No Match Output]"
              endId="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBProcessData_Reading\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBSummary"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{079E8437-850D-47E9-9EA3-00BF7216F8D9}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBSummary">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBSummary\CFBSummary"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBSummary"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A331:A347]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBSummary\CFBSummary.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Output].Columns[Report]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Output].ExternalColumns[CFB]"
                      length="255"
                      lineageId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Output].ExternalColumns[CFB]"
                      dataType="wstr"
                      length="255"
                      name="CFB" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Error Output].Columns[CFB]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Error Output].Columns[CFB]"
                      name="CFB" />
                    <outputColumn
                      refId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBSummary\CFBSummary MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBSummary MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBSummaries]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBSummary\CFBSummary MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      externalMetadataColumnId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBSummary\CFBSummary MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\CFBSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBSummary\CFBSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\CFBSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBSummary\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from CFBSummaries</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from CFBSummaries) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBSummary\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBSummary\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBSummary\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBSummary\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBSummary\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBSummary\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBSummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBSummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBSummary\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBSummary\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBSummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBSummary\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBSummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBSummary\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBSummary\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBSummary\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      lineageId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBSummary\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CFBSummary\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CFBSummary\CFBSummary.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBSummary\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CFBSummary\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBSummary\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CFBSummary\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBSummary.Paths[Conditional Split Default Output]"
              endId="Package\CFBSummary\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\CFBSummary\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CFBSummary.Paths[Data Conversion Output]"
              endId="Package\CFBSummary\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBSummary\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBSummary.Paths[Derived Column Output]"
              endId="Package\CFBSummary\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBSummary\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBSummary.Paths[Excel Source Output]"
              endId="Package\CFBSummary\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CFBSummary\CFBSummary.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBSummary.Paths[Lookup No Match Output]"
              endId="Package\CFBSummary\CFBSummary MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBSummary\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBWaterInjector"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{FFD49485-B1CE-4CB6-9EB3-54D98BBA83A0}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBWaterInjector">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBWaterInjector\CFBWaterInjector"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBWaterInjector"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$J211:U218]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWaterInjector\CFBWaterInjector.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[WaterInjector]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[Water Injector]"
                      length="255"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[WaterInjector]"
                      name="WaterInjector"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[Choke]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[Choke 3&quot;]"
                      length="255"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[Choke]"
                      name="Choke"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[D_Time]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[D-Time]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[D_Time]"
                      name="D_Time"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[THP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[THP]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[THP]"
                      name="THP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[FLP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[FLP]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[FLP]"
                      name="FLP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[VolumeInjected]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[Volume Injected (bbls)]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[VolumeInjected]"
                      name="VolumeInjected"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[Remarks]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[Remarks]"
                      length="255"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[Remarks]"
                      name="Remarks"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[Water Injector]"
                      dataType="wstr"
                      length="255"
                      name="Water Injector" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="date"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[Choke 3&quot;]"
                      dataType="wstr"
                      length="255"
                      name="Choke 3&quot;" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="r8"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[D-Time]"
                      dataType="date"
                      name="D-Time" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="date"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[THP]"
                      dataType="r8"
                      name="THP" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[FLP]"
                      dataType="r8"
                      name="FLP" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[Volume Injected (bbls)]"
                      dataType="r8"
                      name="Volume Injected (bbls)" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].ExternalColumns[Remarks]"
                      dataType="wstr"
                      length="255"
                      name="Remarks" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[Water Injector]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[Water Injector]"
                      name="Water Injector" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[Choke 3&quot;]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[Choke 3&quot;]"
                      name="Choke 3&quot;" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[D-Time]"
                      dataType="date"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[D-Time]"
                      name="D-Time" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[THP]"
                      dataType="r8"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[THP]"
                      name="THP" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[FLP]"
                      dataType="r8"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[FLP]"
                      name="FLP" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[Volume Injected (bbls)]"
                      dataType="r8"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[Volume Injected (bbls)]"
                      name="Volume Injected (bbls)" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[Remarks]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[Remarks]"
                      name="Remarks" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBWaterInjector MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBWaterInjectors]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[WaterInjector]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WaterInjector"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WaterInjector]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[WaterInjector]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[Choke]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Choke"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Choke]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[Choke]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[D_Time]"
                      cachedDataType="date"
                      cachedName="D_Time"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[D_Time]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[D_Time]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[THP]"
                      cachedDataType="r8"
                      cachedName="THP"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[THP]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[THP]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[FLP]"
                      cachedDataType="r8"
                      cachedName="FLP"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FLP]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[FLP]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[VolumeInjected]"
                      cachedDataType="r8"
                      cachedName="VolumeInjected"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[VolumeInjected]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[VolumeInjected]" />
                    <inputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].Columns[Remarks]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Remarks"
                      externalMetadataColumnId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Remarks]"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[Remarks]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WaterInjector]"
                      dataType="nText"
                      name="WaterInjector" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Choke]"
                      dataType="nText"
                      name="Choke" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[D_Time]"
                      dataType="nText"
                      name="D_Time" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[THP]"
                      dataType="nText"
                      name="THP" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FLP]"
                      dataType="nText"
                      name="FLP" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[VolumeInjected]"
                      dataType="nText"
                      name="VolumeInjected" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Remarks]"
                      dataType="nText"
                      name="Remarks" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjector\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBWaterInjectors</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBWaterInjectors) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWaterInjector\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBWaterInjector\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWaterInjector\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBWaterInjector\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBWaterInjector\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBWaterInjector\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjector\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBWaterInjector\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWaterInjector\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBWaterInjector\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBWaterInjector\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjector\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBWaterInjector\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBWaterInjector\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBWaterInjector\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjector\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBWaterInjector\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWaterInjector\Remove Empty Cells.Inputs[Conditional Split Input].Columns[WaterInjector]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WaterInjector"
                      lineageId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[WaterInjector]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjector\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CFBWaterInjector\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output].Columns[WaterInjector]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(WaterInjector)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjector\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CFBWaterInjector\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjector\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CFBWaterInjector\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjector\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjector\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjector\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBWaterInjector.Paths[Conditional Split Default Output]"
              endId="Package\CFBWaterInjector\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\CFBWaterInjector\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CFBWaterInjector.Paths[Data Conversion Output]"
              endId="Package\CFBWaterInjector\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBWaterInjector\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBWaterInjector.Paths[Derived Column Output]"
              endId="Package\CFBWaterInjector\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBWaterInjector\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBWaterInjector.Paths[Excel Source Output]"
              endId="Package\CFBWaterInjector\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CFBWaterInjector\CFBWaterInjector.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBWaterInjector.Paths[Lookup No Match Output]"
              endId="Package\CFBWaterInjector\CFBWaterInjector MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBWaterInjector\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBWaterInjectorMeter"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{15919CC9-5EA3-416B-B52F-F0487CB566D4}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBWaterInjectorMeter">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBWaterInjectorMeter"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A212:I214]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[Ultrasonic Meters]"
                      length="255"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]"
                      name="MeterName"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[CurrentEightHours]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F3]"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[CurrentEightHours]"
                      name="CurrentEightHours"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[PreviousEightHours]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F5]"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[PreviousEightHours]"
                      name="PreviousEightHours"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[TwentyFourHours]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F7]"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[TwentyFourHours]"
                      name="TwentyFourHours"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[Press]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F9]"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[Press]"
                      name="Press"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="date"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="r8"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="r8"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[Ultrasonic Meters]"
                      dataType="wstr"
                      length="255"
                      name="Ultrasonic Meters" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="r8"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="r8"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="r8"
                      name="F9" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[Ultrasonic Meters]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[Ultrasonic Meters]"
                      name="Ultrasonic Meters" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F3]"
                      dataType="r8"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F3]"
                      name="F3" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F5]"
                      dataType="r8"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F5]"
                      name="F5" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F7]"
                      dataType="r8"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F7]"
                      name="F7" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F9]"
                      dataType="r8"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F9]"
                      name="F9" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBWaterInjectorMeter MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBWaterInjectorMeters]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[MeterName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MeterName"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MeterName]"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]" />
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[CurrentEightHours]"
                      cachedDataType="r8"
                      cachedName="CurrentEightHours"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CurrentEightHours]"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[CurrentEightHours]" />
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[PreviousEightHours]"
                      cachedDataType="r8"
                      cachedName="PreviousEightHours"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousEightHours]"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[PreviousEightHours]" />
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[Press]"
                      cachedDataType="r8"
                      cachedName="Press"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Press]"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[Press]" />
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[TwentyFourHours]"
                      cachedDataType="r8"
                      cachedName="TwentyFourHours"
                      externalMetadataColumnId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHours]"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[TwentyFourHours]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MeterName]"
                      dataType="nText"
                      name="MeterName" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CurrentEightHours]"
                      dataType="nText"
                      name="CurrentEightHours" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousEightHours]"
                      dataType="nText"
                      name="PreviousEightHours" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHours]"
                      dataType="nText"
                      name="TwentyFourHours" />
                    <externalMetadataColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Press]"
                      dataType="nText"
                      name="Press" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjectorMeter\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CFBWaterInjectorMeters</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CFBWaterInjectorMeters) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWaterInjectorMeter\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjectorMeter\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjectorMeter\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBWaterInjectorMeter\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWaterInjectorMeter\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input].Columns[MeterName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MeterName"
                      lineageId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(MeterName)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBWaterInjectorMeter.Paths[Conditional Split Default Output]"
              endId="Package\CFBWaterInjectorMeter\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CFBWaterInjectorMeter.Paths[Data Conversion Output]"
              endId="Package\CFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBWaterInjectorMeter.Paths[Derived Column Output]"
              endId="Package\CFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBWaterInjectorMeter.Paths[Excel Source Output]"
              endId="Package\CFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBWaterInjectorMeter.Paths[Lookup No Match Output]"
              endId="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CFBWellData"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{CA4EDD51-20A5-4DA5-8279-32A14EF25A8C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CFBWellData">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CFBWellData\CFBWellData"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CFBWellData"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A66:W87]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWellData\CFBWellData.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Rsv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Rsv]"
                      length="255"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Rsv]"
                      name="Rsv"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Well]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Well]"
                      length="255"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Well]"
                      name="Well"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[CHOKE]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[CHOKE]"
                      length="255"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[CHOKE]"
                      name="CHOKE"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[HOURS_ONLINE]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[HOURS]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[HOURS_ONLINE]"
                      name="HOURS_ONLINE"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[THP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[THP]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[THP]"
                      name="THP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[FLP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[FLP]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[FLP]"
                      name="FLP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[BSW]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[BSW]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[BSW]"
                      name="BSW"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Ps]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Ps]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Ps]"
                      name="Ps"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Pwf]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Pwf]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Pwf]"
                      name="Pwf"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[BHT]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[BHT]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[BHT]"
                      name="BHT"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[DP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[DP]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[DP]"
                      name="DP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[OIL]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[OIL]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[OIL]"
                      name="OIL"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[GAS]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[GAS]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[GAS]"
                      name="GAS"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[WATER]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[WATER]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[WATER]"
                      name="WATER"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[APIO]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[APIO]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[APIO]"
                      name="APIO"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Pump Frequency (Hz)]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Pump Frequency (Hz)]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Pump Frequency (Hz)]"
                      name="Pump Frequency (Hz)"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Comment]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Comment]"
                      length="255"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Comment]"
                      name="Comment"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[HOURS_OFFLINE]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[F5]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[HOURS_OFFLINE]"
                      name="HOURS_OFFLINE"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="date"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="r8"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[F22]"
                      dataType="wstr"
                      length="255"
                      name="F22" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Rsv]"
                      dataType="wstr"
                      length="255"
                      name="Rsv" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Well]"
                      dataType="wstr"
                      length="255"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[CHOKE]"
                      dataType="wstr"
                      length="255"
                      name="CHOKE" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[HOURS]"
                      dataType="date"
                      name="HOURS" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[THP]"
                      dataType="r8"
                      name="THP" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[FLP]"
                      dataType="r8"
                      name="FLP" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[BSW]"
                      dataType="r8"
                      name="BSW" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Ps]"
                      dataType="r8"
                      name="Ps" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Pwf]"
                      dataType="r8"
                      name="Pwf" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[BHT]"
                      dataType="r8"
                      name="BHT" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[DP]"
                      dataType="r8"
                      name="DP" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[OIL]"
                      dataType="r8"
                      name="OIL" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[GAS]"
                      dataType="r8"
                      name="GAS" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[WATER]"
                      dataType="r8"
                      name="WATER" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[F18]"
                      dataType="r8"
                      name="F18" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[APIO]"
                      dataType="r8"
                      name="APIO" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="r8"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Pump Frequency (Hz)]"
                      dataType="r8"
                      name="Pump Frequency (Hz)" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].ExternalColumns[Comment]"
                      dataType="wstr"
                      length="255"
                      name="Comment" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Rsv]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Rsv]"
                      name="Rsv" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Well]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Well]"
                      name="Well" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[CHOKE]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[CHOKE]"
                      name="CHOKE" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[HOURS]"
                      dataType="date"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[HOURS]"
                      name="HOURS" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[THP]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[THP]"
                      name="THP" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[FLP]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[FLP]"
                      name="FLP" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[BSW]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[BSW]"
                      name="BSW" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Ps]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Ps]"
                      name="Ps" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Pwf]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Pwf]"
                      name="Pwf" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[BHT]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[BHT]"
                      name="BHT" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[DP]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[DP]"
                      name="DP" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[OIL]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[OIL]"
                      name="OIL" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[GAS]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[GAS]"
                      name="GAS" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[WATER]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[WATER]"
                      name="WATER" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[APIO]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[APIO]"
                      name="APIO" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Pump Frequency (Hz)]"
                      dataType="r8"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Pump Frequency (Hz)]"
                      name="Pump Frequency (Hz)" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Comment]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[Comment]"
                      name="Comment" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[F5]"
                      dataType="date"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Error Output].Columns[F5]"
                      name="F5" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWellData\CFBWellData MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBWellData MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CFBWellDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWellData\CFBWellData MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[UpdatedRsv]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="UpdatedRsv"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Rsv]"
                      lineageId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Match Output].Columns[UpdatedRsv]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Well]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Well"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Well]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[CHOKE]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CHOKE"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CHOKE]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[CHOKE]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[THP]"
                      cachedDataType="r8"
                      cachedName="THP"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[THP]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[THP]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[FLP]"
                      cachedDataType="r8"
                      cachedName="FLP"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FLP]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[FLP]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[BSW]"
                      cachedDataType="r8"
                      cachedName="BSW"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BSW]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[BSW]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Ps]"
                      cachedDataType="r8"
                      cachedName="Ps"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Ps]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Ps]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Pwf]"
                      cachedDataType="r8"
                      cachedName="Pwf"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Pwf]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Pwf]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[BHT]"
                      cachedDataType="r8"
                      cachedName="BHT"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BHT]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[BHT]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[DP]"
                      cachedDataType="r8"
                      cachedName="DP"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DP]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[DP]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[OIL]"
                      cachedDataType="r8"
                      cachedName="OIL"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[OIL]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[OIL]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[GAS]"
                      cachedDataType="r8"
                      cachedName="GAS"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GAS]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[GAS]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[WATER]"
                      cachedDataType="r8"
                      cachedName="WATER"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WATER]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[WATER]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[APIO]"
                      cachedDataType="r8"
                      cachedName="APIO"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[API]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[APIO]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Pump Frequency (Hz)]"
                      cachedDataType="r8"
                      cachedName="Pump Frequency (Hz)"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PumpFrequency]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Pump Frequency (Hz)]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Comment]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Comment"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Comment]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[HOURS_ONLINE]"
                      cachedDataType="date"
                      cachedName="HOURS_ONLINE"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[HOURS_Online]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[HOURS_ONLINE]" />
                    <inputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[HOURS_OFFLINE]"
                      cachedDataType="date"
                      cachedName="HOURS_OFFLINE"
                      externalMetadataColumnId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[HOURS_Offline]"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[HOURS_OFFLINE]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Rsv]"
                      dataType="nText"
                      name="Rsv" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CHOKE]"
                      dataType="nText"
                      name="CHOKE" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[THP]"
                      dataType="nText"
                      name="THP" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FLP]"
                      dataType="nText"
                      name="FLP" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BSW]"
                      dataType="nText"
                      name="BSW" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Ps]"
                      dataType="nText"
                      name="Ps" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Pwf]"
                      dataType="nText"
                      name="Pwf" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BHT]"
                      dataType="nText"
                      name="BHT" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DP]"
                      dataType="nText"
                      name="DP" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[OIL]"
                      dataType="r8"
                      name="OIL" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GAS]"
                      dataType="r8"
                      name="GAS" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WATER]"
                      dataType="r8"
                      name="WATER" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[API]"
                      dataType="nText"
                      name="API" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PumpFrequency]"
                      dataType="nText"
                      name="PumpFrequency" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      dataType="nText"
                      name="Comment" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[HOURS_Online]"
                      dataType="nText"
                      name="HOURS_Online" />
                    <externalMetadataColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[HOURS_Offline]"
                      dataType="nText"
                      name="HOURS_Offline" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWellData\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from CFBWellDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from CFBWellDatas) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWellData\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBWellData\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWellData\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBWellData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBWellData\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBWellData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWellData\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBWellData\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWellData\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CFBWellData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CFBWellData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWellData\Data Enrichment"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Data Enrichment"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[WellTestEnrichmentDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[WellTestEnrichmentDatas]) [refTable]
where [refTable].[Well] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Well" dataType="DT_WSTR" length="15" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Rsv" dataType="DT_WSTR" length="15" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TimeStamp" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Well]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CFBWellData\Data Enrichment.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CFBWellData\Data Enrichment.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWellData\Data Enrichment.Inputs[Lookup Input].Columns[Well]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Well"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Well]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Well</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CFBWellData\Data Enrichment.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Match Output].Columns[UpdatedRsv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="15"
                      lineageId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Match Output].Columns[UpdatedRsv]"
                      name="UpdatedRsv"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Rsv</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWellData\Data Enrichment.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CFBWellData\Data Enrichment.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CFBWellData\Data Enrichment.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWellData\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBWellData\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CFBWellData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWellData\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CFBWellData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWellData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CFBWellData\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CFBWellData\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Well]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Well"
                      lineageId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Well]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CFBWellData\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CFBWellData\CFBWellData.Outputs[Excel Source Output].Columns[Well]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Well)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWellData\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CFBWellData.Paths[Conditional Split Default Output]"
              endId="Package\CFBWellData\Data Enrichment.Inputs[Lookup Input]"
              name="Conditional Split Default Output"
              startId="Package\CFBWellData\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CFBWellData.Paths[Data Conversion Output]"
              endId="Package\CFBWellData\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CFBWellData\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CFBWellData.Paths[Derived Column Output]"
              endId="Package\CFBWellData\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CFBWellData\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CFBWellData.Paths[Excel Source Output]"
              endId="Package\CFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CFBWellData\CFBWellData.Outputs[Excel Source Output]" />
            <path
              refId="Package\CFBWellData.Paths[Lookup Match Output]"
              endId="Package\CFBWellData\Derived Column.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\CFBWellData\Data Enrichment.Outputs[Lookup Match Output]" />
            <path
              refId="Package\CFBWellData.Paths[Lookup No Match Output]"
              endId="Package\CFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CFBWellData\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CONSUMABLESANALYSIS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{AD4BE245-A609-4879-9776-DBB31D8C13D2}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="CONSUMABLESANALYSIS">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\CONSUMABLESANALYSIS\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CONSUMABLESANALYSIS</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CONSUMABLESANALYSIS) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate R2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CONSUMABLESANALYSIS</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CONSUMABLESANALYSIS) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate R3"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from CONSUMABLESANALYSIS</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from CONSUMABLESANALYSIS) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CONSUMABLESANALYSIS"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A281:Y284]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Parameters]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Parameters]"
                      name="Parameters"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[PrevROB]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[(Prev#Day)]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[PrevROB]"
                      name="PrevROB"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Produced]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F8]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Produced]"
                      name="Produced"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Received]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F11]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Received]"
                      name="Received"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[DailyConsumption]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[Consumption]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[DailyConsumption]"
                      name="DailyConsumption"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[ConsumptionYTD]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[YTD]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[ConsumptionYTD]"
                      name="ConsumptionYTD"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[ROB]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F17]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[ROB]"
                      name="ROB"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[(Prev#Day)]"
                      dataType="r8"
                      name="(Prev#Day)" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="r8"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="r8"
                      name="F9" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F12]"
                      dataType="r8"
                      name="F12" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="r8"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[Consumption]"
                      dataType="r8"
                      name="Consumption" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F15]"
                      dataType="r8"
                      name="F15" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="r8"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="r8"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F18]"
                      dataType="r8"
                      name="F18" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="r8"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="r8"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="r8"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F22]"
                      dataType="r8"
                      name="F22" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="r8"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="r8"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].ExternalColumns[YTD]"
                      dataType="r8"
                      name="YTD" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[(Prev#Day)]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[(Prev#Day)]"
                      name="(Prev#Day)" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[F8]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[F8]"
                      name="F8" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[F11]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[F11]"
                      name="F11" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[Consumption]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[Consumption]"
                      name="Consumption" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[YTD]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[YTD]"
                      name="YTD" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[F17]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Error Output].Columns[F17]"
                      name="F17" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CONSUMABLESANALYSIS MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CONSUMABLESANALYSIS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[PrevROB]"
                      cachedDataType="r8"
                      cachedName="PrevROB"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PrevROB]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[PrevROB]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[Produced]"
                      cachedDataType="r8"
                      cachedName="Produced"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Produced]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Produced]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[Received]"
                      cachedDataType="r8"
                      cachedName="Received"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Received]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Received]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[DailyConsumption]"
                      cachedDataType="r8"
                      cachedName="DailyConsumption"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DailyConsumption]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[DailyConsumption]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[ConsumptionYTD]"
                      cachedDataType="r8"
                      cachedName="ConsumptionYTD"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ConsumptionYTD]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[ConsumptionYTD]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[ROB]"
                      cachedDataType="r8"
                      cachedName="ROB"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ROB]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[ROB]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].Columns[Category]"
                      cachedDataType="wstr"
                      cachedLength="9"
                      cachedName="Category"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[Category]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                      dataType="nText"
                      name="Category" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PrevROB]"
                      dataType="nText"
                      name="PrevROB" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Produced]"
                      dataType="dbTimeStamp"
                      name="Produced" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Received]"
                      dataType="nText"
                      name="Received" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DailyConsumption]"
                      dataType="dbTimeStamp"
                      name="DailyConsumption" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ROB]"
                      dataType="nText"
                      name="ROB" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ConsumptionYTD]"
                      dataType="dbTimeStamp"
                      name="ConsumptionYTD" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CONSUMABLESANALYSIS MSSQL R2"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CONSUMABLESANALYSIS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[Category]"
                      cachedDataType="wstr"
                      cachedLength="11"
                      cachedName="Category"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[Category]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[PrevROB]"
                      cachedDataType="r8"
                      cachedName="PrevROB"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[PrevROB]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[PrevROB]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[Produced]"
                      cachedDataType="r8"
                      cachedName="Produced"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Produced]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Produced]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[Received]"
                      cachedDataType="r8"
                      cachedName="Received"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Received]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Received]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[DailyConsumption]"
                      cachedDataType="r8"
                      cachedName="DailyConsumption"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[DailyConsumption]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[DailyConsumption]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[ROB]"
                      cachedDataType="r8"
                      cachedName="ROB"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ROB]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[ROB]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].Columns[ConsumptionYTD]"
                      cachedDataType="r8"
                      cachedName="ConsumptionYTD"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ConsumptionYTD]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[ConsumptionYTD]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                      dataType="nText"
                      name="Category" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[PrevROB]"
                      dataType="nText"
                      name="PrevROB" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Produced]"
                      dataType="dbTimeStamp"
                      name="Produced" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Received]"
                      dataType="nText"
                      name="Received" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[DailyConsumption]"
                      dataType="dbTimeStamp"
                      name="DailyConsumption" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ROB]"
                      dataType="nText"
                      name="ROB" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ConsumptionYTD]"
                      dataType="dbTimeStamp"
                      name="ConsumptionYTD" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CONSUMABLESANALYSIS MSSQL R3"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[CONSUMABLESANALYSIS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[Category]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="Category"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[Category]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[PrevROB]"
                      cachedDataType="r8"
                      cachedName="PrevROB"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[PrevROB]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[PrevROB]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[Produced]"
                      cachedDataType="r8"
                      cachedName="Produced"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[Produced]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Produced]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[DailyConsumption]"
                      cachedDataType="r8"
                      cachedName="DailyConsumption"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[DailyConsumption]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[DailyConsumption]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[ROB]"
                      cachedDataType="r8"
                      cachedName="ROB"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[ROB]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[ROB]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[ConsumptionYTD]"
                      cachedDataType="r8"
                      cachedName="ConsumptionYTD"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[ConsumptionYTD]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[ConsumptionYTD]" />
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].Columns[Received]"
                      cachedDataType="r8"
                      cachedName="Received"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[Received]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Received]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                      dataType="nText"
                      name="Category" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[PrevROB]"
                      dataType="nText"
                      name="PrevROB" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[Produced]"
                      dataType="dbTimeStamp"
                      name="Produced" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[Received]"
                      dataType="nText"
                      name="Received" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[DailyConsumption]"
                      dataType="dbTimeStamp"
                      name="DailyConsumption" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[ROB]"
                      dataType="nText"
                      name="ROB" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input].ExternalColumns[ConsumptionYTD]"
                      dataType="dbTimeStamp"
                      name="ConsumptionYTD" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CONSUMABLESANALYSIS R2"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A286:Y289]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[PrevROB]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F5]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[PrevROB]"
                      name="PrevROB"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Produced]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F8]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Produced]"
                      name="Produced"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Received]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F11]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Received]"
                      name="Received"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[DailyConsumption]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F14]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[DailyConsumption]"
                      name="DailyConsumption"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[ROB]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F17]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[ROB]"
                      name="ROB"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Parameters]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[Virini Prem]"
                      length="255"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Parameters]"
                      name="Parameters"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[ConsumptionYTD]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F25]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[ConsumptionYTD]"
                      name="ConsumptionYTD"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="r8"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="r8"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="r8"
                      name="F9" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F12]"
                      dataType="r8"
                      name="F12" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="r8"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F15]"
                      dataType="r8"
                      name="F15" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="r8"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="r8"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[Virini Prem]"
                      dataType="wstr"
                      length="255"
                      name="Virini Prem" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F18]"
                      dataType="r8"
                      name="F18" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="r8"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="r8"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="r8"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F22]"
                      dataType="r8"
                      name="F22" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="r8"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="r8"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].ExternalColumns[F25]"
                      dataType="r8"
                      name="F25" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[Virini Prem]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[Virini Prem]"
                      name="Virini Prem" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F5]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F5]"
                      name="F5" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F8]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F8]"
                      name="F8" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F11]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F11]"
                      name="F11" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F14]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F14]"
                      name="F14" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F17]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F17]"
                      name="F17" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F25]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[F25]"
                      name="F25" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="CONSUMABLESANALYSIS R3"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A291:Y293]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[PrevROB]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F5]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[PrevROB]"
                      name="PrevROB"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Produced]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F8]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Produced]"
                      name="Produced"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Received]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F11]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Received]"
                      name="Received"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[DailyConsumption]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F14]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[DailyConsumption]"
                      name="DailyConsumption"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[ROB]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F17]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[ROB]"
                      name="ROB"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[ConsumptionYTD]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F25]"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[ConsumptionYTD]"
                      name="ConsumptionYTD"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Parameters]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[WFB]"
                      length="255"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Parameters]"
                      name="Parameters"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="r8"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="r8"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="r8"
                      name="F9" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F12]"
                      dataType="r8"
                      name="F12" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="r8"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F15]"
                      dataType="r8"
                      name="F15" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="r8"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="r8"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F18]"
                      dataType="r8"
                      name="F18" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="r8"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="r8"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="r8"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F22]"
                      dataType="r8"
                      name="F22" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="r8"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="r8"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[F25]"
                      dataType="r8"
                      name="F25" />
                    <externalMetadataColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].ExternalColumns[WFB]"
                      dataType="wstr"
                      length="255"
                      name="WFB" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[WFB]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[WFB]"
                      name="WFB" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F5]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F5]"
                      name="F5" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F8]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F8]"
                      name="F8" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F11]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F11]"
                      name="F11" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F14]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F14]"
                      name="F14" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F17]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F17]"
                      name="F17" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F25]"
                      dataType="r8"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[F25]"
                      name="F25" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Data Conversion R2"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion R2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Data Conversion R3"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion R3"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="9"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output].Columns[Category]"
                      name="Category"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Veer Prem"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Veer Prem"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Derived Column R2"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column R2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Derived Column R2.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="11"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output].Columns[Category]"
                      name="Category"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Virini Prem"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Virini Prem"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Derived Column R2.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Derived Column R3"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column R3"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Derived Column R3.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="3"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output].Columns[Category]"
                      name="Category"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"WFB"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"WFB"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Derived Column R3.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Parameters]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output].Columns[Parameters]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Parameters)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells R2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Inputs[Conditional Split Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Parameters]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output].Columns[Parameters]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Parameters)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells R3"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Inputs[Conditional Split Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      lineageId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Parameters]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output].Columns[Parameters]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Parameters)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Conditional Split Default Output]"
              endId="Package\CONSUMABLESANALYSIS\Derived Column R2.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Conditional Split Default Output1]"
              endId="Package\CONSUMABLESANALYSIS\Derived Column R3.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Conditional Split Default Output2]"
              endId="Package\CONSUMABLESANALYSIS\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Data Conversion Output]"
              endId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CONSUMABLESANALYSIS\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Data Conversion Output1]"
              endId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Data Conversion Output2]"
              endId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Outputs[Data Conversion Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Derived Column Output]"
              endId="Package\CONSUMABLESANALYSIS\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CONSUMABLESANALYSIS\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Derived Column Output1]"
              endId="Package\CONSUMABLESANALYSIS\Data Conversion R3.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CONSUMABLESANALYSIS\Derived Column R3.Outputs[Derived Column Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Derived Column Output2]"
              endId="Package\CONSUMABLESANALYSIS\Data Conversion R2.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\CONSUMABLESANALYSIS\Derived Column R2.Outputs[Derived Column Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Excel Source Output]"
              endId="Package\CONSUMABLESANALYSIS\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS.Outputs[Excel Source Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Excel Source Output1]"
              endId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2.Outputs[Excel Source Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Excel Source Output2]"
              endId="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3.Outputs[Excel Source Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Lookup No Match Output]"
              endId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CONSUMABLESANALYSIS\Check For Duplicate R3.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Lookup No Match Output1]"
              endId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CONSUMABLESANALYSIS\Check For Duplicate.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\CONSUMABLESANALYSIS.Paths[Lookup No Match Output2]"
              endId="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\CONSUMABLESANALYSIS\Check For Duplicate R2.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DailyProductionSummary"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{67F9F49C-7C8D-4353-A21C-4DD42A4A6C4A}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DailyProductionSummary">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DailyProductionSummary\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from DailyProductionSummaries</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from DailyProductionSummaries) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DailyProductionSummary\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DailyProductionSummary\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DailyProductionSummary\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\DailyProductionSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\DailyProductionSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\DailyProductionSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DailyProductionSummary\DailyProductionSummary"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="DailyProductionSummary"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A15:Y18]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DailyProductionSummary\DailyProductionSummary.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[ReportParameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[UNIT]"
                      length="255"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[ReportParameter]"
                      name="ReportParameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[MopuMeter]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[BBLS]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[MopuMeter]"
                      name="MopuMeter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[WaterInjection]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[BBLS1]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[WaterInjection]"
                      name="WaterInjection"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[Oilinventory]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[BBLS2]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[Oilinventory]"
                      name="Oilinventory"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[GasProduced]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[MMSCF]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[GasProduced]"
                      name="GasProduced"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[GasUtilized]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[MMSCF1]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[GasUtilized]"
                      name="GasUtilized"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[GasFlared]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[MMSCF2]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[GasFlared]"
                      name="GasFlared"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[ProducedWater]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[BBLS3]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[ProducedWater]"
                      name="ProducedWater"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[WfbUptime]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[HR:MM]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[WfbUptime]"
                      name="WfbUptime"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[MopuUptime]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[HR:MM1]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[MopuUptime]"
                      name="MopuUptime"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[WaterInjectionUptime]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[HR:MM2]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[WaterInjectionUptime]"
                      name="WaterInjectionUptime"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="r8"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="r8"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="r8"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="r8"
                      name="F9" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="r8"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="r8"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="r8"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="r8"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="date"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F22]"
                      dataType="date"
                      name="F22" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[F24]"
                      dataType="date"
                      name="F24" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[UNIT]"
                      dataType="wstr"
                      length="255"
                      name="UNIT" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[BBLS]"
                      dataType="r8"
                      name="BBLS" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[BBLS1]"
                      dataType="r8"
                      name="BBLS1" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[BBLS2]"
                      dataType="r8"
                      name="BBLS2" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[MMSCF]"
                      dataType="r8"
                      name="MMSCF" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[MMSCF1]"
                      dataType="r8"
                      name="MMSCF1" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[MMSCF2]"
                      dataType="r8"
                      name="MMSCF2" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[BBLS3]"
                      dataType="r8"
                      name="BBLS3" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[HR:MM]"
                      dataType="date"
                      name="HR:MM" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[HR:MM1]"
                      dataType="date"
                      name="HR:MM1" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].ExternalColumns[HR:MM2]"
                      dataType="date"
                      name="HR:MM2" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[UNIT]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[UNIT]"
                      name="UNIT" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[BBLS]"
                      dataType="r8"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[BBLS]"
                      name="BBLS" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[BBLS1]"
                      dataType="r8"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[BBLS1]"
                      name="BBLS1" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[BBLS2]"
                      dataType="r8"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[BBLS2]"
                      name="BBLS2" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[MMSCF]"
                      dataType="r8"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[MMSCF]"
                      name="MMSCF" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[MMSCF1]"
                      dataType="r8"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[MMSCF1]"
                      name="MMSCF1" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[MMSCF2]"
                      dataType="r8"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[MMSCF2]"
                      name="MMSCF2" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[BBLS3]"
                      dataType="r8"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[BBLS3]"
                      name="BBLS3" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[HR:MM]"
                      dataType="date"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[HR:MM]"
                      name="HR:MM" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[HR:MM1]"
                      dataType="date"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[HR:MM1]"
                      name="HR:MM1" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[HR:MM2]"
                      dataType="date"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[HR:MM2]"
                      name="HR:MM2" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="DailyProductionSummary MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DailyProductionSummaries]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[ReportParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ReportParameter"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[ReportParameter]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[MopuMeter]"
                      cachedDataType="r8"
                      cachedName="MopuMeter"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MopuMeter]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[MopuMeter]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[WaterInjection]"
                      cachedDataType="r8"
                      cachedName="WaterInjection"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WaterInjection]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[WaterInjection]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[Oilinventory]"
                      cachedDataType="r8"
                      cachedName="Oilinventory"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Oilinventory]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[Oilinventory]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[GasProduced]"
                      cachedDataType="r8"
                      cachedName="GasProduced"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasProduced]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[GasProduced]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[GasUtilized]"
                      cachedDataType="r8"
                      cachedName="GasUtilized"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasUtilized]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[GasUtilized]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[GasFlared]"
                      cachedDataType="r8"
                      cachedName="GasFlared"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlared]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[GasFlared]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[ProducedWater]"
                      cachedDataType="r8"
                      cachedName="ProducedWater"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ProducedWater]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[ProducedWater]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[WfbUptime]"
                      cachedDataType="date"
                      cachedName="WfbUptime"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WfbUptime]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[WfbUptime]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[MopuUptime]"
                      cachedDataType="date"
                      cachedName="MopuUptime"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MopuUptime]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[MopuUptime]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[WaterInjectionUptime]"
                      cachedDataType="date"
                      cachedName="WaterInjectionUptime"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WaterInjectionUptime]"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output].Columns[WaterInjectionUptime]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      dataType="nText"
                      name="ReportParameter" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MopuMeter]"
                      dataType="nText"
                      name="MopuMeter" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WaterInjection]"
                      dataType="nText"
                      name="WaterInjection" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Oilinventory]"
                      dataType="nText"
                      name="Oilinventory" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasProduced]"
                      dataType="nText"
                      name="GasProduced" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasUtilized]"
                      dataType="nText"
                      name="GasUtilized" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlared]"
                      dataType="nText"
                      name="GasFlared" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ProducedWater]"
                      dataType="nText"
                      name="ProducedWater" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WfbUptime]"
                      dataType="nText"
                      name="WfbUptime" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MopuUptime]"
                      dataType="nText"
                      name="MopuUptime" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WaterInjectionUptime]"
                      dataType="nText"
                      name="WaterInjectionUptime" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DailyProductionSummary\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DailyProductionSummary\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DailyProductionSummary\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\DailyProductionSummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\DailyProductionSummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DailyProductionSummary\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DailyProductionSummary\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DailyProductionSummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DailyProductionSummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DailyProductionSummary.Paths[Data Conversion Output]"
              endId="Package\DailyProductionSummary\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\DailyProductionSummary\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\DailyProductionSummary.Paths[Derived Column Output]"
              endId="Package\DailyProductionSummary\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\DailyProductionSummary\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\DailyProductionSummary.Paths[Excel Source Output]"
              endId="Package\DailyProductionSummary\Derived Column.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\DailyProductionSummary\DailyProductionSummary.Outputs[Excel Source Output]" />
            <path
              refId="Package\DailyProductionSummary.Paths[Lookup No Match Output]"
              endId="Package\DailyProductionSummary\DailyProductionSummary MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\DailyProductionSummary\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DailySafetySummary"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{75B1B1D7-E124-42A5-8FF5-D35198427EA1}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DailySafetySummary">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DailySafetySummary\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from DailySafetySummaries</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from DailySafetySummaries) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DailySafetySummary\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DailySafetySummary\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DailySafetySummary\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\DailySafetySummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\DailySafetySummary\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\DailySafetySummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DailySafetySummary\DailySafetySummary"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="DailySafetySummary"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A20:A26]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DailySafetySummary\DailySafetySummary.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Output].Columns[SafetyReport]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Output].ExternalColumns[SAFETY: ]"
                      length="255"
                      lineageId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Output].Columns[SafetyReport]"
                      name="SafetyReport"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Output].ExternalColumns[SAFETY: ]"
                      dataType="wstr"
                      length="255"
                      name="SAFETY: " />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Error Output].Columns[SAFETY: ]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Error Output].Columns[SAFETY: ]"
                      name="SAFETY: " />
                    <outputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DailySafetySummary\DailySafetySummary MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="DailySafetySummary MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DailySafetySummaries]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].Columns[SafetyReport]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SafetyReport"
                      externalMetadataColumnId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[SafetyReport]"
                      lineageId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Output].Columns[SafetyReport]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[SafetyReport]"
                      dataType="nText"
                      name="SafetyReport" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\DailySafetySummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailySafetySummary\DailySafetySummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\DailySafetySummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DailySafetySummary\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DailySafetySummary\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DailySafetySummary\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\DailySafetySummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\DailySafetySummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DailySafetySummary\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DailySafetySummary\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DailySafetySummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DailySafetySummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DailySafetySummary\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DailySafetySummary\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DailySafetySummary\Remove Empty Cells.Inputs[Conditional Split Input].Columns[SafetyReport]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SafetyReport"
                      lineageId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Output].Columns[SafetyReport]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DailySafetySummary\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\DailySafetySummary\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Output].Columns[SafetyReport]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(SafetyReport)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailySafetySummary\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\DailySafetySummary\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DailySafetySummary\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\DailySafetySummary\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DailySafetySummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DailySafetySummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DailySafetySummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DailySafetySummary.Paths[Conditional Split Default Output]"
              endId="Package\DailySafetySummary\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\DailySafetySummary\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\DailySafetySummary.Paths[Data Conversion Output]"
              endId="Package\DailySafetySummary\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\DailySafetySummary\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\DailySafetySummary.Paths[Derived Column Output]"
              endId="Package\DailySafetySummary\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\DailySafetySummary\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\DailySafetySummary.Paths[Excel Source Output]"
              endId="Package\DailySafetySummary\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\DailySafetySummary\DailySafetySummary.Outputs[Excel Source Output]" />
            <path
              refId="Package\DailySafetySummary.Paths[Lookup No Match Output]"
              endId="Package\DailySafetySummary\DailySafetySummary MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\DailySafetySummary\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DownTimeLossReason"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9E5FC49E-B69A-4178-BDA7-451C3DB92F68}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DownTimeLossReason">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DownTimeLossReason\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from DailySafetySummaries</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from DailySafetySummaries) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DownTimeLossReason\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DownTimeLossReason\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DownTimeLossReason\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\DownTimeLossReason\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\DownTimeLossReason\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\DownTimeLossReason\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DownTimeLossReason\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DownTimeLossReason\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DownTimeLossReason\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\DownTimeLossReason\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\DownTimeLossReason\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DownTimeLossReason\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DownTimeLossReason\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DownTimeLossReason\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DownTimeLossReason\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DownTimeLossReason\DownTimeLossReason"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="DownTimeLossReason"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A27:A44]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DownTimeLossReason\DownTimeLossReason.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Output].Columns[DownTimeReport]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Output].ExternalColumns[Downtime/Loss/Reason: ]"
                      length="255"
                      lineageId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Output].Columns[DownTimeReport]"
                      name="DownTimeReport"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Output].ExternalColumns[Downtime/Loss/Reason: ]"
                      dataType="wstr"
                      length="255"
                      name="Downtime/Loss/Reason: " />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Error Output].Columns[Downtime/Loss/Reason: ]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Error Output].Columns[Downtime/Loss/Reason: ]"
                      name="Downtime/Loss/Reason: " />
                    <outputColumn
                      refId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DownTimeLossReason\OperationsSummary MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OperationsSummary MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[OperationsSummaries]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[OperationsReport]"
                      dataType="nText"
                      name="OperationsReport" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DownTimeLossReason\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DownTimeLossReason\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DownTimeLossReason\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DownTimeLossReason\Remove Empty Cells.Inputs[Conditional Split Input].Columns[DownTimeReport]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="DownTimeReport"
                      lineageId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Output].Columns[DownTimeReport]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DownTimeLossReason\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\DownTimeLossReason\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Output].Columns[DownTimeReport]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(DownTimeReport)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DownTimeLossReason\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\DownTimeLossReason\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DownTimeLossReason\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\DownTimeLossReason\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DownTimeLossReason\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DownTimeLossReason\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DownTimeLossReason\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DownTimeLossReason.Paths[Conditional Split Default Output]"
              endId="Package\DownTimeLossReason\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\DownTimeLossReason\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\DownTimeLossReason.Paths[Data Conversion Output]"
              endId="Package\DownTimeLossReason\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\DownTimeLossReason\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\DownTimeLossReason.Paths[Derived Column Output]"
              endId="Package\DownTimeLossReason\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\DownTimeLossReason\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\DownTimeLossReason.Paths[Excel Source Output]"
              endId="Package\DownTimeLossReason\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\DownTimeLossReason\DownTimeLossReason.Outputs[Excel Source Output]" />
            <path
              refId="Package\DownTimeLossReason.Paths[Lookup No Match Output]"
              endId="Package\DownTimeLossReason\OperationsSummary MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\DownTimeLossReason\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\E27GasLift"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{AB703CB8-7ECC-4A28-B403-49C9B2EB8860}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="E27GasLift">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\E27GasLift\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from E27GasLift</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from E27GasLift) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\E27GasLift\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\E27GasLift\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\E27GasLift\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\E27GasLift\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\E27GasLift\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\E27GasLift\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\E27GasLift\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\E27GasLift\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\E27GasLift\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\E27GasLift\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\E27GasLift\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\E27GasLift\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\E27GasLift\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\E27GasLift\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\E27GasLift\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\E27GasLift\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\E27GasLift\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\E27GasLift\E27GasLift"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="E27GasLift"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$AE168:AG171]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\E27GasLift\E27GasLift.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[E-27 Gas Lift Rate]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].ExternalColumns[E-27 Gas Lift Rate]"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[E-27 Gas Lift Rate]"
                      name="E-27 Gas Lift Rate"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[blpd]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].ExternalColumns[blpd]"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[blpd]"
                      name="blpd"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[interpolation result is]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].ExternalColumns[interpolation result is]"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[interpolation result is]"
                      name="interpolation result is"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].ExternalColumns[E-27 Gas Lift Rate]"
                      dataType="r8"
                      name="E-27 Gas Lift Rate" />
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].ExternalColumns[blpd]"
                      dataType="r8"
                      name="blpd" />
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].ExternalColumns[interpolation result is]"
                      dataType="r8"
                      name="interpolation result is" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[E-27 Gas Lift Rate]"
                      dataType="r8"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[E-27 Gas Lift Rate]"
                      name="E-27 Gas Lift Rate" />
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[blpd]"
                      dataType="r8"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[blpd]"
                      name="blpd" />
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[interpolation result is]"
                      dataType="r8"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[interpolation result is]"
                      name="interpolation result is" />
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\E27GasLift\E27GasLift MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="E27GasLift MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[E27GasLift]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\E27GasLift\E27GasLift MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].Columns[E-27 Gas Lift Rate]"
                      cachedDataType="r8"
                      cachedName="E-27 Gas Lift Rate"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasLift]"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[E-27 Gas Lift Rate]" />
                    <inputColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].Columns[blpd]"
                      cachedDataType="r8"
                      cachedName="blpd"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Blpd]"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[blpd]" />
                    <inputColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].Columns[interpolation result is]"
                      cachedDataType="r8"
                      cachedName="interpolation result is"
                      externalMetadataColumnId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[InterpolationResult]"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[interpolation result is]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasLift]"
                      dataType="nText"
                      name="GasLift" />
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Blpd]"
                      dataType="nText"
                      name="Blpd" />
                    <externalMetadataColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[InterpolationResult]"
                      dataType="nText"
                      name="InterpolationResult" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\E27GasLift\E27GasLift MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\E27GasLift MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\E27GasLift\E27GasLift MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\E27GasLift MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\E27GasLift\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\E27GasLift\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\E27GasLift\Remove Empty Cells.Inputs[Conditional Split Input].Columns[E-27 Gas Lift Rate]"
                      cachedDataType="r8"
                      cachedName="E-27 Gas Lift Rate"
                      lineageId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[E-27 Gas Lift Rate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\E27GasLift\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\E27GasLift\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\E27GasLift\E27GasLift.Outputs[Excel Source Output].Columns[E-27 Gas Lift Rate]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL([E-27 Gas Lift Rate])</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\E27GasLift\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\E27GasLift\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\E27GasLift\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\E27GasLift\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\E27GasLift\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\E27GasLift\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\E27GasLift\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\E27GasLift.Paths[Conditional Split Default Output]"
              endId="Package\E27GasLift\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\E27GasLift\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\E27GasLift.Paths[Data Conversion Output]"
              endId="Package\E27GasLift\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\E27GasLift\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\E27GasLift.Paths[Derived Column Output]"
              endId="Package\E27GasLift\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\E27GasLift\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\E27GasLift.Paths[Excel Source Output]"
              endId="Package\E27GasLift\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\E27GasLift\E27GasLift.Outputs[Excel Source Output]" />
            <path
              refId="Package\E27GasLift.Paths[Lookup No Match Output]"
              endId="Package\E27GasLift\E27GasLift MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\E27GasLift\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\EHSSReport"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{FA8CA3CE-27CF-4963-8FED-60E5518B8C6C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="EHSSReport">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\EHSSReport\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from EHSSReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from EHSSReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\EHSSReport\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Check For Duplicate 1"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from EHSSReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from EHSSReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\Check For Duplicate 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\EHSSReport\Check For Duplicate 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Check For Duplicate 1 1"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate 1 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from EHSSReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from EHSSReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\Check For Duplicate 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\EHSSReport\Check For Duplicate 1 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1 1.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate 1 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Check For Duplicate 1 1 1"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate 1 1 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from EHSSReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from EHSSReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\Check For Duplicate 1 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\EHSSReport\Check For Duplicate 1 1 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1 1 1.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate 1 1 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\EHSSReport\Check For Duplicate 1 1 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\EHSSReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\EHSSReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Data Conversion 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Data Conversion 1.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\EHSSReport\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\EHSSReport\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Data Conversion 1 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 1 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Data Conversion 1 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Data Conversion 1 1.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\EHSSReport\Data Conversion 1 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\EHSSReport\Data Conversion 1 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Data Conversion 1 1 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 1 1 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Data Conversion 1 1 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Data Conversion 1 1 1.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\EHSSReport\Data Conversion 1 1 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\EHSSReport\Data Conversion 1 1 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\EHSSReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="19"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"OIV VEER PREM P.O.B"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"OIV VEER PREM P.O.B"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\EHSSReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Derived Column 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Derived Column 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\EHSSReport\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="15"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"OIV VIRINI PREM"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"OIV VIRINI PREM"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\EHSSReport\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Derived Column 1 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 1 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Derived Column 1 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\EHSSReport\Derived Column 1 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="15"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"OIV VIRINI PREM"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"OIV VIRINI PREM"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\EHSSReport\Derived Column 1 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Derived Column 1 1 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 1 1 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Derived Column 1 1 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\EHSSReport\Derived Column 1 1 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="13"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"LTI Free Days"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"LTI Free Days"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportParameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="13"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportParameter]"
                      name="ReportParameter"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"LTI Free Days"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"LTI Free Days"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\EHSSReport\Derived Column 1 1 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\EHSSReport"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EHSSReport"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A538:D543]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\EHSSReport.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].Columns[ReportParameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].ExternalColumns[OIV VEER PREM P#O#B#]"
                      length="255"
                      lineageId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].Columns[ReportParameter]"
                      name="ReportParameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].Columns[ReportValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].ExternalColumns[F4]"
                      lineageId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].Columns[ReportValue]"
                      name="ReportValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].ExternalColumns[OIV VEER PREM P#O#B#]"
                      dataType="wstr"
                      length="255"
                      name="OIV VEER PREM P#O#B#" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="r8"
                      name="F4" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Error Output].Columns[OIV VEER PREM P#O#B#]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Error Output].Columns[OIV VEER PREM P#O#B#]"
                      name="OIV VEER PREM P#O#B#" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Error Output].Columns[F4]"
                      dataType="r8"
                      lineageId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Error Output].Columns[F4]"
                      name="F4" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\EHSSReport 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EHSSReport 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$E538:H543]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\EHSSReport 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].Columns[ReportValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].ExternalColumns[F4]"
                      lineageId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].Columns[ReportValue]"
                      name="ReportValue"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].Columns[ReportParameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].ExternalColumns[OIV VIRINI PREM]"
                      length="255"
                      lineageId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].Columns[ReportParameter]"
                      name="ReportParameter"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="r8"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].ExternalColumns[OIV VIRINI PREM]"
                      dataType="wstr"
                      length="255"
                      name="OIV VIRINI PREM" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Error Output].Columns[OIV VIRINI PREM]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Error Output].Columns[OIV VIRINI PREM]"
                      name="OIV VIRINI PREM" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Error Output].Columns[F4]"
                      dataType="r8"
                      lineageId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Error Output].Columns[F4]"
                      name="F4" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\EHSSReport 1 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EHSSReport 1 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$I538:N543]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\EHSSReport 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].Columns[MyReportParameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].ExternalColumns[ ]"
                      length="255"
                      lineageId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].Columns[MyReportParameter]"
                      name="MyReportParameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].Columns[MyReportValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].ExternalColumns[F6]"
                      length="255"
                      lineageId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].Columns[MyReportValue]"
                      name="MyReportValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].ExternalColumns[ ]"
                      dataType="wstr"
                      length="255"
                      name=" " />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Error Output].Columns[ ]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Error Output].Columns[ ]"
                      name=" " />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Error Output].Columns[F6]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Error Output].Columns[F6]"
                      name="F6" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\EHSSReport 1 1 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EHSSReport 1 1 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$R538:R539]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\EHSSReport 1 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Output].Columns[ReportValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Output].ExternalColumns[LTI Free Days]"
                      length="255"
                      lineageId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Output].Columns[ReportValue]"
                      name="ReportValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Output].ExternalColumns[LTI Free Days]"
                      dataType="r8"
                      name="LTI Free Days" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Error Output].Columns[LTI Free Days]"
                      dataType="r8"
                      lineageId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Error Output].Columns[LTI Free Days]"
                      name="LTI Free Days" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\EHSSReport MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="EHSSReport MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[EHSSReports]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\EHSSReport MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].Columns[ReportValue]"
                      cachedDataType="r8"
                      cachedName="ReportValue"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportValue]"
                      lineageId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].Columns[ReportValue]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].Columns[ReportParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ReportParameter"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      lineageId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].Columns[ReportParameter]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="19"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output].Columns[ReportCategory]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      dataType="nText"
                      name="ReportParameter" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportValue]"
                      dataType="nText"
                      name="ReportValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\EHSSReport MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\EHSSReport MSSQL 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="EHSSReport MSSQL 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[EHSSReports]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\EHSSReport MSSQL 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].Columns[ReportValue]"
                      cachedDataType="r8"
                      cachedName="ReportValue"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportValue]"
                      lineageId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].Columns[ReportValue]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].Columns[ReportParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ReportParameter"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      lineageId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].Columns[ReportParameter]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output].Columns[ReportCategory]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      dataType="nText"
                      name="ReportParameter" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportValue]"
                      dataType="nText"
                      name="ReportValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\EHSSReport MSSQL 1.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\EHSSReport MSSQL 1 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="EHSSReport MSSQL 1 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[EHSSReports]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output].Columns[ReportCategory]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].Columns[MyReportParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MyReportParameter"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      lineageId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].Columns[MyReportParameter]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].Columns[MyReportValue]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MyReportValue"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportValue]"
                      lineageId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].Columns[MyReportValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      dataType="nText"
                      name="ReportParameter" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportValue]"
                      dataType="nText"
                      name="ReportValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport MSSQL 1 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport MSSQL 1 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="EHSSReport MSSQL 1 1 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[EHSSReports]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].Columns[ReportValue]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ReportValue"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportValue]"
                      lineageId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Output].Columns[ReportValue]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].Columns[ReportParameter]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ReportParameter"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportParameter]" />
                    <inputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="13"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output].Columns[ReportCategory]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportParameter]"
                      dataType="nText"
                      name="ReportParameter" />
                    <externalMetadataColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportValue]"
                      dataType="nText"
                      name="ReportValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Remove Empty Cells.Inputs[Conditional Split Input].Columns[ReportParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ReportParameter"
                      lineageId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].Columns[ReportParameter]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\EHSSReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\EHSSReport\EHSSReport.Outputs[Excel Source Output].Columns[ReportParameter]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(ReportParameter)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\EHSSReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\EHSSReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Remove Empty Cells 1"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Remove Empty Cells 1.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Remove Empty Cells 1.Inputs[Conditional Split Input].Columns[ReportParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ReportParameter"
                      lineageId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].Columns[ReportParameter]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Remove Empty Cells 1.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\EHSSReport\Remove Empty Cells 1.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output].Columns[ReportParameter]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(ReportParameter)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Remove Empty Cells 1.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\EHSSReport\Remove Empty Cells 1.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Remove Empty Cells 1.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\EHSSReport\Remove Empty Cells 1.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\EHSSReport\Remove Empty Cells 1 1"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells 1 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\EHSSReport\Remove Empty Cells 1 1.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\EHSSReport\Remove Empty Cells 1 1.Inputs[Conditional Split Input].Columns[MyReportParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MyReportParameter"
                      lineageId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].Columns[MyReportParameter]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\EHSSReport\Remove Empty Cells 1 1.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\EHSSReport\Remove Empty Cells 1 1.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output].Columns[MyReportParameter]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(MyReportParameter)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Remove Empty Cells 1 1.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\EHSSReport\Remove Empty Cells 1 1.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\EHSSReport\Remove Empty Cells 1 1.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\EHSSReport\Remove Empty Cells 1 1.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\EHSSReport\Remove Empty Cells 1 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Remove Empty Cells 1 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\EHSSReport\Remove Empty Cells 1 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\EHSSReport\Remove Empty Cells 1 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\EHSSReport.Paths[Conditional Split Default Output]"
              endId="Package\EHSSReport\Derived Column 1 1.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\EHSSReport\Remove Empty Cells 1 1.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\EHSSReport.Paths[Conditional Split Default Output1]"
              endId="Package\EHSSReport\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\EHSSReport\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\EHSSReport.Paths[Conditional Split Default Output2]"
              endId="Package\EHSSReport\Derived Column 1.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\EHSSReport\Remove Empty Cells 1.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\EHSSReport.Paths[Data Conversion Output]"
              endId="Package\EHSSReport\Check For Duplicate 1 1 1.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\EHSSReport\Data Conversion 1 1 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\EHSSReport.Paths[Data Conversion Output1]"
              endId="Package\EHSSReport\Check For Duplicate 1.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\EHSSReport\Data Conversion 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\EHSSReport.Paths[Data Conversion Output2]"
              endId="Package\EHSSReport\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\EHSSReport\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\EHSSReport.Paths[Data Conversion Output3]"
              endId="Package\EHSSReport\Check For Duplicate 1 1.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\EHSSReport\Data Conversion 1 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\EHSSReport.Paths[Derived Column Output3]"
              endId="Package\EHSSReport\Data Conversion 1.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\EHSSReport\Derived Column 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\EHSSReport.Paths[Derived Column Output2]"
              endId="Package\EHSSReport\Data Conversion 1 1.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\EHSSReport\Derived Column 1 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\EHSSReport.Paths[Derived Column Output]"
              endId="Package\EHSSReport\Data Conversion 1 1 1.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\EHSSReport\Derived Column 1 1 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\EHSSReport.Paths[Derived Column Output1]"
              endId="Package\EHSSReport\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\EHSSReport\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\EHSSReport.Paths[Excel Source Output]"
              endId="Package\EHSSReport\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\EHSSReport\EHSSReport.Outputs[Excel Source Output]" />
            <path
              refId="Package\EHSSReport.Paths[Excel Source Output1]"
              endId="Package\EHSSReport\Remove Empty Cells 1.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\EHSSReport\EHSSReport 1.Outputs[Excel Source Output]" />
            <path
              refId="Package\EHSSReport.Paths[Excel Source Output2]"
              endId="Package\EHSSReport\Derived Column 1 1 1.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\EHSSReport\EHSSReport 1 1 1.Outputs[Excel Source Output]" />
            <path
              refId="Package\EHSSReport.Paths[Excel Source Output3]"
              endId="Package\EHSSReport\Remove Empty Cells 1 1.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\EHSSReport\EHSSReport 1 1.Outputs[Excel Source Output]" />
            <path
              refId="Package\EHSSReport.Paths[Lookup No Match Output2]"
              endId="Package\EHSSReport\EHSSReport MSSQL 1 1.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\EHSSReport\Check For Duplicate 1 1.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\EHSSReport.Paths[Lookup No Match Output]"
              endId="Package\EHSSReport\EHSSReport MSSQL 1 1 1.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\EHSSReport\Check For Duplicate 1 1 1.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\EHSSReport.Paths[Lookup No Match Output1]"
              endId="Package\EHSSReport\EHSSReport MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\EHSSReport\Check For Duplicate.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\EHSSReport.Paths[Lookup No Match Output3]"
              endId="Package\EHSSReport\EHSSReport MSSQL 1.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\EHSSReport\Check For Duplicate 1.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\FSCargoWPData"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{D77DF776-1B6D-486C-BEFF-655C01C67814}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="FSCargoWPData">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\FSCargoWPData\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from FSCargoWPDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from FSCargoWPDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSCargoWPData\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FSCargoWPData\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSCargoWPData\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FSCargoWPData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FSCargoWPData\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FSCargoWPData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\Check For Duplicate R2"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate R2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from FSCargoWPDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from FSCargoWPDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSCargoWPData\Check For Duplicate R2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FSCargoWPData\Check For Duplicate R2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSCargoWPData\Check For Duplicate R2.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FSCargoWPData\Check For Duplicate R2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FSCargoWPData\Check For Duplicate R2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FSCargoWPData\Check For Duplicate R2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSCargoWPData\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSCargoWPData\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\FSCargoWPData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\FSCargoWPData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\Data Conversion R2"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion R2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSCargoWPData\Data Conversion R2.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSCargoWPData\Data Conversion R2.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\FSCargoWPData\Data Conversion R2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\FSCargoWPData\Data Conversion R2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSCargoWPData\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\FSCargoWPData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\FSCargoWPData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\Derived Column R2"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column R2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSCargoWPData\Derived Column R2.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\FSCargoWPData\Derived Column R2.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\FSCargoWPData\Derived Column R2.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\FSCargoWPData"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="FSCargoWPData"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A235:G241]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSCargoWPData\FSCargoWPData.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[Parameters]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[FSO Cargo &amp; PW Data]"
                      length="255"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[Parameters]"
                      name="Parameters"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[F5]"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[ParameterUnit]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[F7]"
                      length="255"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[ParameterUnit]"
                      name="ParameterUnit"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[FSO Cargo &amp; PW Data]"
                      dataType="wstr"
                      length="255"
                      name="FSO Cargo &amp; PW Data" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="r8"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="r8"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[FSO Cargo &amp; PW Data]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[FSO Cargo &amp; PW Data]"
                      name="FSO Cargo &amp; PW Data" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[F5]"
                      dataType="r8"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[F5]"
                      name="F5" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[F7]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[F7]"
                      name="F7" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\FSCargoWPData MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="FSCargoWPData MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FSCargoWPDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[ParameterValue]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterUnit]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ParameterUnit"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterUnit]"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[ParameterUnit]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterUnit]"
                      dataType="nText"
                      name="ParameterUnit" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\FSCargoWPData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\FSCargoWPData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="FSCargoWPData MSSQL R2"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FSCargoWPDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[ParameterValue]" />
                    <inputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].Columns[ParameterUnit]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ParameterUnit"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ParameterUnit]"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[ParameterUnit]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input].ExternalColumns[ParameterUnit]"
                      dataType="nText"
                      name="ParameterUnit" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\FSCargoWPData R2"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="FSCargoWPData R2"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$I235:N241]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSCargoWPData\FSCargoWPData R2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[Parameters]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[Parameters]"
                      name="Parameters"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].ExternalColumns[F4]"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[ParameterUnit]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].ExternalColumns[F6]"
                      length="255"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[ParameterUnit]"
                      name="ParameterUnit"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="r8"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="r8"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[F4]"
                      dataType="r8"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[F4]"
                      name="F4" />
                    <outputColumn
                      refId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[F6]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Error Output].Columns[F6]"
                      name="F6" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSCargoWPData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSCargoWPData\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      lineageId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[Parameters]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\FSCargoWPData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output].Columns[Parameters]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Parameters)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\FSCargoWPData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\FSCargoWPData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSCargoWPData\Remove Empty Cells R2"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells R2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSCargoWPData\Remove Empty Cells R2.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSCargoWPData\Remove Empty Cells R2.Inputs[Conditional Split Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      lineageId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[Parameters]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSCargoWPData\Remove Empty Cells R2.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\FSCargoWPData\Remove Empty Cells R2.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output].Columns[Parameters]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Parameters)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Remove Empty Cells R2.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\FSCargoWPData\Remove Empty Cells R2.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSCargoWPData\Remove Empty Cells R2.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\FSCargoWPData\Remove Empty Cells R2.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSCargoWPData\Remove Empty Cells R2.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Remove Empty Cells R2.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSCargoWPData\Remove Empty Cells R2.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSCargoWPData\Remove Empty Cells R2.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\FSCargoWPData.Paths[Conditional Split Default Output]"
              endId="Package\FSCargoWPData\Derived Column R2.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\FSCargoWPData\Remove Empty Cells R2.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\FSCargoWPData.Paths[Conditional Split Default Output1]"
              endId="Package\FSCargoWPData\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\FSCargoWPData\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\FSCargoWPData.Paths[Data Conversion Output]"
              endId="Package\FSCargoWPData\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\FSCargoWPData\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\FSCargoWPData.Paths[Data Conversion Output1]"
              endId="Package\FSCargoWPData\Check For Duplicate R2.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\FSCargoWPData\Data Conversion R2.Outputs[Data Conversion Output]" />
            <path
              refId="Package\FSCargoWPData.Paths[Derived Column Output]"
              endId="Package\FSCargoWPData\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\FSCargoWPData\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\FSCargoWPData.Paths[Derived Column Output1]"
              endId="Package\FSCargoWPData\Data Conversion R2.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\FSCargoWPData\Derived Column R2.Outputs[Derived Column Output]" />
            <path
              refId="Package\FSCargoWPData.Paths[Excel Source Output]"
              endId="Package\FSCargoWPData\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\FSCargoWPData\FSCargoWPData.Outputs[Excel Source Output]" />
            <path
              refId="Package\FSCargoWPData.Paths[Excel Source Output1]"
              endId="Package\FSCargoWPData\Remove Empty Cells R2.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\FSCargoWPData\FSCargoWPData R2.Outputs[Excel Source Output]" />
            <path
              refId="Package\FSCargoWPData.Paths[Lookup No Match Output]"
              endId="Package\FSCargoWPData\FSCargoWPData MSSQL R2.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\FSCargoWPData\Check For Duplicate R2.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\FSCargoWPData.Paths[Lookup No Match Output1]"
              endId="Package\FSCargoWPData\FSCargoWPData MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\FSCargoWPData\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\FSOOILQUALITY"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{8CBF3D03-0C01-4FC6-8617-866D23F07D10}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="FSOOILQUALITY">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\FSOOILQUALITY\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from FSOOILQUALITies</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from FSOOILQUALITies) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSOOILQUALITY\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FSOOILQUALITY\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSOOILQUALITY\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FSOOILQUALITY\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FSOOILQUALITY\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FSOOILQUALITY\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOOILQUALITY\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSOOILQUALITY\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSOOILQUALITY\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\FSOOILQUALITY\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\FSOOILQUALITY\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOOILQUALITY\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSOOILQUALITY\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\FSOOILQUALITY\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\FSOOILQUALITY\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOOILQUALITY\FSOOILQUALITY"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="FSOOILQUALITY"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$P235:Z241]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSOOILQUALITY\FSOOILQUALITY.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[Parameters]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[Oil Quality to FSO]"
                      length="255"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[Parameters]"
                      name="Parameters"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F9]"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[ParameterUnit]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F11]"
                      length="255"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[ParameterUnit]"
                      name="ParameterUnit"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[Oil Quality to FSO]"
                      dataType="wstr"
                      length="255"
                      name="Oil Quality to FSO" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="r8"
                      name="F9" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[Oil Quality to FSO]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[Oil Quality to FSO]"
                      name="Oil Quality to FSO" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[F9]"
                      dataType="r8"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[F9]"
                      name="F9" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[F11]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[F11]"
                      name="F11" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="FSOOILQUALITY MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FSOOILQUALITies]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[ParameterValue]" />
                    <inputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterUnit]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ParameterUnit"
                      externalMetadataColumnId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterUnit]"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[ParameterUnit]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                    <externalMetadataColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterUnit]"
                      dataType="nText"
                      name="ParameterUnit" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOOILQUALITY\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSOOILQUALITY\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSOOILQUALITY\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      lineageId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[Parameters]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOOILQUALITY\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\FSOOILQUALITY\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output].Columns[Parameters]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Parameters)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOOILQUALITY\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\FSOOILQUALITY\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOOILQUALITY\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\FSOOILQUALITY\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOOILQUALITY\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOOILQUALITY\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\FSOOILQUALITY.Paths[Conditional Split Default Output]"
              endId="Package\FSOOILQUALITY\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\FSOOILQUALITY\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\FSOOILQUALITY.Paths[Data Conversion Output]"
              endId="Package\FSOOILQUALITY\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\FSOOILQUALITY\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\FSOOILQUALITY.Paths[Derived Column Output]"
              endId="Package\FSOOILQUALITY\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\FSOOILQUALITY\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\FSOOILQUALITY.Paths[Excel Source Output]"
              endId="Package\FSOOILQUALITY\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\FSOOILQUALITY\FSOOILQUALITY.Outputs[Excel Source Output]" />
            <path
              refId="Package\FSOOILQUALITY.Paths[Lookup No Match Output]"
              endId="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\FSOOILQUALITY\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\FSOSummary"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C65016CC-2619-4A00-9C18-42508EE42A05}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="FSOSummary">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\FSOSummary\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from FSOSummaries</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from FSOSummaries) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSOSummary\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FSOSummary\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSOSummary\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FSOSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FSOSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FSOSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOSummary\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSOSummary\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSOSummary\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\FSOSummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\FSOSummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOSummary\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSOSummary\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\FSOSummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOSummary\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\FSOSummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOSummary\FSOSummary"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="FSOSummary"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A314:A330]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSOSummary\FSOSummary.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Output].Columns[FSO]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Output].ExternalColumns[FSO]"
                      length="255"
                      lineageId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Output].Columns[FSO]"
                      name="FSO"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Output].ExternalColumns[FSO]"
                      dataType="wstr"
                      length="255"
                      name="FSO" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Error Output].Columns[FSO]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Error Output].Columns[FSO]"
                      name="FSO" />
                    <outputColumn
                      refId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOSummary\FSOSummary MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="FSOSummary MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FSOSummaries]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FSOSummary\FSOSummary MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].Columns[FSO]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FSO"
                      externalMetadataColumnId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Output].Columns[FSO]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOSummary\FSOSummary MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\FSOSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOSummary\FSOSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\FSOSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FSOSummary\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FSOSummary\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FSOSummary\Remove Empty Cells.Inputs[Conditional Split Input].Columns[FSO]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FSO"
                      lineageId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Output].Columns[FSO]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FSOSummary\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\FSOSummary\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\FSOSummary\FSOSummary.Outputs[Excel Source Output].Columns[FSO]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(FSO)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOSummary\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\FSOSummary\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FSOSummary\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\FSOSummary\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FSOSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FSOSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FSOSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\FSOSummary.Paths[Conditional Split Default Output]"
              endId="Package\FSOSummary\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\FSOSummary\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\FSOSummary.Paths[Data Conversion Output]"
              endId="Package\FSOSummary\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\FSOSummary\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\FSOSummary.Paths[Derived Column Output]"
              endId="Package\FSOSummary\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\FSOSummary\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\FSOSummary.Paths[Excel Source Output]"
              endId="Package\FSOSummary\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\FSOSummary\FSOSummary.Outputs[Excel Source Output]" />
            <path
              refId="Package\FSOSummary.Paths[Lookup No Match Output]"
              endId="Package\FSOSummary\FSOSummary MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\FSOSummary\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\InstrumentElectrical"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{D9C78618-34E0-489F-B8E2-1D01813D1ECE}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="InstrumentElectrical">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\InstrumentElectrical\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from UnPlannedMaintenanceReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from UnPlannedMaintenanceReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\InstrumentElectrical\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\InstrumentElectrical\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\InstrumentElectrical\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\InstrumentElectrical\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\InstrumentElectrical\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\InstrumentElectrical\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\InstrumentElectrical\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\InstrumentElectrical\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\InstrumentElectrical\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\InstrumentElectrical\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\InstrumentElectrical\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\InstrumentElectrical\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\InstrumentElectrical\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\InstrumentElectrical\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\InstrumentElectrical\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\InstrumentElectrical\InstrumentElectrical"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="InstrumentElectrical"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A520:A536]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\InstrumentElectrical\InstrumentElectrical.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Output].Columns[Report]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Output].ExternalColumns[Instrument &amp; Electrical]"
                      length="255"
                      lineageId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Output].ExternalColumns[Instrument &amp; Electrical]"
                      dataType="wstr"
                      length="255"
                      name="Instrument &amp; Electrical" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Error Output].Columns[Instrument &amp; Electrical]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Error Output].Columns[Instrument &amp; Electrical]"
                      name="Instrument &amp; Electrical" />
                    <outputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="InstrumentElectrical MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[InstrumentElectricals]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      externalMetadataColumnId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\InstrumentElectrical\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\InstrumentElectrical\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\InstrumentElectrical\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      lineageId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\InstrumentElectrical\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\InstrumentElectrical\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\InstrumentElectrical\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\InstrumentElectrical\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\InstrumentElectrical\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\InstrumentElectrical\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\InstrumentElectrical\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\InstrumentElectrical\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\InstrumentElectrical\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\InstrumentElectrical.Paths[Conditional Split Default Output]"
              endId="Package\InstrumentElectrical\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\InstrumentElectrical\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\InstrumentElectrical.Paths[Data Conversion Output]"
              endId="Package\InstrumentElectrical\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\InstrumentElectrical\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\InstrumentElectrical.Paths[Derived Column Output]"
              endId="Package\InstrumentElectrical\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\InstrumentElectrical\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\InstrumentElectrical.Paths[Excel Source Output]"
              endId="Package\InstrumentElectrical\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\InstrumentElectrical\InstrumentElectrical.Outputs[Excel Source Output]" />
            <path
              refId="Package\InstrumentElectrical.Paths[Lookup No Match Output]"
              endId="Package\InstrumentElectrical\InstrumentElectrical MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\InstrumentElectrical\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\LastAvialableWellTest"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{1B80B833-CCB9-42A2-B52C-98E9870F15B7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="LastAvialableWellTest">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\LastAvialableWellTest\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from LastAvialableWellTests</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from LastAvialableWellTests) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\LastAvialableWellTest\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\LastAvialableWellTest\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\LastAvialableWellTest\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\LastAvialableWellTest\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\LastAvialableWellTest\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\LastAvialableWellTest\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\LastAvialableWellTest\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\LastAvialableWellTest\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\LastAvialableWellTest\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\LastAvialableWellTest\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\LastAvialableWellTest\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\LastAvialableWellTest\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\LastAvialableWellTest\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\LastAvialableWellTest\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\LastAvialableWellTest\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\LastAvialableWellTest\LastAvialableWellTest"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="LastAvialableWellTest"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$AC66:AG107]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\LastAvialableWellTest\LastAvialableWellTest.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[WELL]"
                      length="255"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[GROSS LIQUID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[GROSS LIQUID]"
                      length="255"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[GROSS LIQUID]"
                      name="GROSS LIQUID"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[OIL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[OIL]"
                      length="255"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[OIL]"
                      name="OIL"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[GAS]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[GAS]"
                      length="255"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[GAS]"
                      name="GAS"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[WATER]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[WATER]"
                      length="255"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[WATER]"
                      name="WATER"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[WELL]"
                      dataType="wstr"
                      length="255"
                      name="WELL" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[GROSS LIQUID]"
                      dataType="r8"
                      name="GROSS LIQUID" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[OIL]"
                      dataType="r8"
                      name="OIL" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[GAS]"
                      dataType="r8"
                      name="GAS" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].ExternalColumns[WATER]"
                      dataType="r8"
                      name="WATER" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[WELL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[WELL]"
                      name="WELL" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[GROSS LIQUID]"
                      dataType="r8"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[GROSS LIQUID]"
                      name="GROSS LIQUID" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[OIL]"
                      dataType="r8"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[OIL]"
                      name="OIL" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[GAS]"
                      dataType="r8"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[GAS]"
                      name="GAS" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[WATER]"
                      dataType="r8"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[WATER]"
                      name="WATER" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="LastAvialableWellTest MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[LastAvialableWellTests]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].Columns[GROSS LIQUID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GROSS LIQUID"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GrossLiquid]"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[GROSS LIQUID]" />
                    <inputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].Columns[OIL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="OIL"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Oil]"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[OIL]" />
                    <inputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].Columns[GAS]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GAS"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Gas]"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[GAS]" />
                    <inputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].Columns[WATER]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WATER"
                      externalMetadataColumnId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Water]"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[WATER]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GrossLiquid]"
                      dataType="nText"
                      name="GrossLiquid" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Oil]"
                      dataType="nText"
                      name="Oil" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Gas]"
                      dataType="nText"
                      name="Gas" />
                    <externalMetadataColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Water]"
                      dataType="nText"
                      name="Water" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\LastAvialableWellTest\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\LastAvialableWellTest\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\LastAvialableWellTest\Remove Empty Cells.Inputs[Conditional Split Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WELL"
                      lineageId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[WELL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\LastAvialableWellTest\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\LastAvialableWellTest\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output].Columns[WELL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(WELL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\LastAvialableWellTest\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\LastAvialableWellTest\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\LastAvialableWellTest\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\LastAvialableWellTest\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\LastAvialableWellTest\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\LastAvialableWellTest\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\LastAvialableWellTest.Paths[Conditional Split Default Output]"
              endId="Package\LastAvialableWellTest\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\LastAvialableWellTest\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\LastAvialableWellTest.Paths[Data Conversion Output]"
              endId="Package\LastAvialableWellTest\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\LastAvialableWellTest\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\LastAvialableWellTest.Paths[Derived Column Output]"
              endId="Package\LastAvialableWellTest\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\LastAvialableWellTest\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\LastAvialableWellTest.Paths[Excel Source Output]"
              endId="Package\LastAvialableWellTest\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\LastAvialableWellTest\LastAvialableWellTest.Outputs[Excel Source Output]" />
            <path
              refId="Package\LastAvialableWellTest.Paths[Lookup No Match Output]"
              endId="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\LastAvialableWellTest\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\OperationsSummary"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{753B1425-0C43-48C8-8AA5-80E8F60477BF}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="OperationsSummary">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\OperationsSummary\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from DailySafetySummaries</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from DailySafetySummaries) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\OperationsSummary\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\OperationsSummary\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\OperationsSummary\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\OperationsSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\OperationsSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\OperationsSummary\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\OperationsSummary\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\OperationsSummary\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\OperationsSummary\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\OperationsSummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\OperationsSummary\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\OperationsSummary\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\OperationsSummary\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\OperationsSummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\OperationsSummary\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\OperationsSummary\OperationsSummary"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="OperationsSummary"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A45:A62]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\OperationsSummary\OperationsSummary.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Output].Columns[OperationsReport]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Output].ExternalColumns[Operations:]"
                      length="255"
                      lineageId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Output].Columns[OperationsReport]"
                      name="OperationsReport"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Output].ExternalColumns[Operations:]"
                      dataType="wstr"
                      length="255"
                      name="Operations:" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Error Output].Columns[Operations:]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Error Output].Columns[Operations:]"
                      name="Operations:" />
                    <outputColumn
                      refId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\OperationsSummary\OperationsSummary MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OperationsSummary MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[OperationsSummaries]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\OperationsSummary\OperationsSummary MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[OperationsReport]"
                      dataType="nText"
                      name="OperationsReport" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\OperationsSummary\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\OperationsSummary\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\OperationsSummary MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\OperationsSummary\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\OperationsSummary\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\OperationsSummary\Remove Empty Cells.Inputs[Conditional Split Input].Columns[OperationsReport]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="OperationsReport"
                      lineageId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Output].Columns[OperationsReport]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\OperationsSummary\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\OperationsSummary\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Output].Columns[OperationsReport]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(OperationsReport)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\OperationsSummary\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\OperationsSummary\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\OperationsSummary\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\OperationsSummary\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\OperationsSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\OperationsSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\OperationsSummary\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\OperationsSummary.Paths[Conditional Split Default Output]"
              endId="Package\OperationsSummary\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\OperationsSummary\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\OperationsSummary.Paths[Data Conversion Output]"
              endId="Package\OperationsSummary\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\OperationsSummary\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\OperationsSummary.Paths[Derived Column Output]"
              endId="Package\OperationsSummary\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\OperationsSummary\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\OperationsSummary.Paths[Excel Source Output]"
              endId="Package\OperationsSummary\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\OperationsSummary\OperationsSummary.Outputs[Excel Source Output]" />
            <path
              refId="Package\OperationsSummary.Paths[Lookup No Match Output]"
              endId="Package\OperationsSummary\OperationsSummary MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\OperationsSummary\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PendingMaintenanceReport"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{B5CF462C-426D-4FAF-88A5-C55B2C3FB91A}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="PendingMaintenanceReport">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\PendingMaintenanceReport\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PendingMaintenanceReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PendingMaintenanceReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PendingMaintenanceReport\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PendingMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PendingMaintenanceReport\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PendingMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PendingMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PendingMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingMaintenanceReport\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PendingMaintenanceReport\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PendingMaintenanceReport\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\PendingMaintenanceReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\PendingMaintenanceReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingMaintenanceReport\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PendingMaintenanceReport\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\PendingMaintenanceReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\PendingMaintenanceReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingMaintenanceReport\PendingMaintenanceReport"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="PendingMaintenanceReport"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A486:A502]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Output].Columns[Report]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Output].ExternalColumns[Pending Maintenance]"
                      length="255"
                      lineageId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Output].ExternalColumns[Pending Maintenance]"
                      dataType="wstr"
                      length="255"
                      name="Pending Maintenance" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Error Output].Columns[Pending Maintenance]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Error Output].Columns[Pending Maintenance]"
                      name="Pending Maintenance" />
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="PendingMaintenanceReport MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PendingMaintenanceReports]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      externalMetadataColumnId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingMaintenanceReport\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PendingMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PendingMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      lineageId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingMaintenanceReport\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\PendingMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\PendingMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\PendingMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\PendingMaintenanceReport.Paths[Conditional Split Default Output]"
              endId="Package\PendingMaintenanceReport\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\PendingMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\PendingMaintenanceReport.Paths[Data Conversion Output]"
              endId="Package\PendingMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\PendingMaintenanceReport\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\PendingMaintenanceReport.Paths[Derived Column Output]"
              endId="Package\PendingMaintenanceReport\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\PendingMaintenanceReport\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\PendingMaintenanceReport.Paths[Excel Source Output]"
              endId="Package\PendingMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\PendingMaintenanceReport\PendingMaintenanceReport.Outputs[Excel Source Output]" />
            <path
              refId="Package\PendingMaintenanceReport.Paths[Lookup No Match Output]"
              endId="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\PendingMaintenanceReport\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PendingProjectWorkReport"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{2923890D-E575-4AC3-B154-45633B032D0C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="PendingProjectWorkReport">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\PendingProjectWorkReport\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PendingProjectWorkReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PendingProjectWorkReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PendingProjectWorkReport\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PendingProjectWorkReport\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PendingProjectWorkReport\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PendingProjectWorkReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PendingProjectWorkReport\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PendingProjectWorkReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingProjectWorkReport\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PendingProjectWorkReport\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PendingProjectWorkReport\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\PendingProjectWorkReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\PendingProjectWorkReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingProjectWorkReport\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PendingProjectWorkReport\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\PendingProjectWorkReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\PendingProjectWorkReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingProjectWorkReport\PendingProjectWorkReport"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="PendingProjectWorkReport"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A463:A485]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Output].Columns[Report]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Output].ExternalColumns[Pending Project Work]"
                      length="255"
                      lineageId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Output].ExternalColumns[Pending Project Work]"
                      dataType="wstr"
                      length="255"
                      name="Pending Project Work" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Error Output].Columns[Pending Project Work]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Error Output].Columns[Pending Project Work]"
                      name="Pending Project Work" />
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="PendingProjectWorkReport MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PendingProjectWorkReports]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      externalMetadataColumnId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PendingProjectWorkReport\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PendingProjectWorkReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PendingProjectWorkReport\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      lineageId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PendingProjectWorkReport\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\PendingProjectWorkReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingProjectWorkReport\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\PendingProjectWorkReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PendingProjectWorkReport\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\PendingProjectWorkReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PendingProjectWorkReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PendingProjectWorkReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\PendingProjectWorkReport.Paths[Conditional Split Default Output]"
              endId="Package\PendingProjectWorkReport\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\PendingProjectWorkReport\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\PendingProjectWorkReport.Paths[Data Conversion Output]"
              endId="Package\PendingProjectWorkReport\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\PendingProjectWorkReport\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\PendingProjectWorkReport.Paths[Derived Column Output]"
              endId="Package\PendingProjectWorkReport\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\PendingProjectWorkReport\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\PendingProjectWorkReport.Paths[Excel Source Output]"
              endId="Package\PendingProjectWorkReport\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\PendingProjectWorkReport\PendingProjectWorkReport.Outputs[Excel Source Output]" />
            <path
              refId="Package\PendingProjectWorkReport.Paths[Lookup No Match Output]"
              endId="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\PendingProjectWorkReport\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PlannedMaintenance"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{F5C79B38-2C49-43CF-B9CD-07B663B496DE}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="PlannedMaintenance">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\PlannedMaintenance\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Check For Duplicate 1"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\Check For Duplicate 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Check For Duplicate 2"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate 2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\Check For Duplicate 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Check For Duplicate 2 1"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate 2 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\Check For Duplicate 2 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\PlannedMaintenance\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Data Conversion 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\PlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Data Conversion 2"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\PlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Data Conversion 2 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 2 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\PlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\PlannedMaintenance\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Electrical"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Electrical"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Derived Column 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Derived Column 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\PlannedMaintenance\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="15"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Instrumentation"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Instrumentation"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Derived Column 2"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Derived Column 2.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\PlannedMaintenance\Derived Column 2.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Mechanical"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Mechanical"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Derived Column 2.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Derived Column 2 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 2 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Derived Column 2 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\PlannedMaintenance\Derived Column 2 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Safety"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Safety"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Derived Column 2 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\PlannedMaintenance"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="PlannedMaintenance"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A366:A372]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\PlannedMaintenance.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Output].Columns[Report]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Output].ExternalColumns[Electrical]"
                      length="255"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Output].ExternalColumns[Electrical]"
                      dataType="wstr"
                      length="255"
                      name="Electrical" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Error Output].Columns[Electrical]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Error Output].Columns[Electrical]"
                      name="Electrical" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\PlannedMaintenance 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="PlannedMaintenance 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A373:A379]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\PlannedMaintenance 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Output].ExternalColumns[Instrumentation]"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]"
                      name="Instrumentation"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Output].ExternalColumns[Instrumentation]"
                      dataType="date"
                      name="Instrumentation" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[Instrumentation]"
                      dataType="date"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[Instrumentation]"
                      name="Instrumentation" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\PlannedMaintenance 2"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="PlannedMaintenance 2"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A380:A386]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\PlannedMaintenance 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Output].ExternalColumns[Mechanical]"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]"
                      name="Mechanical"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Output].ExternalColumns[Mechanical]"
                      dataType="date"
                      name="Mechanical" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[Mechanical]"
                      dataType="date"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[Mechanical]"
                      name="Mechanical" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\PlannedMaintenance 2 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="PlannedMaintenance 2 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A387:A393]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Output].Columns[Safety]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Output].ExternalColumns[Safety:]"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Output].Columns[Safety]"
                      name="Safety"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Output].ExternalColumns[Safety:]"
                      dataType="date"
                      name="Safety:" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Error Output].Columns[Safety:]"
                      dataType="date"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Error Output].Columns[Safety:]"
                      name="Safety:" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="PlannedMaintenance MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PlannedMaintenances]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Output].Columns[Report]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportCategory]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="PlannedMaintenance MSSQL 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PlannedMaintenances]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportCategory]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[Instrumentation]"
                      cachedDataType="date"
                      cachedName="Instrumentation"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="PlannedMaintenance MSSQL 2"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PlannedMaintenances]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportCategory]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[Mechanical]"
                      cachedDataType="date"
                      cachedName="Mechanical"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="PlannedMaintenance MSSQL 2 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PlannedMaintenances]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportCategory]" />
                    <inputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[Safety]"
                      cachedDataType="date"
                      cachedName="Safety"
                      externalMetadataColumnId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Output].Columns[Safety]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                    <externalMetadataColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Remove Empty Cells 1"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input].Columns[Instrumentation]"
                      cachedDataType="date"
                      cachedName="Instrumentation"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells 1.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Instrumentation)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Remove Empty Cells 2"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input].Columns[Mechanical]"
                      cachedDataType="date"
                      cachedName="Mechanical"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells 2.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Mechanical)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlannedMaintenance\Remove Empty Cells 2 1"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells 2 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input].Columns[Safety]"
                      cachedDataType="date"
                      cachedName="Safety"
                      lineageId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Output].Columns[Safety]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Output].Columns[Safety]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Safety)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\PlannedMaintenance.Paths[Conditional Split Default Output]"
              endId="Package\PlannedMaintenance\Derived Column 2.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\PlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Conditional Split Default Output1]"
              endId="Package\PlannedMaintenance\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\PlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Conditional Split Default Output2]"
              endId="Package\PlannedMaintenance\Derived Column 2 1.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Conditional Split Default Output3]"
              endId="Package\PlannedMaintenance\Derived Column 1.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\PlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Data Conversion Output]"
              endId="Package\PlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\PlannedMaintenance\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Data Conversion Output1]"
              endId="Package\PlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\PlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Data Conversion Output2]"
              endId="Package\PlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\PlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Data Conversion Output3]"
              endId="Package\PlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\PlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Derived Column Output3]"
              endId="Package\PlannedMaintenance\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\PlannedMaintenance\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Derived Column Output2]"
              endId="Package\PlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\PlannedMaintenance\Derived Column 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Derived Column Output1]"
              endId="Package\PlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\PlannedMaintenance\Derived Column 2.Outputs[Derived Column Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Derived Column Output]"
              endId="Package\PlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\PlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Excel Source Output]"
              endId="Package\PlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\PlannedMaintenance\PlannedMaintenance 1.Outputs[Excel Source Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Excel Source Output1]"
              endId="Package\PlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\PlannedMaintenance\PlannedMaintenance 2.Outputs[Excel Source Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Excel Source Output2]"
              endId="Package\PlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\PlannedMaintenance\PlannedMaintenance.Outputs[Excel Source Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Excel Source Output3]"
              endId="Package\PlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\PlannedMaintenance\PlannedMaintenance 2 1.Outputs[Excel Source Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Lookup No Match Output]"
              endId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\PlannedMaintenance\Check For Duplicate 2.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Lookup No Match Output1]"
              endId="Package\PlannedMaintenance\PlannedMaintenance MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\PlannedMaintenance\Check For Duplicate.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Lookup No Match Output2]"
              endId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\PlannedMaintenance\Check For Duplicate 1.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\PlannedMaintenance.Paths[Lookup No Match Output3]"
              endId="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\PlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PlantOperationsReport"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{14B46944-854F-48C5-8C22-9A3507889006}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="PlantOperationsReport">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\PlantOperationsReport\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PlantOperationsReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PlantOperationsReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlantOperationsReport\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlantOperationsReport\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlantOperationsReport\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\PlantOperationsReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\PlantOperationsReport\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\PlantOperationsReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlantOperationsReport\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlantOperationsReport\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlantOperationsReport\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\PlantOperationsReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\PlantOperationsReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlantOperationsReport\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlantOperationsReport\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\PlantOperationsReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\PlantOperationsReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlantOperationsReport\PlantOperationsReport"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="PlantOperationsReport"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A348:A364]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlantOperationsReport\PlantOperationsReport.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Output].Columns[Report]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Output].ExternalColumns[Plant Operations]"
                      length="255"
                      lineageId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Output].ExternalColumns[Plant Operations]"
                      dataType="wstr"
                      length="255"
                      name="Plant Operations" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Error Output].Columns[Plant Operations]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Error Output].Columns[Plant Operations]"
                      name="Plant Operations" />
                    <outputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="PlantOperationsReport MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PlantOperationsReports]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      externalMetadataColumnId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\PlantOperationsReport\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\PlantOperationsReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\PlantOperationsReport\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      lineageId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\PlantOperationsReport\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\PlantOperationsReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlantOperationsReport\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\PlantOperationsReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\PlantOperationsReport\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\PlantOperationsReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\PlantOperationsReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\PlantOperationsReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\PlantOperationsReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\PlantOperationsReport.Paths[Conditional Split Default Output]"
              endId="Package\PlantOperationsReport\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\PlantOperationsReport\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\PlantOperationsReport.Paths[Data Conversion Output]"
              endId="Package\PlantOperationsReport\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\PlantOperationsReport\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\PlantOperationsReport.Paths[Derived Column Output]"
              endId="Package\PlantOperationsReport\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\PlantOperationsReport\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\PlantOperationsReport.Paths[Excel Source Output]"
              endId="Package\PlantOperationsReport\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\PlantOperationsReport\PlantOperationsReport.Outputs[Excel Source Output]" />
            <path
              refId="Package\PlantOperationsReport.Paths[Lookup No Match Output]"
              endId="Package\PlantOperationsReport\PlantOperationsReport MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\PlantOperationsReport\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ProducedWaterData"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{4B9A0C18-9191-4D8D-AE18-FE0C08A3667E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="ProducedWaterData">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\ProducedWaterData\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from ProducedWaterDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from ProducedWaterDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProducedWaterData\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ProducedWaterData\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProducedWaterData\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\ProducedWaterData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\ProducedWaterData\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\ProducedWaterData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProducedWaterData\Check For Duplicate AD"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate AD"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from ProducedWaterDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from ProducedWaterDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProducedWaterData\Check For Duplicate AD.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ProducedWaterData\Check For Duplicate AD.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProducedWaterData\Check For Duplicate AD.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\ProducedWaterData\Check For Duplicate AD.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\ProducedWaterData\Check For Duplicate AD.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\ProducedWaterData\Check For Duplicate AD.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProducedWaterData\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProducedWaterData\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProducedWaterData\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\ProducedWaterData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\ProducedWaterData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProducedWaterData\Data Conversion AD"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion AD"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProducedWaterData\Data Conversion AD.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProducedWaterData\Data Conversion AD.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\ProducedWaterData\Data Conversion AD.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\ProducedWaterData\Data Conversion AD.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProducedWaterData\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProducedWaterData\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\ProducedWaterData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\ProducedWaterData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProducedWaterData\Derived Column AD"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column AD"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProducedWaterData\Derived Column AD.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\ProducedWaterData\Derived Column AD.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\ProducedWaterData\Derived Column AD.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProducedWaterData\ProducedWaterData"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="ProducedWaterData"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$O226:AA234]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProducedWaterData\ProducedWaterData.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[Parameters]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[Parameters]"
                      name="Parameters"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[TwentyFourHourReading]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[24 Hour Total]"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[TwentyFourHourReading]"
                      name="TwentyFourHourReading"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[AdditionalData]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F12]"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[AdditionalData]"
                      name="AdditionalData"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="r8"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="r8"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="r8"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="r8"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="r8"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="r8"
                      name="F9" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[24 Hour Total]"
                      dataType="r8"
                      name="24 Hour Total" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F12]"
                      dataType="r8"
                      name="F12" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="wstr"
                      length="255"
                      name="F13" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[24 Hour Total]"
                      dataType="r8"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[24 Hour Total]"
                      name="24 Hour Total" />
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[F12]"
                      dataType="r8"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[F12]"
                      name="F12" />
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProducedWaterData\ProducedWaterData MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ProducedWaterData MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[ProducedWaterDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].Columns[TwentyFourHourReading]"
                      cachedDataType="r8"
                      cachedName="TwentyFourHourReading"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHourReading]"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[TwentyFourHourReading]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHourReading]"
                      dataType="nText"
                      name="TwentyFourHourReading" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\ProducedWaterData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\ProducedWaterData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ProducedWaterData MSSQL AD"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[ProducedWaterDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].Columns[AdditionalData]"
                      cachedDataType="r8"
                      cachedName="AdditionalData"
                      externalMetadataColumnId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHourReading]"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[AdditionalData]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHourReading]"
                      dataType="nText"
                      name="TwentyFourHourReading" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProducedWaterData\Split Additional Data"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Split Additional Data"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProducedWaterData\Split Additional Data.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProducedWaterData\Split Additional Data.Inputs[Conditional Split Input].Columns[AdditionalData]"
                      cachedDataType="r8"
                      cachedName="AdditionalData"
                      lineageId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[AdditionalData]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProducedWaterData\Split Additional Data.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\ProducedWaterData\Split Additional Data.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output].Columns[AdditionalData]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(AdditionalData)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Split Additional Data.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\ProducedWaterData\Split Additional Data.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProducedWaterData\Split Additional Data.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\ProducedWaterData\Split Additional Data.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProducedWaterData\Split Additional Data.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Split Additional Data.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProducedWaterData\Split Additional Data.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProducedWaterData\Split Additional Data.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\ProducedWaterData.Paths[Conditional Split Default Output]"
              endId="Package\ProducedWaterData\Derived Column AD.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\ProducedWaterData\Split Additional Data.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\ProducedWaterData.Paths[Data Conversion Output]"
              endId="Package\ProducedWaterData\Check For Duplicate AD.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\ProducedWaterData\Data Conversion AD.Outputs[Data Conversion Output]" />
            <path
              refId="Package\ProducedWaterData.Paths[Data Conversion Output1]"
              endId="Package\ProducedWaterData\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\ProducedWaterData\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\ProducedWaterData.Paths[Derived Column Output]"
              endId="Package\ProducedWaterData\Data Conversion AD.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\ProducedWaterData\Derived Column AD.Outputs[Derived Column Output]" />
            <path
              refId="Package\ProducedWaterData.Paths[Derived Column Output1]"
              endId="Package\ProducedWaterData\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\ProducedWaterData\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\ProducedWaterData.Paths[EmptyRows]"
              endId="Package\ProducedWaterData\Derived Column.Inputs[Derived Column Input]"
              name="EmptyRows"
              startId="Package\ProducedWaterData\Split Additional Data.Outputs[EmptyRows]" />
            <path
              refId="Package\ProducedWaterData.Paths[Excel Source Output]"
              endId="Package\ProducedWaterData\Split Additional Data.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\ProducedWaterData\ProducedWaterData.Outputs[Excel Source Output]" />
            <path
              refId="Package\ProducedWaterData.Paths[Lookup No Match Output]"
              endId="Package\ProducedWaterData\ProducedWaterData MSSQL AD.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\ProducedWaterData\Check For Duplicate AD.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\ProducedWaterData.Paths[Lookup No Match Output1]"
              endId="Package\ProducedWaterData\ProducedWaterData MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\ProducedWaterData\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ProductionPotential"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{2557C009-CFF7-4B7E-8A7C-BDC5EFC6C4D8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="ProductionPotential">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\ProductionPotential\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from LastAvialableWellTests</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from LastAvialableWellTests) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProductionPotential\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ProductionPotential\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProductionPotential\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\ProductionPotential\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\ProductionPotential\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\ProductionPotential\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProductionPotential\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProductionPotential\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProductionPotential\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\ProductionPotential\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\ProductionPotential\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProductionPotential\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProductionPotential\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\ProductionPotential\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\ProductionPotential\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProductionPotential\ProductionPotential"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="ProductionPotential"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$AI66:AM107]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProductionPotential\ProductionPotential.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[WELL]"
                      length="255"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[GROSS LIQUID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[GROSS LIQUID]"
                      length="255"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[GROSS LIQUID]"
                      name="GROSS LIQUID"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[OIL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[OIL]"
                      length="255"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[OIL]"
                      name="OIL"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[GAS]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[GAS]"
                      length="255"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[GAS]"
                      name="GAS"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[WATER]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[WATER]"
                      length="255"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[WATER]"
                      name="WATER"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[WELL]"
                      dataType="wstr"
                      length="255"
                      name="WELL" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[GROSS LIQUID]"
                      dataType="r8"
                      name="GROSS LIQUID" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[OIL]"
                      dataType="r8"
                      name="OIL" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[GAS]"
                      dataType="r8"
                      name="GAS" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].ExternalColumns[WATER]"
                      dataType="r8"
                      name="WATER" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[WELL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[WELL]"
                      name="WELL" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[GROSS LIQUID]"
                      dataType="r8"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[GROSS LIQUID]"
                      name="GROSS LIQUID" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[OIL]"
                      dataType="r8"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[OIL]"
                      name="OIL" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[GAS]"
                      dataType="r8"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[GAS]"
                      name="GAS" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[WATER]"
                      dataType="r8"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[WATER]"
                      name="WATER" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProductionPotential\ProductionPotential MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ProductionPotential MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[ProductionPotentials]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProductionPotential\ProductionPotential MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].Columns[GROSS LIQUID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GROSS LIQUID"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GrossLiquid]"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[GROSS LIQUID]" />
                    <inputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].Columns[OIL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="OIL"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Oil]"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[OIL]" />
                    <inputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].Columns[GAS]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GAS"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Gas]"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[GAS]" />
                    <inputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].Columns[WATER]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WATER"
                      externalMetadataColumnId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Water]"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[WATER]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GrossLiquid]"
                      dataType="nText"
                      name="GrossLiquid" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Oil]"
                      dataType="nText"
                      name="Oil" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Gas]"
                      dataType="nText"
                      name="Gas" />
                    <externalMetadataColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Water]"
                      dataType="nText"
                      name="Water" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProductionPotential\ProductionPotential MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\ProductionPotential MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProductionPotential\ProductionPotential MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\ProductionPotential MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProductionPotential\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProductionPotential\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProductionPotential\Remove Empty Cells.Inputs[Conditional Split Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WELL"
                      lineageId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[WELL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProductionPotential\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\ProductionPotential\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output].Columns[WELL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(WELL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProductionPotential\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\ProductionPotential\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProductionPotential\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\ProductionPotential\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProductionPotential\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProductionPotential\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProductionPotential\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\ProductionPotential.Paths[Conditional Split Default Output]"
              endId="Package\ProductionPotential\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\ProductionPotential\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\ProductionPotential.Paths[Data Conversion Output]"
              endId="Package\ProductionPotential\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\ProductionPotential\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\ProductionPotential.Paths[Derived Column Output]"
              endId="Package\ProductionPotential\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\ProductionPotential\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\ProductionPotential.Paths[Excel Source Output]"
              endId="Package\ProductionPotential\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\ProductionPotential\ProductionPotential.Outputs[Excel Source Output]" />
            <path
              refId="Package\ProductionPotential.Paths[Lookup No Match Output]"
              endId="Package\ProductionPotential\ProductionPotential MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\ProductionPotential\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ProjectActivity"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9AF32B5E-9BA9-46EE-87D5-09F6FBAC2DF1}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="ProjectActivity">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\ProjectActivity\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from ProjectActivities</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from ProjectActivities) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProjectActivity\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ProjectActivity\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProjectActivity\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\ProjectActivity\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\ProjectActivity\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\ProjectActivity\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProjectActivity\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProjectActivity\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProjectActivity\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\ProjectActivity\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\ProjectActivity\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProjectActivity\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProjectActivity\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\ProjectActivity\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\ProjectActivity\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProjectActivity\ProjectActivity"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="ProjectActivity"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A424:A440]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProjectActivity\ProjectActivity.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Output].Columns[Report]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Output].ExternalColumns[PROJECT ACTIVITIES]"
                      length="255"
                      lineageId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Output].ExternalColumns[PROJECT ACTIVITIES]"
                      dataType="wstr"
                      length="255"
                      name="PROJECT ACTIVITIES" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Error Output].Columns[PROJECT ACTIVITIES]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Error Output].Columns[PROJECT ACTIVITIES]"
                      name="PROJECT ACTIVITIES" />
                    <outputColumn
                      refId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProjectActivity\ProjectActivity MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ProjectActivity MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[ProjectActivities]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ProjectActivity\ProjectActivity MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      externalMetadataColumnId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProjectActivity\ProjectActivity MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\ProjectActivity MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProjectActivity\ProjectActivity MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\ProjectActivity MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ProjectActivity\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ProjectActivity\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ProjectActivity\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      lineageId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ProjectActivity\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\ProjectActivity\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProjectActivity\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\ProjectActivity\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ProjectActivity\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\ProjectActivity\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ProjectActivity\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ProjectActivity\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ProjectActivity\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\ProjectActivity.Paths[Conditional Split Default Output]"
              endId="Package\ProjectActivity\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\ProjectActivity\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\ProjectActivity.Paths[Data Conversion Output]"
              endId="Package\ProjectActivity\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\ProjectActivity\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\ProjectActivity.Paths[Derived Column Output]"
              endId="Package\ProjectActivity\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\ProjectActivity\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\ProjectActivity.Paths[Excel Source Output]"
              endId="Package\ProjectActivity\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\ProjectActivity\ProjectActivity.Outputs[Excel Source Output]" />
            <path
              refId="Package\ProjectActivity.Paths[Lookup No Match Output]"
              endId="Package\ProjectActivity\ProjectActivity MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\ProjectActivity\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\UnPlannedMaintenance"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{E585B1BF-4F67-4BA3-B6A8-7897B8BEA9D0}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="UnPlannedMaintenance">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\UnPlannedMaintenance\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Check For Duplicate 1"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Check For Duplicate 2"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate 2"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate 2 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from PlannedMaintenances) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Data Conversion 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Data Conversion 2"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Data Conversion 2 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 2 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Electrical"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Electrical"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Derived Column 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Derived Column 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="15"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Instrumentation"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Instrumentation"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Derived Column 2"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Derived Column 2.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Derived Column 2.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Mechanical"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Mechanical"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Derived Column 2.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Derived Column 2 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 2 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Derived Column 2 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Derived Column 2 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportCategory]"
                      name="ReportCategory"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Safety"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Safety"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Derived Column 2 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Remove Empty Cells 1"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input].Columns[Instrumentation]"
                      cachedDataType="date"
                      cachedName="Instrumentation"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Instrumentation)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Remove Empty Cells 2"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input].Columns[Mechanical]"
                      cachedDataType="date"
                      cachedName="Mechanical"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Mechanical)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells 2 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input].Columns[Safety]"
                      cachedDataType="date"
                      cachedName="Safety"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Output].Columns[Safety]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Output].Columns[Safety]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Safety)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\UnPlannedMaintenance"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="UnPlannedMaintenance"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A395:A401]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Output].Columns[Report]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Output].ExternalColumns[Electrical]"
                      length="255"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Output].ExternalColumns[Electrical]"
                      dataType="date"
                      name="Electrical" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Error Output].Columns[Electrical]"
                      dataType="date"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Error Output].Columns[Electrical]"
                      name="Electrical" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="UnPlannedMaintenance 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A402:A408]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Output].ExternalColumns[Instrumentation]"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]"
                      name="Instrumentation"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Output].ExternalColumns[Instrumentation]"
                      dataType="wstr"
                      length="255"
                      name="Instrumentation" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[Instrumentation]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[Instrumentation]"
                      name="Instrumentation" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="UnPlannedMaintenance 2"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A409:A415]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Output].ExternalColumns[Mechanical]"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]"
                      name="Mechanical"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Output].ExternalColumns[Mechanical]"
                      dataType="wstr"
                      length="255"
                      name="Mechanical" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[Mechanical]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[Mechanical]"
                      name="Mechanical" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="UnPlannedMaintenance 3"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A416:A423]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Output].Columns[Safety]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Output].ExternalColumns[Safety]"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Output].Columns[Safety]"
                      name="Safety"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Output].ExternalColumns[Safety]"
                      dataType="date"
                      name="Safety" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Error Output].Columns[Safety]"
                      dataType="date"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Error Output].Columns[Safety]"
                      name="Safety" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="UnPlannedMaintenance MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PlannedMaintenances]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Output].Columns[Report]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output].Columns[ReportCategory]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="UnPlannedMaintenance MSSQL 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PlannedMaintenances]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output].Columns[ReportCategory]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].Columns[Instrumentation]"
                      cachedDataType="date"
                      cachedName="Instrumentation"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Output].Columns[Instrumentation]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="UnPlannedMaintenance MSSQL 2"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PlannedMaintenances]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output].Columns[ReportCategory]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].Columns[Mechanical]"
                      cachedDataType="date"
                      cachedName="Mechanical"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Output].Columns[Mechanical]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="UnPlannedMaintenance MSSQL 2 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PlannedMaintenances]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[ReportCategory]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="ReportCategory"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      lineageId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output].Columns[ReportCategory]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].Columns[Safety]"
                      cachedDataType="date"
                      cachedName="Safety"
                      externalMetadataColumnId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Output].Columns[Safety]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input].ExternalColumns[ReportCategory]"
                      dataType="nText"
                      name="ReportCategory" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\UnPlannedMaintenance.Paths[Conditional Split Default Output]"
              endId="Package\UnPlannedMaintenance\Derived Column 2.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Conditional Split Default Output1]"
              endId="Package\UnPlannedMaintenance\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\UnPlannedMaintenance\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Conditional Split Default Output2]"
              endId="Package\UnPlannedMaintenance\Derived Column 2 1.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Conditional Split Default Output3]"
              endId="Package\UnPlannedMaintenance\Derived Column 1.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Data Conversion Output]"
              endId="Package\UnPlannedMaintenance\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\UnPlannedMaintenance\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Data Conversion Output1]"
              endId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\UnPlannedMaintenance\Data Conversion 2 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Data Conversion Output2]"
              endId="Package\UnPlannedMaintenance\Check For Duplicate 2.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\UnPlannedMaintenance\Data Conversion 2.Outputs[Data Conversion Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Data Conversion Output3]"
              endId="Package\UnPlannedMaintenance\Check For Duplicate 1.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\UnPlannedMaintenance\Data Conversion 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Derived Column Output3]"
              endId="Package\UnPlannedMaintenance\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\UnPlannedMaintenance\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Derived Column Output2]"
              endId="Package\UnPlannedMaintenance\Data Conversion 1.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\UnPlannedMaintenance\Derived Column 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Derived Column Output1]"
              endId="Package\UnPlannedMaintenance\Data Conversion 2.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\UnPlannedMaintenance\Derived Column 2.Outputs[Derived Column Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Derived Column Output]"
              endId="Package\UnPlannedMaintenance\Data Conversion 2 1.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\UnPlannedMaintenance\Derived Column 2 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Excel Source Output]"
              endId="Package\UnPlannedMaintenance\Remove Empty Cells 1.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\UnPlannedMaintenance\UnPlannedMaintenance 1.Outputs[Excel Source Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Excel Source Output1]"
              endId="Package\UnPlannedMaintenance\Remove Empty Cells 2.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\UnPlannedMaintenance\UnPlannedMaintenance 2.Outputs[Excel Source Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Excel Source Output2]"
              endId="Package\UnPlannedMaintenance\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\UnPlannedMaintenance\UnPlannedMaintenance.Outputs[Excel Source Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Excel Source Output3]"
              endId="Package\UnPlannedMaintenance\Remove Empty Cells 2 1.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\UnPlannedMaintenance\UnPlannedMaintenance 3.Outputs[Excel Source Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Lookup No Match Output]"
              endId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\UnPlannedMaintenance\Check For Duplicate 2.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Lookup No Match Output1]"
              endId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\UnPlannedMaintenance\Check For Duplicate.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Lookup No Match Output2]"
              endId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\UnPlannedMaintenance\Check For Duplicate 1.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\UnPlannedMaintenance.Paths[Lookup No Match Output3]"
              endId="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\UnPlannedMaintenance\Check For Duplicate 2 1.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\UnPlannedMaintenanceReport"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{BDB08FFB-0F84-434B-9213-563927A79C24}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="UnPlannedMaintenanceReport">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\UnPlannedMaintenanceReport\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from UnPlannedMaintenanceReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from UnPlannedMaintenanceReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenanceReport\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenanceReport\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenanceReport\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenanceReport\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenanceReport\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenanceReport\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="date"
                      cachedName="Report"
                      lineageId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="UnPlannedMaintenanceReport"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A503:A519]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Output].Columns[Report]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Output].ExternalColumns[Unplanned Maintenance]"
                      lineageId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Output].ExternalColumns[Unplanned Maintenance]"
                      dataType="date"
                      name="Unplanned Maintenance" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Error Output].Columns[Unplanned Maintenance]"
                      dataType="date"
                      lineageId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Error Output].Columns[Unplanned Maintenance]"
                      name="Unplanned Maintenance" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="UnPlannedMaintenanceReport MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PendingMaintenanceReports]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="date"
                      cachedName="Report"
                      externalMetadataColumnId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\UnPlannedMaintenanceReport.Paths[Conditional Split Default Output]"
              endId="Package\UnPlannedMaintenanceReport\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\UnPlannedMaintenanceReport.Paths[Data Conversion Output]"
              endId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\UnPlannedMaintenanceReport\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\UnPlannedMaintenanceReport.Paths[Derived Column Output]"
              endId="Package\UnPlannedMaintenanceReport\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\UnPlannedMaintenanceReport\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\UnPlannedMaintenanceReport.Paths[Excel Source Output]"
              endId="Package\UnPlannedMaintenanceReport\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport.Outputs[Excel Source Output]" />
            <path
              refId="Package\UnPlannedMaintenanceReport.Paths[Lookup No Match Output]"
              endId="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\UnPlannedMaintenanceReport\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WellTestResult"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{751C6022-4FFB-4DF5-A269-8199B8FB593E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WellTestResult">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WellTestResult\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from WellTestResults</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from WellTestResults) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WellTestResult\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WellTestResult\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WellTestResult\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WellTestResult\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WellTestResult\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WellTestResult\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WellTestResult\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WellTestResult\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WellTestResult\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WellTestResult\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WellTestResult\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WellTestResult\Data Enrichment"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Data Enrichment"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[WellTestEnrichmentDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[WellTestEnrichmentDatas]) [refTable]
where [refTable].[Well] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Well" dataType="DT_WSTR" length="15" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Rsv" dataType="DT_WSTR" length="15" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TimeStamp" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WELL]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WellTestResult\Data Enrichment.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WellTestResult\Data Enrichment.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WellTestResult\Data Enrichment.Inputs[Lookup Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WELL"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WELL]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Well</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WellTestResult\Data Enrichment.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Match Output].Columns[UpdatedRsv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="15"
                      lineageId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Match Output].Columns[UpdatedRsv]"
                      name="UpdatedRsv"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Rsv</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WellTestResult\Data Enrichment.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WellTestResult\Data Enrichment.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WellTestResult\Data Enrichment.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WellTestResult\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WellTestResult\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WellTestResult\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WellTestResult\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WellTestResult\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WellTestResult\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WellTestResult\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WellTestResult\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WellTestResult\Remove Empty Cells.Inputs[Conditional Split Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WELL"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WELL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WellTestResult\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\WellTestResult\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WELL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(WELL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WellTestResult\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\WellTestResult\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WellTestResult\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\WellTestResult\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WellTestResult\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WellTestResult\WellTestResult"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WellTestResult"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A124:W163]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WellTestResult\WellTestResult.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Rsv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[Rsv]"
                      length="255"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Rsv]"
                      name="Rsv"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[WELL]"
                      length="255"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[TEST]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[TEST]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[TEST]"
                      name="TEST"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[CHOKE]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[CHOKE]"
                      length="255"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[CHOKE]"
                      name="CHOKE"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[HOURS]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[HOURS]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[HOURS]"
                      name="HOURS"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[THP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[THP]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[THP]"
                      name="THP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[FLP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[FLP]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[FLP]"
                      name="FLP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[BSW]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[BSW]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[BSW]"
                      name="BSW"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[API]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[API]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[API]"
                      name="API"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GROSS LIQUID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[GROSS LIQUID]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GROSS LIQUID]"
                      name="GROSS LIQUID"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[OIL]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[OIL]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[OIL]"
                      name="OIL"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GAS]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[GAS]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GAS]"
                      name="GAS"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WATER]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[WATER]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WATER]"
                      name="WATER"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GOR]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[GOR]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GOR]"
                      name="GOR"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GLR]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[GLR]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GLR]"
                      name="GLR"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Ps]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[Ps]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Ps]"
                      name="Ps"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Pwf]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[Pwf]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Pwf]"
                      name="Pwf"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[FREQ]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[FREQ]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[FREQ]"
                      name="FREQ"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[* CURRENT NET OIL POTENTIAL]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[* CURRENT NET OIL POTENTIAL]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[* CURRENT NET OIL POTENTIAL]"
                      name="* CURRENT NET OIL POTENTIAL"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Comments]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[Comments]"
                      length="255"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Comments]"
                      name="Comments"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="r8"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="r8"
                      name="F23" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[Rsv]"
                      dataType="wstr"
                      length="255"
                      name="Rsv" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[WELL]"
                      dataType="wstr"
                      length="255"
                      name="WELL" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[TEST]"
                      dataType="date"
                      name="TEST" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[CHOKE]"
                      dataType="wstr"
                      length="255"
                      name="CHOKE" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[HOURS]"
                      dataType="r8"
                      name="HOURS" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[THP]"
                      dataType="r8"
                      name="THP" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[FLP]"
                      dataType="r8"
                      name="FLP" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[BSW]"
                      dataType="r8"
                      name="BSW" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[API]"
                      dataType="r8"
                      name="API" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[GROSS LIQUID]"
                      dataType="r8"
                      name="GROSS LIQUID" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[OIL]"
                      dataType="r8"
                      name="OIL" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[GAS]"
                      dataType="r8"
                      name="GAS" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[WATER]"
                      dataType="r8"
                      name="WATER" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[GOR]"
                      dataType="r8"
                      name="GOR" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[GLR]"
                      dataType="r8"
                      name="GLR" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[Ps]"
                      dataType="r8"
                      name="Ps" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[Pwf]"
                      dataType="r8"
                      name="Pwf" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[FREQ]"
                      dataType="r8"
                      name="FREQ" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[* CURRENT NET OIL POTENTIAL]"
                      dataType="r8"
                      name="* CURRENT NET OIL POTENTIAL" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].ExternalColumns[Comments]"
                      dataType="wstr"
                      length="255"
                      name="Comments" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[Rsv]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[Rsv]"
                      name="Rsv" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[WELL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[WELL]"
                      name="WELL" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[TEST]"
                      dataType="date"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[TEST]"
                      name="TEST" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[CHOKE]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[CHOKE]"
                      name="CHOKE" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[HOURS]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[HOURS]"
                      name="HOURS" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[THP]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[THP]"
                      name="THP" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[FLP]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[FLP]"
                      name="FLP" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[BSW]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[BSW]"
                      name="BSW" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[API]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[API]"
                      name="API" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[GROSS LIQUID]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[GROSS LIQUID]"
                      name="GROSS LIQUID" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[OIL]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[OIL]"
                      name="OIL" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[GAS]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[GAS]"
                      name="GAS" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[WATER]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[WATER]"
                      name="WATER" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[GOR]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[GOR]"
                      name="GOR" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[GLR]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[GLR]"
                      name="GLR" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[Ps]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[Ps]"
                      name="Ps" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[Pwf]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[Pwf]"
                      name="Pwf" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[FREQ]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[FREQ]"
                      name="FREQ" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[* CURRENT NET OIL POTENTIAL]"
                      dataType="r8"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[* CURRENT NET OIL POTENTIAL]"
                      name="* CURRENT NET OIL POTENTIAL" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[Comments]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[Comments]"
                      name="Comments" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WellTestResult\WellTestResult MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WellTestResult MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WellTestResults]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WellTestResult\WellTestResult MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[UpdatedRsv]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="UpdatedRsv"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Rsv]"
                      lineageId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Match Output].Columns[UpdatedRsv]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[THP]"
                      cachedDataType="r8"
                      cachedName="THP"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[THP]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[THP]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[FLP]"
                      cachedDataType="r8"
                      cachedName="FLP"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FLP]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[FLP]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[BSW]"
                      cachedDataType="r8"
                      cachedName="BSW"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BSW]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[BSW]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[Ps]"
                      cachedDataType="r8"
                      cachedName="Ps"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Ps]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Ps]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[Pwf]"
                      cachedDataType="r8"
                      cachedName="Pwf"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Pwf]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[Pwf]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[OIL]"
                      cachedDataType="r8"
                      cachedName="OIL"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[OIL]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[OIL]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[GAS]"
                      cachedDataType="r8"
                      cachedName="GAS"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GAS]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GAS]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[WATER]"
                      cachedDataType="r8"
                      cachedName="WATER"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WATER]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[WATER]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[API]"
                      cachedDataType="r8"
                      cachedName="API"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[API]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[API]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[TEST]"
                      cachedDataType="date"
                      cachedName="TEST"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TestDate]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[TEST]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[CHOKE]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CHOKE"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Choke]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[CHOKE]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[HOURS]"
                      cachedDataType="r8"
                      cachedName="HOURS"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Hours]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[HOURS]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[GROSS LIQUID]"
                      cachedDataType="r8"
                      cachedName="GROSS LIQUID"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GROSSLIQUID]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GROSS LIQUID]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[GLR]"
                      cachedDataType="r8"
                      cachedName="GLR"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GLR]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GLR]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[FREQ]"
                      cachedDataType="r8"
                      cachedName="FREQ"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FREQ]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[FREQ]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[* CURRENT NET OIL POTENTIAL]"
                      cachedDataType="r8"
                      cachedName="* CURRENT NET OIL POTENTIAL"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[NETOILPOTENTIAL]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[* CURRENT NET OIL POTENTIAL]" />
                    <inputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].Columns[GOR]"
                      cachedDataType="r8"
                      cachedName="GOR"
                      externalMetadataColumnId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GOR]"
                      lineageId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output].Columns[GOR]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Rsv]"
                      dataType="nText"
                      name="Rsv" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[THP]"
                      dataType="nText"
                      name="THP" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FLP]"
                      dataType="nText"
                      name="FLP" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BSW]"
                      dataType="nText"
                      name="BSW" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Ps]"
                      dataType="nText"
                      name="Ps" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Pwf]"
                      dataType="nText"
                      name="Pwf" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[OIL]"
                      dataType="r8"
                      name="OIL" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GAS]"
                      dataType="r8"
                      name="GAS" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WATER]"
                      dataType="r8"
                      name="WATER" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[API]"
                      dataType="nText"
                      name="API" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      dataType="nText"
                      name="Comment" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TestDate]"
                      dataType="nText"
                      name="TestDate" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Choke]"
                      dataType="nText"
                      name="Choke" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Hours]"
                      dataType="nText"
                      name="Hours" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GROSSLIQUID]"
                      dataType="r8"
                      name="GROSSLIQUID" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GOR]"
                      dataType="nText"
                      name="GOR" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GLR]"
                      dataType="nText"
                      name="GLR" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FREQ]"
                      dataType="nText"
                      name="FREQ" />
                    <externalMetadataColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[NETOILPOTENTIAL]"
                      dataType="nText"
                      name="NETOILPOTENTIAL" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WellTestResult\WellTestResult MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\WellTestResult MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WellTestResult\WellTestResult MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WellTestResult\WellTestResult MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WellTestResult.Paths[Conditional Split Default Output]"
              endId="Package\WellTestResult\Data Enrichment.Inputs[Lookup Input]"
              name="Conditional Split Default Output"
              startId="Package\WellTestResult\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\WellTestResult.Paths[Data Conversion Output]"
              endId="Package\WellTestResult\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WellTestResult\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WellTestResult.Paths[Derived Column Output]"
              endId="Package\WellTestResult\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WellTestResult\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WellTestResult.Paths[Excel Source Output]"
              endId="Package\WellTestResult\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\WellTestResult\WellTestResult.Outputs[Excel Source Output]" />
            <path
              refId="Package\WellTestResult.Paths[Lookup Match Output]"
              endId="Package\WellTestResult\Derived Column.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\WellTestResult\Data Enrichment.Outputs[Lookup Match Output]" />
            <path
              refId="Package\WellTestResult.Paths[Lookup No Match Output]"
              endId="Package\WellTestResult\WellTestResult MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WellTestResult\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WFBGasAllocation"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{35248ED5-F1CD-4719-B5A3-7937427BF53E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WFBGasAllocation">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WFBGasAllocation\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from WFBGasAllocations</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from WFBGasAllocations) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasAllocation\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasAllocation\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasAllocation\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBGasAllocation\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBGasAllocation\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBGasAllocation\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasAllocation\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasAllocation\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasAllocation\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBGasAllocation\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBGasAllocation\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasAllocation\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasAllocation\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBGasAllocation\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBGasAllocation\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasAllocation\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasAllocation\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasAllocation\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Well]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Well"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[Well]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasAllocation\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\WFBGasAllocation\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[Well]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Well)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasAllocation\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\WFBGasAllocation\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasAllocation\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\WFBGasAllocation\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasAllocation\WFBGasAllocation"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WFBGasAllocation"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$AF126:AH144]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasAllocation\WFBGasAllocation.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[Well]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].ExternalColumns[Well]"
                      length="255"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[Well]"
                      name="Well"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[GOR]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].ExternalColumns[GOR]"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[GOR]"
                      name="GOR"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[Allocated Gas (MMSCF)]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].ExternalColumns[Allocated Gas (MMSCF)]"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[Allocated Gas (MMSCF)]"
                      name="Allocated Gas (MMSCF)"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].ExternalColumns[Well]"
                      dataType="wstr"
                      length="255"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].ExternalColumns[GOR]"
                      dataType="r8"
                      name="GOR" />
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].ExternalColumns[Allocated Gas (MMSCF)]"
                      dataType="r8"
                      name="Allocated Gas (MMSCF)" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[Well]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[Well]"
                      name="Well" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[GOR]"
                      dataType="r8"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[GOR]"
                      name="GOR" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[Allocated Gas (MMSCF)]"
                      dataType="r8"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[Allocated Gas (MMSCF)]"
                      name="Allocated Gas (MMSCF)" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBGasAllocation MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBGasAllocations]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].Columns[Well]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Well"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[Well]" />
                    <inputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].Columns[GOR]"
                      cachedDataType="r8"
                      cachedName="GOR"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GOR]"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[GOR]" />
                    <inputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].Columns[Allocated Gas (MMSCF)]"
                      cachedDataType="r8"
                      cachedName="Allocated Gas (MMSCF)"
                      externalMetadataColumnId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GAS]"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output].Columns[Allocated Gas (MMSCF)]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GOR]"
                      dataType="nText"
                      name="GOR" />
                    <externalMetadataColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GAS]"
                      dataType="nText"
                      name="GAS" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WFBGasAllocation.Paths[Conditional Split Default Output]"
              endId="Package\WFBGasAllocation\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\WFBGasAllocation\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\WFBGasAllocation.Paths[Data Conversion Output]"
              endId="Package\WFBGasAllocation\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBGasAllocation\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBGasAllocation.Paths[Derived Column Output]"
              endId="Package\WFBGasAllocation\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBGasAllocation\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBGasAllocation.Paths[Excel Source Output]"
              endId="Package\WFBGasAllocation\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\WFBGasAllocation\WFBGasAllocation.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBGasAllocation.Paths[Lookup No Match Output]"
              endId="Package\WFBGasAllocation\WFBGasAllocation MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBGasAllocation\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WFBGasLiftData"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{BB9EAD99-7A69-4333-8715-A169030816D1}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WFBGasLiftData">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WFBGasLiftData\Convert16"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert16"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Convert16.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Convert16.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert16.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert16.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Convert18"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert18"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Convert18.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Convert18.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert18.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert18.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Convert20"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert20"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Convert20.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Convert20.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert20.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert20.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Convert21"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert21"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Convert21.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Convert21.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert21.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert21.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Convert27"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert27"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Convert27.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Convert27.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert27.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert27.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Convert28"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert28"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Convert28.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Convert28.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert28.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Convert28.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Derived16"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived16"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Derived16.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived16.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived16.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Derived18"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived18"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Derived18.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived18.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived18.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Derived20"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived20"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Derived20.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived20.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived20.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Derived21"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived21"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Derived21.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived21.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived21.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Derived27"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived27"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Derived27.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived27.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived27.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Derived28"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived28"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Derived28.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived28.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[WELL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[WELL]"
                      name="WELL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"EBOK-10"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"EBOK-10"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Derived28.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\EBOK16"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK16"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A182:F186]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\EBOK16.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].ExternalColumns[Ebok-16]"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].ExternalColumns[Ebok-16]"
                      dataType="wstr"
                      length="255"
                      name="Ebok-16" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Error Output].Columns[Ebok-16]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Error Output].Columns[Ebok-16]"
                      name="Ebok-16" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\EBOK18"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK18"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A182:I186]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\EBOK18.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[Ebok-18]"
                      lineageId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[Ebok-16]"
                      dataType="wstr"
                      length="255"
                      name="Ebok-16" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].ExternalColumns[Ebok-18]"
                      dataType="r8"
                      name="Ebok-18" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Error Output].Columns[Ebok-18]"
                      dataType="r8"
                      lineageId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Error Output].Columns[Ebok-18]"
                      name="Ebok-18" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\EBOK20"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK20"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A182:L186]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\EBOK20.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[Ebok-20]"
                      lineageId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[Ebok-16]"
                      dataType="wstr"
                      length="255"
                      name="Ebok-16" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[Ebok-18]"
                      dataType="r8"
                      name="Ebok-18" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].ExternalColumns[Ebok-20]"
                      dataType="r8"
                      name="Ebok-20" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Error Output].Columns[Ebok-20]"
                      dataType="r8"
                      lineageId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Error Output].Columns[Ebok-20]"
                      name="Ebok-20" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\EBOK21"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK21"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A182:O186]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\EBOK21.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[Ebok-21]"
                      lineageId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[Ebok-16]"
                      dataType="wstr"
                      length="255"
                      name="Ebok-16" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[Ebok-18]"
                      dataType="r8"
                      name="Ebok-18" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[Ebok-20]"
                      dataType="r8"
                      name="Ebok-20" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="r8"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].ExternalColumns[Ebok-21]"
                      dataType="r8"
                      name="Ebok-21" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Error Output].Columns[Ebok-21]"
                      dataType="r8"
                      lineageId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Error Output].Columns[Ebok-21]"
                      name="Ebok-21" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\EBOK28"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK28"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A182:R186]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\EBOK28.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[Ebok-28]"
                      lineageId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[Ebok-16]"
                      dataType="wstr"
                      length="255"
                      name="Ebok-16" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[Ebok-18]"
                      dataType="r8"
                      name="Ebok-18" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[Ebok-20]"
                      dataType="r8"
                      name="Ebok-20" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="r8"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[Ebok-21]"
                      dataType="r8"
                      name="Ebok-21" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="r8"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="r8"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].ExternalColumns[Ebok-28]"
                      dataType="r8"
                      name="Ebok-28" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Error Output].Columns[Ebok-28]"
                      dataType="r8"
                      lineageId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Error Output].Columns[Ebok-28]"
                      name="Ebok-28" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\EBOK42"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="EBOK42"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A182:V186]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\EBOK42.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].Columns[Parameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].Columns[Parameter]"
                      name="Parameter"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].Columns[ParameterValue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[Ebok-42]"
                      lineageId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].Columns[ParameterValue]"
                      name="ParameterValue"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[Wells]"
                      dataType="wstr"
                      length="255"
                      name="Wells" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[Ebok-16]"
                      dataType="wstr"
                      length="255"
                      name="Ebok-16" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[Ebok-18]"
                      dataType="r8"
                      name="Ebok-18" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[Ebok-20]"
                      dataType="r8"
                      name="Ebok-20" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="r8"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[Ebok-21]"
                      dataType="r8"
                      name="Ebok-21" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="r8"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="r8"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[Ebok-28]"
                      dataType="r8"
                      name="Ebok-28" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="r8"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="r8"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="r8"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].ExternalColumns[Ebok-42]"
                      dataType="r8"
                      name="Ebok-42" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Error Output].Columns[Wells]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Error Output].Columns[Wells]"
                      name="Wells" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Error Output].Columns[Ebok-42]"
                      dataType="r8"
                      lineageId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Error Output].Columns[Ebok-42]"
                      name="Ebok-42" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Is_Duplicate16"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate16"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\Is_Duplicate16.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Is_Duplicate16.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate16.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate16.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate16.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate16.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Is_Duplicate18"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate18"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\Is_Duplicate18.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Is_Duplicate18.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate18.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate18.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate18.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate18.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Is_Duplicate20"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate20"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\Is_Duplicate20.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Is_Duplicate20.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate20.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate20.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate20.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate20.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Is_Duplicate21"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate21"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\Is_Duplicate21.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Is_Duplicate21.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate21.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate21.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate21.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate21.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Is_Duplicate27"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate27"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\Is_Duplicate27.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\Is_Duplicate28"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Is_Duplicate28"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBGasLiftDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\Is_Duplicate28.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\Is_Duplicate28.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate28.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate28.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate28.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBGasLiftData\Is_Duplicate28.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBGasLiftData16 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBGasLiftData18 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBGasLiftData20 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBGasLiftData21 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBGasLiftData27 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBGasLiftData28 MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBGasLiftDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].Columns[WELL]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="WELL"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output].Columns[WELL]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].Columns[Parameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameter"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      lineageId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].Columns[Parameter]" />
                    <inputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].Columns[ParameterValue]"
                      cachedDataType="r8"
                      cachedName="ParameterValue"
                      externalMetadataColumnId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      lineageId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output].Columns[ParameterValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameter]"
                      dataType="nText"
                      name="Parameter" />
                    <externalMetadataColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ParameterValue]"
                      dataType="nText"
                      name="ParameterValue" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WFBGasLiftData.Paths[Data Conversion Output]"
              endId="Package\WFBGasLiftData\Is_Duplicate20.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBGasLiftData\Convert20.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Data Conversion Output1]"
              endId="Package\WFBGasLiftData\Is_Duplicate18.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBGasLiftData\Convert18.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Data Conversion Output2]"
              endId="Package\WFBGasLiftData\Is_Duplicate21.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBGasLiftData\Convert21.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Data Conversion Output3]"
              endId="Package\WFBGasLiftData\Is_Duplicate27.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBGasLiftData\Convert27.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Data Conversion Output4]"
              endId="Package\WFBGasLiftData\Is_Duplicate28.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBGasLiftData\Convert28.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Data Conversion Output5]"
              endId="Package\WFBGasLiftData\Is_Duplicate16.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBGasLiftData\Convert16.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Derived Column Output4]"
              endId="Package\WFBGasLiftData\Convert28.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBGasLiftData\Derived28.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Derived Column Output3]"
              endId="Package\WFBGasLiftData\Convert27.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBGasLiftData\Derived27.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Derived Column Output5]"
              endId="Package\WFBGasLiftData\Convert18.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBGasLiftData\Derived18.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Derived Column Output1]"
              endId="Package\WFBGasLiftData\Convert16.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBGasLiftData\Derived16.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Derived Column Output]"
              endId="Package\WFBGasLiftData\Convert21.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBGasLiftData\Derived21.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Derived Column Output2]"
              endId="Package\WFBGasLiftData\Convert20.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBGasLiftData\Derived20.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Excel Source Output]"
              endId="Package\WFBGasLiftData\Derived28.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\WFBGasLiftData\EBOK28.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Excel Source Output1]"
              endId="Package\WFBGasLiftData\Derived27.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\WFBGasLiftData\EBOK42.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Excel Source Output2]"
              endId="Package\WFBGasLiftData\Derived20.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\WFBGasLiftData\EBOK20.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Excel Source Output3]"
              endId="Package\WFBGasLiftData\Derived21.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\WFBGasLiftData\EBOK21.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Excel Source Output4]"
              endId="Package\WFBGasLiftData\Derived16.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\WFBGasLiftData\EBOK16.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Excel Source Output5]"
              endId="Package\WFBGasLiftData\Derived18.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\WFBGasLiftData\EBOK18.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Lookup No Match Output4]"
              endId="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBGasLiftData\Is_Duplicate21.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Lookup No Match Output]"
              endId="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBGasLiftData\Is_Duplicate28.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Lookup No Match Output1]"
              endId="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBGasLiftData\Is_Duplicate16.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Lookup No Match Output2]"
              endId="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBGasLiftData\Is_Duplicate27.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Lookup No Match Output3]"
              endId="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBGasLiftData\Is_Duplicate18.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\WFBGasLiftData.Paths[Lookup No Match Output5]"
              endId="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBGasLiftData\Is_Duplicate20.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WFBGeneralReport"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{41E8FA26-95FD-4489-B503-0B7D8B11242F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WFBGeneralReport">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WFBGeneralReport\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from WFBGeneralReports</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from WFBGeneralReports) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGeneralReport\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGeneralReport\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGeneralReport\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBGeneralReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBGeneralReport\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBGeneralReport\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGeneralReport\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGeneralReport\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGeneralReport\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBGeneralReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBGeneralReport\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGeneralReport\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGeneralReport\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBGeneralReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBGeneralReport\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGeneralReport\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBGeneralReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGeneralReport\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      lineageId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGeneralReport\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\WFBGeneralReport\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Output].Columns[Report]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Report)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGeneralReport\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\WFBGeneralReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBGeneralReport\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\WFBGeneralReport\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGeneralReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGeneralReport\WFBGeneralReport"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WFBGeneralReport"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A441:A462]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGeneralReport\WFBGeneralReport.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Output].Columns[Report]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Output].ExternalColumns[WFB]"
                      length="255"
                      lineageId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Output].Columns[Report]"
                      name="Report"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Output].ExternalColumns[WFB]"
                      dataType="wstr"
                      length="255"
                      name="WFB" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Error Output].Columns[WFB]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Error Output].Columns[WFB]"
                      name="WFB" />
                    <outputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBGeneralReport MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBGeneralReports]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].Columns[Report]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Report"
                      externalMetadataColumnId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      lineageId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Output].Columns[Report]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Report]"
                      dataType="nText"
                      name="Report" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WFBGeneralReport.Paths[Conditional Split Default Output]"
              endId="Package\WFBGeneralReport\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\WFBGeneralReport\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\WFBGeneralReport.Paths[Data Conversion Output]"
              endId="Package\WFBGeneralReport\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBGeneralReport\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBGeneralReport.Paths[Derived Column Output]"
              endId="Package\WFBGeneralReport\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBGeneralReport\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBGeneralReport.Paths[Excel Source Output]"
              endId="Package\WFBGeneralReport\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\WFBGeneralReport\WFBGeneralReport.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBGeneralReport.Paths[Lookup No Match Output]"
              endId="Package\WFBGeneralReport\WFBGeneralReport MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBGeneralReport\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WFBMaintenanceData"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{BDA370AF-49F7-42EA-B550-EA4F1165A355}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WFBMaintenanceData">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WFBMaintenanceData\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBMaintenanceDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBMaintenanceDatas) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBMaintenanceData\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBMaintenanceData\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBMaintenanceData\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBMaintenanceData\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBMaintenanceData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBMaintenanceData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBMaintenanceData\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBMaintenanceData\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\WFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Parameters)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\WFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\WFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBMaintenanceData\WFBMaintenanceData"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WFBMaintenanceData"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A270:O278]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBMaintenanceData\WFBMaintenanceData.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]"
                      name="Parameters"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Daily Total]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Daily Total]"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Daily Total]"
                      name="Daily Total"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Previous Total]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Previous Total]"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Previous Total]"
                      name="Previous Total"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Cumulative]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Cumulative]"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Cumulative]"
                      name="Cumulative"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Comments]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Comments]"
                      length="255"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Comments]"
                      name="Comments"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Daily Total]"
                      dataType="r8"
                      name="Daily Total" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Previous Total]"
                      dataType="r8"
                      name="Previous Total" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Cumulative]"
                      dataType="r8"
                      name="Cumulative" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="r8"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].ExternalColumns[Comments]"
                      dataType="wstr"
                      length="255"
                      name="Comments" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Daily Total]"
                      dataType="r8"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Daily Total]"
                      name="Daily Total" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Previous Total]"
                      dataType="r8"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Previous Total]"
                      name="Previous Total" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Cumulative]"
                      dataType="r8"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Cumulative]"
                      name="Cumulative" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Comments]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[Comments]"
                      name="Comments" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBMaintenanceData MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBMaintenanceDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Parameters]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Parameters"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Parameters]" />
                    <inputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Daily Total]"
                      cachedDataType="r8"
                      cachedName="Daily Total"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DailyTotal]"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Daily Total]" />
                    <inputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Previous Total]"
                      cachedDataType="r8"
                      cachedName="Previous Total"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousTotal]"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Previous Total]" />
                    <inputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Cumulative]"
                      cachedDataType="r8"
                      cachedName="Cumulative"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Cummulative]"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Cumulative]" />
                    <inputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].Columns[Comments]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Comments"
                      externalMetadataColumnId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output].Columns[Comments]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Parameters]"
                      dataType="nText"
                      name="Parameters" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DailyTotal]"
                      dataType="nText"
                      name="DailyTotal" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousTotal]"
                      dataType="nText"
                      name="PreviousTotal" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Cummulative]"
                      dataType="dbTimeStamp"
                      name="Cummulative" />
                    <externalMetadataColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      dataType="nText"
                      name="Comment" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WFBMaintenanceData.Paths[Conditional Split Default Output]"
              endId="Package\WFBMaintenanceData\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\WFBMaintenanceData\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\WFBMaintenanceData.Paths[Data Conversion Output]"
              endId="Package\WFBMaintenanceData\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBMaintenanceData\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBMaintenanceData.Paths[Derived Column Output]"
              endId="Package\WFBMaintenanceData\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBMaintenanceData\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBMaintenanceData.Paths[Excel Source Output]"
              endId="Package\WFBMaintenanceData\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\WFBMaintenanceData\WFBMaintenanceData.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBMaintenanceData.Paths[Lookup No Match Output]"
              endId="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBMaintenanceData\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WFBProcessData_GasConsumed"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C2DBDB18-8351-44C6-BF8E-4F4CB7071A19}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WFBProcessData_GasConsumed">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WFBProcessData_GasConsumed\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBProcessData_GasConsumed</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBProcessData_GasConsumed) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasConsumed\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasConsumed\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasConsumed\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasConsumed\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input].Columns[GasFlowParameter]"
                      cachedDataType="date"
                      cachedName="GasFlowParameter"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(GasFlowParameter)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WFBProcessData_GasConsumed"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$N202:S206]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F2]"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]"
                      name="GasFlowParameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlow]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[(mmscf)]"
                      length="255"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlow]"
                      name="GasFlow"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].ExternalColumns[(mmscf)]"
                      dataType="wstr"
                      length="255"
                      name="(mmscf)" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[F2]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[F2]"
                      name="F2" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[(mmscf)]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Error Output].Columns[(mmscf)]"
                      name="(mmscf)" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBProcessData_GasConsumed MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBProcessData_GasConsumed]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[GasFlowParameter]"
                      cachedDataType="date"
                      cachedName="GasFlowParameter"
                      externalMetadataColumnId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlowParameter]"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlowParameter]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].Columns[GasFlow]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GasFlow"
                      externalMetadataColumnId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlow]"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output].Columns[GasFlow]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlowParameter]"
                      dataType="nText"
                      name="GasFlowParameter" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlow]"
                      dataType="r8"
                      name="GasFlow" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WFBProcessData_GasConsumed.Paths[Conditional Split Default Output]"
              endId="Package\WFBProcessData_GasConsumed\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\WFBProcessData_GasConsumed.Paths[Data Conversion Output]"
              endId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBProcessData_GasConsumed\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBProcessData_GasConsumed.Paths[Derived Column Output]"
              endId="Package\WFBProcessData_GasConsumed\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBProcessData_GasConsumed\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBProcessData_GasConsumed.Paths[Excel Source Output]"
              endId="Package\WFBProcessData_GasConsumed\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBProcessData_GasConsumed.Paths[Lookup No Match Output]"
              endId="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBProcessData_GasConsumed\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WFBProcessData_GasProduced"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6BD6DF32-077C-4D6C-841E-E59D7280811C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WFBProcessData_GasProduced">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WFBProcessData_GasProduced\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBProcessData_GasProduced</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBProcessData_GasProduced) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBProcessData_GasProduced\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasProduced\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasProduced\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasProduced\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasProduced\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input].Columns[GasFlowParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GasFlowParameter"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(GasFlowParameter)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WFBProcessData_GasProduced"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$J202:L206]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[Gas Flow (mmscf)]"
                      length="255"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]"
                      name="GasFlowParameter"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlow]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[F3]"
                      length="255"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlow]"
                      name="GasFlow"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[Gas Flow (mmscf)]"
                      dataType="wstr"
                      length="255"
                      name="Gas Flow (mmscf)" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="date"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[Gas Flow (mmscf)]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[Gas Flow (mmscf)]"
                      name="Gas Flow (mmscf)" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[F3]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Error Output].Columns[F3]"
                      name="F3" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBProcessData_GasProduced MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBProcessData_GasProduced]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="IgnoreFailure"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[GasFlowParameter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GasFlowParameter"
                      externalMetadataColumnId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlowParameter]"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlowParameter]" />
                    <inputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].Columns[GasFlow]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="GasFlow"
                      externalMetadataColumnId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlow]"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output].Columns[GasFlow]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlowParameter]"
                      dataType="nText"
                      name="GasFlowParameter" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasFlow]"
                      dataType="r8"
                      name="GasFlow" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WFBProcessData_GasProduced.Paths[Conditional Split Default Output]"
              endId="Package\WFBProcessData_GasProduced\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\WFBProcessData_GasProduced.Paths[Data Conversion Output]"
              endId="Package\WFBProcessData_GasProduced\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBProcessData_GasProduced\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBProcessData_GasProduced.Paths[Derived Column Output]"
              endId="Package\WFBProcessData_GasProduced\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBProcessData_GasProduced\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBProcessData_GasProduced.Paths[Excel Source Output]"
              endId="Package\WFBProcessData_GasProduced\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBProcessData_GasProduced.Paths[Lookup No Match Output]"
              endId="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBProcessData_GasProduced\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WFBProcessData_Reading"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{91F23263-38AA-4C51-82D8-C3F46698CC83}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WFBProcessData_Reading">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WFBProcessData_Reading\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBProcessData_Reading</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBProcessData_Reading) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBProcessData_Reading\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_Reading\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_Reading\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBProcessData_Reading\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBProcessData_Reading\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBProcessData_Reading\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_Reading\WFBProcessData_Reading"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WFBProcessData_Reading"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A202:H206]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].Columns[Pressure]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[Pressure (psig)]"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].Columns[Pressure]"
                      name="Pressure"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].Columns[Temperature]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[Temp# (oF)]"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].Columns[GasSource]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].Columns[GasSource]"
                      name="GasSource"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="wstr"
                      length="255"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[Pressure (psig)]"
                      dataType="r8"
                      name="Pressure (psig)" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="wstr"
                      length="255"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output].ExternalColumns[Temp# (oF)]"
                      dataType="r8"
                      name="Temp# (oF)" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[Pressure (psig)]"
                      dataType="r8"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[Pressure (psig)]"
                      name="Pressure (psig)" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[Temp# (oF)]"
                      dataType="r8"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[Temp# (oF)]"
                      name="Temp# (oF)" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBProcessData_Reading MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBProcessData_Reading]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GasSource]"
                      dataType="nText"
                      name="GasSource" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                      dataType="nText"
                      name="Pressure" />
                    <externalMetadataColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Temperature]"
                      dataType="nText"
                      name="Temperature" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WFBProcessData_Reading.Paths[Data Conversion Output]"
              endId="Package\WFBProcessData_Reading\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBProcessData_Reading\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBProcessData_Reading.Paths[Derived Column Output]"
              endId="Package\WFBProcessData_Reading\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBProcessData_Reading\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBProcessData_Reading.Paths[Excel Source Output]"
              endId="Package\WFBProcessData_Reading\Derived Column.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\WFBProcessData_Reading\WFBProcessData_Reading.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBProcessData_Reading.Paths[Lookup No Match Output]"
              endId="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBProcessData_Reading\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WFBWaterInjectorMeter"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{44C26B69-FF6D-44F7-BC5E-D79C2C3973DE}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WFBWaterInjectorMeter">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WFBWaterInjectorMeter\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WFBWaterInjectorMeters</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WFBWaterInjectorMeters) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBWaterInjectorMeter\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWaterInjectorMeter\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWaterInjectorMeter\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBWaterInjectorMeter\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWaterInjectorMeter\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input].Columns[MeterName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MeterName"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(MeterName)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WFBWaterInjectorMeter"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A218:I223]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]"
                      name="MeterName"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[CurrentEightHours]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F3]"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[CurrentEightHours]"
                      name="CurrentEightHours"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[PreviousEightHours]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F5]"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[PreviousEightHours]"
                      name="PreviousEightHours"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[TwentyFourHours]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F7]"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[TwentyFourHours]"
                      name="TwentyFourHours"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[LFP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F9]"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[LFP]"
                      name="LFP"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="date"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="r8"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="r8"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="r8"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="r8"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="r8"
                      name="F9" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F3]"
                      dataType="r8"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F3]"
                      name="F3" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F5]"
                      dataType="r8"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F5]"
                      name="F5" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F7]"
                      dataType="r8"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F7]"
                      name="F7" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F9]"
                      dataType="r8"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[F9]"
                      name="F9" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WFBWaterInjectorMeter MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBWaterInjectorMeters]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[MeterName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MeterName"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MeterName]"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[MeterName]" />
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[CurrentEightHours]"
                      cachedDataType="r8"
                      cachedName="CurrentEightHours"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CurrentEightHours]"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[CurrentEightHours]" />
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[PreviousEightHours]"
                      cachedDataType="r8"
                      cachedName="PreviousEightHours"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousEightHours]"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[PreviousEightHours]" />
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[TwentyFourHours]"
                      cachedDataType="r8"
                      cachedName="TwentyFourHours"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHours]"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[TwentyFourHours]" />
                    <inputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].Columns[LFP]"
                      cachedDataType="r8"
                      cachedName="LFP"
                      externalMetadataColumnId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[LFP]"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output].Columns[LFP]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MeterName]"
                      dataType="nText"
                      name="MeterName" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CurrentEightHours]"
                      dataType="nText"
                      name="CurrentEightHours" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousEightHours]"
                      dataType="nText"
                      name="PreviousEightHours" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHours]"
                      dataType="nText"
                      name="TwentyFourHours" />
                    <externalMetadataColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[LFP]"
                      dataType="nText"
                      name="LFP" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WFBWaterInjectorMeter.Paths[Conditional Split Default Output]"
              endId="Package\WFBWaterInjectorMeter\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\WFBWaterInjectorMeter.Paths[Data Conversion Output]"
              endId="Package\WFBWaterInjectorMeter\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBWaterInjectorMeter\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBWaterInjectorMeter.Paths[Derived Column Output]"
              endId="Package\WFBWaterInjectorMeter\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBWaterInjectorMeter\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBWaterInjectorMeter.Paths[Excel Source Output]"
              endId="Package\WFBWaterInjectorMeter\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBWaterInjectorMeter.Paths[Lookup No Match Output]"
              endId="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBWaterInjectorMeter\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WFBWellData"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{F5EC07E0-C749-42F5-BD87-DB9AFEA99002}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WFBWellData">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WFBWellData\CFBWellData MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="CFBWellData MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WFBWellDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBWellData\CFBWellData MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[UpdatedRsv]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="UpdatedRsv"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Rsv]"
                      lineageId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Match Output].Columns[UpdatedRsv]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Well]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Well"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Well]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Choke]"
                      cachedDataType="r8"
                      cachedName="Choke"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CHOKE]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Choke]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[THP]"
                      cachedDataType="r8"
                      cachedName="THP"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[THP]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[THP]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[FLP]"
                      cachedDataType="r8"
                      cachedName="FLP"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FLP]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[FLP]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[BSW]"
                      cachedDataType="r8"
                      cachedName="BSW"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BSW]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[BSW]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[PS]"
                      cachedDataType="r8"
                      cachedName="PS"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Ps]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[PS]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[PWF]"
                      cachedDataType="r8"
                      cachedName="PWF"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Pwf]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[PWF]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[BHT]"
                      cachedDataType="r8"
                      cachedName="BHT"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BHT]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[BHT]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[DP]"
                      cachedDataType="r8"
                      cachedName="DP"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DP]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[DP]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[OIL]"
                      cachedDataType="r8"
                      cachedName="OIL"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[OIL]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[OIL]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[GAS]"
                      cachedDataType="r8"
                      cachedName="GAS"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GAS]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[GAS]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[WATER]"
                      cachedDataType="r8"
                      cachedName="WATER"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WATER]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[WATER]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[COMMENT]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="COMMENT"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[COMMENT]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Hours_Offline]"
                      cachedDataType="date"
                      cachedName="Hours_Offline"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[HOURS_Offline]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Hours_Offline]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[Hours_Online]"
                      cachedDataType="date"
                      cachedName="Hours_Online"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[HOURS_Online]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Hours_Online]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[PUMPFREQUENCY]"
                      cachedDataType="r8"
                      cachedName="PUMPFREQUENCY"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PumpFrequency]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[PUMPFREQUENCY]" />
                    <inputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].Columns[API]"
                      cachedDataType="r8"
                      cachedName="API"
                      externalMetadataColumnId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[API]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[API]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Rsv]"
                      dataType="nText"
                      name="Rsv" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Well]"
                      dataType="nText"
                      name="Well" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CHOKE]"
                      dataType="nText"
                      name="CHOKE" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[THP]"
                      dataType="nText"
                      name="THP" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[FLP]"
                      dataType="nText"
                      name="FLP" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BSW]"
                      dataType="nText"
                      name="BSW" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Ps]"
                      dataType="nText"
                      name="Ps" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Pwf]"
                      dataType="nText"
                      name="Pwf" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[BHT]"
                      dataType="nText"
                      name="BHT" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DP]"
                      dataType="nText"
                      name="DP" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[OIL]"
                      dataType="r8"
                      name="OIL" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[GAS]"
                      dataType="r8"
                      name="GAS" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[WATER]"
                      dataType="r8"
                      name="WATER" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[API]"
                      dataType="nText"
                      name="API" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PumpFrequency]"
                      dataType="nText"
                      name="PumpFrequency" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Comment]"
                      dataType="nText"
                      name="Comment" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[HOURS_Online]"
                      dataType="nText"
                      name="HOURS_Online" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[HOURS_Offline]"
                      dataType="nText"
                      name="HOURS_Offline" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\CFBWellData MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWellData\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as MyReportDate from WFBWellDatas</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as MyReportDate from WFBWellDatas) [refTable]
where [refTable].[MyReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="MyReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBWellData\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBWellData\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBWellData\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MyReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBWellData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup Match Output].Columns[MyReportDate]"
                      name="MyReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">MyReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBWellData\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBWellData\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWellData\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBWellData\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBWellData\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WFBWellData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WFBWellData\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWellData\Data Enrichment"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Data Enrichment"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[WellTestEnrichmentDatas]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[WellTestEnrichmentDatas]) [refTable]
where [refTable].[Well] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Well" dataType="DT_WSTR" length="15" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Rsv" dataType="DT_WSTR" length="15" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TimeStamp" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Well]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBWellData\Data Enrichment.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WFBWellData\Data Enrichment.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBWellData\Data Enrichment.Inputs[Lookup Input].Columns[Well]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Well"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Well]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Well</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WFBWellData\Data Enrichment.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Match Output].Columns[UpdatedRsv]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="15"
                      lineageId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Match Output].Columns[UpdatedRsv]"
                      name="UpdatedRsv"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Rsv</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWellData\Data Enrichment.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WFBWellData\Data Enrichment.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WFBWellData\Data Enrichment.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWellData\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBWellData\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WFBWellData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWellData\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WFBWellData\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWellData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWellData\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WFBWellData\Remove Empty Cells.Inputs[Conditional Split Input].Columns[Well]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Well"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Well]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WFBWellData\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\WFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Well]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(Well)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWellData\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\WFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\WFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WFBWellData\WFBWellData"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WFBWellData"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$A89:W118]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WFBWellData\WFBWellData.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[RSV]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F1]"
                      length="255"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[RSV]"
                      name="RSV"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Well]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F2]"
                      length="255"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Well]"
                      name="Well"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Choke]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F3]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Choke]"
                      name="Choke"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Hours_Online]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F4]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Hours_Online]"
                      name="Hours_Online"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Hours_Offline]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F5]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[Hours_Offline]"
                      name="Hours_Offline"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[THP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F6]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[THP]"
                      name="THP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[FLP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F7]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[FLP]"
                      name="FLP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[BSW]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F8]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[BSW]"
                      name="BSW"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[PS]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F9]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[PS]"
                      name="PS"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[PWF]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F10]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[PWF]"
                      name="PWF"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[BHT]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F11]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[BHT]"
                      name="BHT"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[DP]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F12]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[DP]"
                      name="DP"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[OIL]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F13]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[OIL]"
                      name="OIL"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[GAS]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F15]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[GAS]"
                      name="GAS"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[WATER]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F17]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[WATER]"
                      name="WATER"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[API]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F19]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[API]"
                      name="API"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[PUMPFREQUENCY]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F21]"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[PUMPFREQUENCY]"
                      name="PUMPFREQUENCY"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[COMMENT]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F23]"
                      length="255"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].Columns[COMMENT]"
                      name="COMMENT"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F1]"
                      dataType="wstr"
                      length="255"
                      name="F1" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F3]"
                      dataType="r8"
                      name="F3" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="date"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F5]"
                      dataType="date"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="r8"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F7]"
                      dataType="r8"
                      name="F7" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="r8"
                      name="F9" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F10]"
                      dataType="r8"
                      name="F10" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="r8"
                      name="F11" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F12]"
                      dataType="r8"
                      name="F12" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F13]"
                      dataType="r8"
                      name="F13" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F14]"
                      dataType="r8"
                      name="F14" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F15]"
                      dataType="r8"
                      name="F15" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F16]"
                      dataType="r8"
                      name="F16" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F17]"
                      dataType="r8"
                      name="F17" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F18]"
                      dataType="r8"
                      name="F18" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F19]"
                      dataType="r8"
                      name="F19" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F20]"
                      dataType="r8"
                      name="F20" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F21]"
                      dataType="r8"
                      name="F21" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F22]"
                      dataType="wstr"
                      length="255"
                      name="F22" />
                    <externalMetadataColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output].ExternalColumns[F23]"
                      dataType="wstr"
                      length="255"
                      name="F23" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F1]"
                      name="F1" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F2]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F2]"
                      name="F2" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F3]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F3]"
                      name="F3" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F4]"
                      dataType="date"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F4]"
                      name="F4" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F5]"
                      dataType="date"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F5]"
                      name="F5" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F6]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F6]"
                      name="F6" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F7]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F7]"
                      name="F7" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F8]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F8]"
                      name="F8" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F9]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F9]"
                      name="F9" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F10]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F10]"
                      name="F10" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F11]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F11]"
                      name="F11" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F12]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F12]"
                      name="F12" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F13]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F13]"
                      name="F13" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F15]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F15]"
                      name="F15" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F17]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F17]"
                      name="F17" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F19]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F19]"
                      name="F19" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F21]"
                      dataType="r8"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F21]"
                      name="F21" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F23]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[F23]"
                      name="F23" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WFBWellData.Paths[Conditional Split Default Output]"
              endId="Package\WFBWellData\Data Enrichment.Inputs[Lookup Input]"
              name="Conditional Split Default Output"
              startId="Package\WFBWellData\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\WFBWellData.Paths[Data Conversion Output]"
              endId="Package\WFBWellData\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WFBWellData\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WFBWellData.Paths[Derived Column Output]"
              endId="Package\WFBWellData\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WFBWellData\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WFBWellData.Paths[Excel Source Output]"
              endId="Package\WFBWellData\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\WFBWellData\WFBWellData.Outputs[Excel Source Output]" />
            <path
              refId="Package\WFBWellData.Paths[Lookup Match Output]"
              endId="Package\WFBWellData\Derived Column.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\WFBWellData\Data Enrichment.Outputs[Lookup Match Output]" />
            <path
              refId="Package\WFBWellData.Paths[Lookup No Match Output]"
              endId="Package\WFBWellData\CFBWellData MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WFBWellData\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WIJManifoldMeter"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C68C8FC3-218A-40A3-9CA9-2EF4D73F7272}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="WIJManifoldMeter">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\WIJManifoldMeter\Check For Duplicate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check For Duplicate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select convert(nvarchar(50),ReportDate) as ReportDate from WIJManifoldMeters</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select convert(nvarchar(50),ReportDate) as ReportDate from WIJManifoldMeters) [refTable]
where [refTable].[ReportDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ReportDate" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WIJManifoldMeter\Check For Duplicate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WIJManifoldMeter\Check For Duplicate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WIJManifoldMeter\Check For Duplicate.Inputs[Lookup Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ReportDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\WIJManifoldMeter\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup Match Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ReportDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\WIJManifoldMeter\Check For Duplicate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\WIJManifoldMeter\Check For Duplicate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WIJManifoldMeter\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WIJManifoldMeter\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WIJManifoldMeter\Data Conversion.Inputs[Data Conversion Input].Columns[DayOftheWeek]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="DayOftheWeek"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\WIJManifoldMeter\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]"
                      name="Copy of DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\WIJManifoldMeter\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WIJManifoldMeter\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WIJManifoldMeter\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\WIJManifoldMeter\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]"
                      name="ReportDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING]((DT_STR,50,1256)[DATEADD]("DAY",-1,[GETDATE]()),1,10)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING((DT_STR,50,1256)DATEADD("DAY",-1,GETDATE()),1,10)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="2"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]"
                      name="UploadTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("hh",[GETDATE]()),2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">RIGHT("0" + (DT_STR,2,1252)DATEPART("hh",GETDATE()),2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]"
                      name="TimeStamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="20"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[DayOftheWeek]"
                      name="DayOftheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,20,1252)(([DATEPART]("DW",[GETDATE]()) == 1) ? "SUNDAY" : ([DATEPART]("DW",[GETDATE]()) == 2) ? "MONDAY" : ([DATEPART]("DW",[GETDATE]()) == 3) ? "TUESDAY" : ([DATEPART]("DW",[GETDATE]()) == 4) ? "WEDNESDAY" : ([DATEPART]("DW",[GETDATE]()) == 5) ? "THURSDAY" : ([DATEPART]("DW",[GETDATE]()) == 6) ? "FRIDAY" : ([DATEPART]("DW",[GETDATE]()) == 7) ? "SATURDAY" : "NULL")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,20,1252)((DATEPART("DW",GETDATE()) == 1) ? "SUNDAY" : (DATEPART("DW",GETDATE()) == 2) ? "MONDAY" : (DATEPART("DW",GETDATE()) == 3) ? "TUESDAY" : (DATEPART("DW",GETDATE()) == 4) ? "WEDNESDAY" : (DATEPART("DW",GETDATE()) == 5) ? "THURSDAY" : (DATEPART("DW",GETDATE()) == 6) ? "FRIDAY" : (DATEPART("DW",GETDATE()) == 7) ? "SATURDAY" : "NULL")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\WIJManifoldMeter\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WIJManifoldMeter\Remove Empty Cells"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Empty Cells"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\WIJManifoldMeter\Remove Empty Cells.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WIJManifoldMeter\Remove Empty Cells.Inputs[Conditional Split Input].Columns[MeterName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MeterName"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[MeterName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WIJManifoldMeter\Remove Empty Cells.Outputs[EmptyRows]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="EmptyRows"
                  synchronousInputId="Package\WIJManifoldMeter\Remove Empty Cells.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[MeterName]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(MeterName)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WIJManifoldMeter\Remove Empty Cells.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\WIJManifoldMeter\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\WIJManifoldMeter\Remove Empty Cells.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\WIJManifoldMeter\Remove Empty Cells.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\Remove Empty Cells.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WIJManifoldMeter\WIJManifoldMeter"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="WIJManifoldMeter"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Operations$J219:Q223]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\WIJManifoldMeter\WIJManifoldMeter.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[MeterName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[WIJ-Manifold Meters]"
                      length="255"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[MeterName]"
                      name="MeterName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[CurrentEightHours]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[Current 08:00 hrs]"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[CurrentEightHours]"
                      name="CurrentEightHours"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[PreviousEightHours]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[Previous 08:00 hrs]"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[PreviousEightHours]"
                      name="PreviousEightHours"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[TwentyFourHours]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[24Hr Total]"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[TwentyFourHours]"
                      name="TwentyFourHours"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[WIJ-Manifold Meters]"
                      dataType="wstr"
                      length="255"
                      name="WIJ-Manifold Meters" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="date"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[Current 08:00 hrs]"
                      dataType="r8"
                      name="Current 08:00 hrs" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="r8"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[Previous 08:00 hrs]"
                      dataType="r8"
                      name="Previous 08:00 hrs" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="r8"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[24Hr Total]"
                      dataType="r8"
                      name="24Hr Total" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="r8"
                      name="F8" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[WIJ-Manifold Meters]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[WIJ-Manifold Meters]"
                      name="WIJ-Manifold Meters" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[Current 08:00 hrs]"
                      dataType="r8"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[Current 08:00 hrs]"
                      name="Current 08:00 hrs" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[Previous 08:00 hrs]"
                      dataType="r8"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[Previous 08:00 hrs]"
                      name="Previous 08:00 hrs" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[24Hr Total]"
                      dataType="r8"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[24Hr Total]"
                      name="24Hr Total" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="WIJManifoldMeter MSSQL"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WIJManifoldMeters]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[OERLAGITDHAUH.ERAS.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].Columns[ReportDate]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ReportDate"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[ReportDate]" />
                    <inputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].Columns[UploadTime]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="UploadTime"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[UploadTime]" />
                    <inputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="TimeStamp"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      lineageId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output].Columns[TimeStamp]" />
                    <inputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].Columns[Copy of DayOftheWeek]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="Copy of DayOftheWeek"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      lineageId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of DayOftheWeek]" />
                    <inputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].Columns[MeterName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MeterName"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MeterName]"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[MeterName]" />
                    <inputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].Columns[CurrentEightHours]"
                      cachedDataType="r8"
                      cachedName="CurrentEightHours"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CurrentEightHours]"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[CurrentEightHours]" />
                    <inputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].Columns[PreviousEightHours]"
                      cachedDataType="r8"
                      cachedName="PreviousEightHours"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousEightHours]"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[PreviousEightHours]" />
                    <inputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].Columns[TwentyFourHours]"
                      cachedDataType="r8"
                      cachedName="TwentyFourHours"
                      externalMetadataColumnId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHours]"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output].Columns[TwentyFourHours]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[ReportDate]"
                      dataType="dbTimeStamp"
                      name="ReportDate" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[UploadTime]"
                      dataType="nText"
                      name="UploadTime" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TimeStamp]"
                      dataType="dbTimeStamp"
                      name="TimeStamp" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[DayOftheWeek]"
                      dataType="nText"
                      name="DayOftheWeek" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                      dataType="i4"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[MeterName]"
                      dataType="nText"
                      name="MeterName" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[CurrentEightHours]"
                      dataType="nText"
                      name="CurrentEightHours" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[PreviousEightHours]"
                      dataType="nText"
                      name="PreviousEightHours" />
                    <externalMetadataColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input].ExternalColumns[TwentyFourHours]"
                      dataType="nText"
                      name="TwentyFourHours" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\WIJManifoldMeter.Paths[Conditional Split Default Output]"
              endId="Package\WIJManifoldMeter\Derived Column.Inputs[Derived Column Input]"
              name="Conditional Split Default Output"
              startId="Package\WIJManifoldMeter\Remove Empty Cells.Outputs[Conditional Split Default Output]" />
            <path
              refId="Package\WIJManifoldMeter.Paths[Data Conversion Output]"
              endId="Package\WIJManifoldMeter\Check For Duplicate.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\WIJManifoldMeter\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\WIJManifoldMeter.Paths[Derived Column Output]"
              endId="Package\WIJManifoldMeter\Data Conversion.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\WIJManifoldMeter\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\WIJManifoldMeter.Paths[Excel Source Output]"
              endId="Package\WIJManifoldMeter\Remove Empty Cells.Inputs[Conditional Split Input]"
              name="Excel Source Output"
              startId="Package\WIJManifoldMeter\WIJManifoldMeter.Outputs[Excel Source Output]" />
            <path
              refId="Package\WIJManifoldMeter.Paths[Lookup No Match Output]"
              endId="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\WIJManifoldMeter\Check For Duplicate.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{413484E6-20A2-480E-A223-CC1F390A5C98}"
      DTS:From="Package\DailyProductionSummary"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\DailySafetySummary" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{77535142-4462-40D1-A1DF-0B09DF86CE3B}"
      DTS:From="Package\DailySafetySummary"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\DownTimeLossReason" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{A4E4949B-3FD3-43D1-A8F9-F7DAF2FDF60F}"
      DTS:From="Package\CFBGasLiftData"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\WFBGasLiftData" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{166D9E9E-945C-4221-830C-741F010B009B}"
      DTS:From="Package\WFBGasLiftData"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\CFBProcessData_Reading" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{01249F9C-B285-49DD-BB3F-121C543D1269}"
      DTS:From="Package\CFBProcessData_Reading"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\WFBProcessData_Reading" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{F23E4FDF-E1DC-41C1-9CA7-27CFE972D87E}"
      DTS:From="Package\WFBProcessData_Reading"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\CFBProcessData_GasProduced" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{EFDD1A13-AF1E-45C0-BD04-5FBBCF828EDA}"
      DTS:From="Package\CFBProcessData_GasProduced"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\CFBProcessData_GasConsumed" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{F76BE2B1-2802-4C5F-B237-88819D98364E}"
      DTS:From="Package\CFBProcessData_GasConsumed"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\WFBProcessData_GasProduced" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 16]"
      DTS:CreationName=""
      DTS:DTSID="{C9BBFC75-CA57-4041-83EE-F51D78C68F63}"
      DTS:From="Package\WFBProcessData_GasProduced"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 16"
      DTS:To="Package\WFBProcessData_GasConsumed" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{58F6780E-A5CD-4225-BE46-D2A206FB9F24}"
      DTS:From="Package\WFBProcessData_GasConsumed"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\CFBWaterInjectorMeter" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 18]"
      DTS:CreationName=""
      DTS:DTSID="{EF5E6B2B-75DB-42E2-98B4-9BC1BB1E361D}"
      DTS:From="Package\CFBWaterInjectorMeter"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 18"
      DTS:To="Package\WFBWaterInjectorMeter" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 19]"
      DTS:CreationName=""
      DTS:DTSID="{0E9CD691-84CC-4B86-9DE0-3C8997C6B78E}"
      DTS:From="Package\WFBWaterInjectorMeter"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 19"
      DTS:To="Package\CFBWaterInjector" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B1F3A758-7A5E-4CF1-AE5A-D307B4D723C3}"
      DTS:From="Package\DownTimeLossReason"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\OperationsSummary" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 20]"
      DTS:CreationName=""
      DTS:DTSID="{1BDD24FC-2C76-452A-96B0-819EA215F15A}"
      DTS:From="Package\CFBWaterInjector"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 20"
      DTS:To="Package\WIJManifoldMeter" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 21]"
      DTS:CreationName=""
      DTS:DTSID="{A79CF150-C64D-4C0B-A534-F39AE2A9E110}"
      DTS:From="Package\WIJManifoldMeter"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 21"
      DTS:To="Package\ProducedWaterData" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 22]"
      DTS:CreationName=""
      DTS:DTSID="{E89E8712-55DF-4774-B599-66BDC72F9CE9}"
      DTS:From="Package\ProducedWaterData"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 22"
      DTS:To="Package\FSCargoWPData" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 23]"
      DTS:CreationName=""
      DTS:DTSID="{95F3405E-45F9-47E2-9D20-4DACCBA8613E}"
      DTS:From="Package\FSCargoWPData"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 23"
      DTS:To="Package\FSOOILQUALITY" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 24]"
      DTS:CreationName=""
      DTS:DTSID="{B189EE06-A185-4763-9844-0DBCDBD5EC63}"
      DTS:From="Package\FSOOILQUALITY"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 24"
      DTS:To="Package\CFBMaintenanceData" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 25]"
      DTS:CreationName=""
      DTS:DTSID="{4FC36D82-06D0-4230-9E24-CDB661A51F5D}"
      DTS:From="Package\CFBMaintenanceData"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 25"
      DTS:To="Package\WFBMaintenanceData" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 26]"
      DTS:CreationName=""
      DTS:DTSID="{1C940C6B-5BF4-4342-872E-AE0692D35344}"
      DTS:From="Package\WFBMaintenanceData"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 26"
      DTS:To="Package\CONSUMABLESANALYSIS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 27]"
      DTS:CreationName=""
      DTS:DTSID="{E9092F31-7440-4215-8E53-7B399580BEB0}"
      DTS:From="Package\CONSUMABLESANALYSIS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 27"
      DTS:To="Package\FSOSummary" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 28]"
      DTS:CreationName=""
      DTS:DTSID="{E3DF3FA4-5AE3-4B08-B561-F490495B5CF1}"
      DTS:From="Package\FSOSummary"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 28"
      DTS:To="Package\CFBSummary" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 29]"
      DTS:CreationName=""
      DTS:DTSID="{1A8E6980-8BEB-4E37-AF56-1B48DBA3325F}"
      DTS:From="Package\CFBSummary"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 29"
      DTS:To="Package\PlantOperationsReport" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{2710A943-FDCC-4CD1-B2BD-3B3E6877D221}"
      DTS:From="Package\OperationsSummary"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\CFBWellData" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 30]"
      DTS:CreationName=""
      DTS:DTSID="{0E5A7E8B-9C58-4126-B31C-DF406CE951C9}"
      DTS:From="Package\PlantOperationsReport"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 30"
      DTS:To="Package\PlannedMaintenance" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 31]"
      DTS:CreationName=""
      DTS:DTSID="{D7D2B731-327A-47E2-8E07-6E4DA91A6A67}"
      DTS:From="Package\PlannedMaintenance"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 31"
      DTS:To="Package\UnPlannedMaintenance" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 32]"
      DTS:CreationName=""
      DTS:DTSID="{D88A6BB1-6AA1-4852-A911-3F900375687E}"
      DTS:From="Package\UnPlannedMaintenance"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 32"
      DTS:To="Package\ProjectActivity" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 33]"
      DTS:CreationName=""
      DTS:DTSID="{BD07DAD3-DE91-4A1F-A2D2-BEDB2AC5139D}"
      DTS:From="Package\ProjectActivity"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 33"
      DTS:To="Package\WFBGeneralReport" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 34]"
      DTS:CreationName=""
      DTS:DTSID="{C106E36A-3B67-4748-9507-EF63773E6495}"
      DTS:From="Package\WFBGeneralReport"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 34"
      DTS:To="Package\PendingProjectWorkReport" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 35]"
      DTS:CreationName=""
      DTS:DTSID="{8FBE6E6D-B113-49A1-A5D8-EC125F04E4EE}"
      DTS:From="Package\PendingProjectWorkReport"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 35"
      DTS:To="Package\PendingMaintenanceReport" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 36]"
      DTS:CreationName=""
      DTS:DTSID="{41442664-0381-4952-87EE-FAD9C121976B}"
      DTS:From="Package\PendingMaintenanceReport"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 36"
      DTS:To="Package\UnPlannedMaintenanceReport" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 37]"
      DTS:CreationName=""
      DTS:DTSID="{CBA923CC-D8C4-4A25-B9D3-AC65AC0E72F3}"
      DTS:From="Package\UnPlannedMaintenanceReport"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 37"
      DTS:To="Package\InstrumentElectrical" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 38]"
      DTS:CreationName=""
      DTS:DTSID="{00AF5F4C-C248-4C26-A1BB-27D800EDA1F9}"
      DTS:From="Package\InstrumentElectrical"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 38"
      DTS:To="Package\EHSSReport" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 39]"
      DTS:CreationName=""
      DTS:DTSID="{C44A463A-6056-47C5-A98D-CF230403A284}"
      DTS:From="Package\EHSSReport"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 39"
      DTS:To="Package\LastAvialableWellTest" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{7C9CE9D9-D67A-4112-A573-9A0ECDDAF2E9}"
      DTS:From="Package\CFBWellData"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\WFBWellData" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 40]"
      DTS:CreationName=""
      DTS:DTSID="{890F8386-6AB2-4CD1-B560-18B1D8F8E9C7}"
      DTS:From="Package\LastAvialableWellTest"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 40"
      DTS:To="Package\ProductionPotential" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 41]"
      DTS:CreationName=""
      DTS:DTSID="{1080500D-208E-40C7-AD2F-586ACDA616DF}"
      DTS:From="Package\ProductionPotential"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 41"
      DTS:To="Package\WFBGasAllocation" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 42]"
      DTS:CreationName=""
      DTS:DTSID="{DE4455F7-20CB-44DB-915B-955E54F7D67A}"
      DTS:From="Package\WFBGasAllocation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 42"
      DTS:To="Package\E27GasLift" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{721D21EA-E054-4065-A521-BB1E2EB1DCDA}"
      DTS:From="Package\WFBWellData"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\WellTestResult" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{9F5FFD5F-55CC-4DD3-AC1D-160678D167C6}"
      DTS:From="Package\WellTestResult"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\CFBGasCompression-COMPA" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{20D3B018-80F1-42AB-A8D8-BC67C19ED37E}"
      DTS:From="Package\CFBGasCompression-COMPA"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\CFBGasCompression-COMPB" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{9D2905A3-4B23-4E43-B2CD-6E6319F8E38D}"
      DTS:From="Package\CFBGasCompression-COMPB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\CFBGasCompression-COMPC" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{25AA2A4D-48FB-48AC-88FD-83427EF48999}"
      DTS:From="Package\CFBGasCompression-COMPC"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\CFBGasLiftData" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="213,42"
          Id="Package\CFBGasCompression-COMPA"
          TopLeft="1191.5,123" />
        <NodeLayout
          Size="213,42"
          Id="Package\CFBGasCompression-COMPB"
          TopLeft="937.5,125" />
        <NodeLayout
          Size="213,42"
          Id="Package\CFBGasCompression-COMPC"
          TopLeft="676.5,129" />
        <NodeLayout
          Size="151,42"
          Id="Package\CFBGasLiftData"
          TopLeft="488.5,130" />
        <NodeLayout
          Size="179,42"
          Id="Package\CFBMaintenanceData"
          TopLeft="137.5,324" />
        <NodeLayout
          Size="227,42"
          Id="Package\CFBProcessData_GasConsumed"
          TopLeft="529.5,234" />
        <NodeLayout
          Size="222,42"
          Id="Package\CFBProcessData_GasProduced"
          TopLeft="277.5,233" />
        <NodeLayout
          Size="199,42"
          Id="Package\CFBProcessData_Reading"
          TopLeft="45.5,132" />
        <NodeLayout
          Size="142,42"
          Id="Package\CFBSummary"
          TopLeft="781.5,408" />
        <NodeLayout
          Size="162,42"
          Id="Package\CFBWaterInjector"
          TopLeft="1099.5,316" />
        <NodeLayout
          Size="189,42"
          Id="Package\CFBWaterInjectorMeter"
          TopLeft="1298.5,230" />
        <NodeLayout
          Size="139,42"
          Id="Package\CFBWellData"
          TopLeft="879.5,42" />
        <NodeLayout
          Size="198,42"
          Id="Package\CONSUMABLESANALYSIS"
          TopLeft="350.5,413" />
        <NodeLayout
          Size="197,42"
          Id="Package\DailyProductionSummary"
          TopLeft="35.5,28" />
        <NodeLayout
          Size="176,42"
          Id="Package\DailySafetySummary"
          TopLeft="266.5,31" />
        <NodeLayout
          Size="184,42"
          Id="Package\DownTimeLossReason"
          TopLeft="468.5,36" />
        <NodeLayout
          Size="129,42"
          Id="Package\E27GasLift"
          TopLeft="1103.5,578" />
        <NodeLayout
          Size="135,42"
          Id="Package\EHSSReport"
          TopLeft="279.5,583" />
        <NodeLayout
          Size="156,42"
          Id="Package\FSCargoWPData"
          TopLeft="521.5,323" />
        <NodeLayout
          Size="157,42"
          Id="Package\FSOOILQUALITY"
          TopLeft="336.5,322" />
        <NodeLayout
          Size="143,42"
          Id="Package\FSOSummary"
          TopLeft="599.5,411" />
        <NodeLayout
          Size="173,42"
          Id="Package\InstrumentElectrical"
          TopLeft="61.5,584" />
        <NodeLayout
          Size="180,42"
          Id="Package\LastAvialableWellTest"
          TopLeft="459.5,583" />
        <NodeLayout
          Size="175,42"
          Id="Package\OperationsSummary"
          TopLeft="675.5,38" />
        <NodeLayout
          Size="207,42"
          Id="Package\PendingMaintenanceReport"
          TopLeft="283.5,495" />
        <NodeLayout
          Size="205,42"
          Id="Package\PendingProjectWorkReport"
          TopLeft="521.5,496" />
        <NodeLayout
          Size="176,42"
          Id="Package\PlannedMaintenance"
          TopLeft="1171.5,404" />
        <NodeLayout
          Size="185,42"
          Id="Package\PlantOperationsReport"
          TopLeft="953.5,406" />
        <NodeLayout
          Size="173,42"
          Id="Package\ProducedWaterData"
          TopLeft="703.5,319" />
        <NodeLayout
          Size="170,42"
          Id="Package\ProductionPotential"
          TopLeft="670.5,583" />
        <NodeLayout
          Size="146,42"
          Id="Package\ProjectActivity"
          TopLeft="970.5,491" />
        <NodeLayout
          Size="189,42"
          Id="Package\UnPlannedMaintenance"
          TopLeft="1163.5,487" />
        <NodeLayout
          Size="220,42"
          Id="Package\UnPlannedMaintenanceReport"
          TopLeft="36.5,492" />
        <NodeLayout
          Size="148,42"
          Id="Package\WellTestResult"
          TopLeft="1216.5,49" />
        <NodeLayout
          Size="163,42"
          Id="Package\WFBGasAllocation"
          TopLeft="898.5,580" />
        <NodeLayout
          Size="155,42"
          Id="Package\WFBGasLiftData"
          TopLeft="289.5,130" />
        <NodeLayout
          Size="168,42"
          Id="Package\WFBGeneralReport"
          TopLeft="758.5,494" />
        <NodeLayout
          Size="182,42"
          Id="Package\WFBMaintenanceData"
          TopLeft="135.5,411" />
        <NodeLayout
          Size="231,42"
          Id="Package\WFBProcessData_GasConsumed"
          TopLeft="1039.5,229" />
        <NodeLayout
          Size="225,42"
          Id="Package\WFBProcessData_GasProduced"
          TopLeft="787.5,234" />
        <NodeLayout
          Size="202,42"
          Id="Package\WFBProcessData_Reading"
          TopLeft="44.5,231" />
        <NodeLayout
          Size="192,42"
          Id="Package\WFBWaterInjectorMeter"
          TopLeft="1293.5,313" />
        <NodeLayout
          Size="143,42"
          Id="Package\WFBWellData"
          TopLeft="1042.5,43" />
        <NodeLayout
          Size="164,42"
          Id="Package\WIJManifoldMeter"
          TopLeft="905.5,316" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="232.5,50.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34,0"
              Start="0,0"
              End="26.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="442.5,54.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26,0"
              Start="0,0"
              End="18.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="488.5,151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-44,0"
              Start="0,0"
              End="-36.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-36.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="289.5,152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45,0"
              Start="0,0"
              End="-37.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-37.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="145.25,174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="246.5,253">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31,0"
              Start="0,0"
              End="23.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="499.5,254.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30,0"
              Start="0,0"
              End="22.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="756.5,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31,0"
              Start="0,0"
              End="23.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 16]"
          TopLeft="1012.5,252.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27,0"
              Start="0,0"
              End="19.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="1270.5,250.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,0"
              Start="0,0"
              End="20.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 18]"
          TopLeft="1391.25,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 19]"
          TopLeft="1293.5,335.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-32,0"
              Start="0,0"
              End="-24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="652.5,58">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23,0"
              Start="0,0"
              End="15.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 20]"
          TopLeft="1099.5,337">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30,0"
              Start="0,0"
              End="-22.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-22.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 21]"
          TopLeft="905.5,338.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-29,0"
              Start="0,0"
              End="-21.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-21.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 22]"
          TopLeft="703.5,342">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-26,0"
              Start="0,0"
              End="-18.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 23]"
          TopLeft="521.5,343.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28,0"
              Start="0,0"
              End="-20.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-20.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 24]"
          TopLeft="415,322">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-188,2"
              Start="0,0"
              End="-188,-5.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-18.5"
                    Point2="0,-22.5"
                    Point3="-4,-22.5" />
                  <mssgle:LineSegment
                    End="-184,-22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-184,-22.5"
                    Point2="-188,-22.5"
                    Point3="-188,-18.5" />
                  <mssgle:LineSegment
                    End="-188,-5.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 25]"
          TopLeft="226.75,366">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 26]"
          TopLeft="317.5,433">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33,0"
              Start="0,0"
              End="25.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 27]"
          TopLeft="548.5,433">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51,0"
              Start="0,0"
              End="43.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 28]"
          TopLeft="742.5,430.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39,0"
              Start="0,0"
              End="31.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 29]"
          TopLeft="923.5,428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30,0"
              Start="0,0"
              End="22.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="850.5,61">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="29,0"
              Start="0,0"
              End="21.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="21.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 30]"
          TopLeft="1138.5,426">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33,0"
              Start="0,0"
              End="25.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 31]"
          TopLeft="1258.75,446">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 32]"
          TopLeft="1163.5,510">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-47,0"
              Start="0,0"
              End="-39.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-39.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 33]"
          TopLeft="970.5,513.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-44,0"
              Start="0,0"
              End="-36.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-36.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 34]"
          TopLeft="758.5,516">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-32,0"
              Start="0,0"
              End="-24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 35]"
          TopLeft="521.5,516.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-31,0"
              Start="0,0"
              End="-23.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-23.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 36]"
          TopLeft="283.5,514.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-27,0"
              Start="0,0"
              End="-19.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-19.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 37]"
          TopLeft="147.25,534">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 38]"
          TopLeft="234.5,604.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45,0"
              Start="0,0"
              End="37.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 39]"
          TopLeft="414.5,604">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45,0"
              Start="0,0"
              End="37.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1018.5,63.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24,0"
              Start="0,0"
              End="16.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 40]"
          TopLeft="639.5,604">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31,0"
              Start="0,0"
              End="23.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 41]"
          TopLeft="840.5,602.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58,0"
              Start="0,0"
              End="50.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 42]"
          TopLeft="1061.5,600">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42,0"
              Start="0,0"
              End="34.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="34.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="1185.5,64.1666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31,0"
              Start="0,0"
              End="23.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="1294.25,91">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="1191.5,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41,0"
              Start="0,0"
              End="-33.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-33.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="937.5,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-48,0"
              Start="0,0"
              End="-40.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-40.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="676.5,150.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-37,0"
              Start="0,0"
              End="-29.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-29.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\CFBGasCompression-COMPA">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\CFBGasCompression-COMPA\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="211,42"
          Id="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL"
          TopLeft="503,365" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBGasCompression-COMPA\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBGasCompression-COMPA\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="175,42"
          Id="Package\CFBGasCompression-COMPA\CFBGasCompression"
          TopLeft="112,106" />
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPA.Paths[Lookup No Match Output]"
          TopLeft="589.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19,58"
              Start="0,0"
              End="19,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="4,29" />
                  <mssgle:LineSegment
                    End="15,29" />
                  <mssgle:CubicBezierSegment
                    Point1="15,29"
                    Point2="19,29"
                    Point3="19,33" />
                  <mssgle:LineSegment
                    End="19,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-46.30638671875,34,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPA.Paths[Excel Source Output]"
          TopLeft="199.5,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57.5,50"
              Start="0,0"
              End="57.5,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="4,25" />
                  <mssgle:LineSegment
                    End="53.5,25" />
                  <mssgle:CubicBezierSegment
                    Point1="53.5,25"
                    Point2="57.5,25"
                    Point3="57.5,29" />
                  <mssgle:LineSegment
                    End="57.5,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPA.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPA.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasCompression-COMPA\CFBGasCompression MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasCompression-COMPA\CFBGasCompression">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasCompression-COMPA\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBGasCompression-COMPB">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\CFBGasCompression-COMPB\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="211,42"
          Id="Package\CFBGasCompression-COMPB\CFBGasCompression MSSQL"
          TopLeft="503,365" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBGasCompression-COMPB\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBGasCompression-COMPB\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="175,42"
          Id="Package\CFBGasCompression-COMPB\CFBGasCompression"
          TopLeft="112,106" />
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPB.Paths[Lookup No Match Output]"
          TopLeft="589.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19,58"
              Start="0,0"
              End="19,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="4,29" />
                  <mssgle:LineSegment
                    End="15,29" />
                  <mssgle:CubicBezierSegment
                    Point1="15,29"
                    Point2="19,29"
                    Point3="19,33" />
                  <mssgle:LineSegment
                    End="19,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-46.30638671875,34,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPB.Paths[Excel Source Output]"
          TopLeft="199.5,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57.5,50"
              Start="0,0"
              End="57.5,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="4,25" />
                  <mssgle:LineSegment
                    End="53.5,25" />
                  <mssgle:CubicBezierSegment
                    Point1="53.5,25"
                    Point2="57.5,25"
                    Point3="57.5,29" />
                  <mssgle:LineSegment
                    End="57.5,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPB.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPB.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasCompression-COMPB\CFBGasCompression">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBGasCompression-COMPC">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\CFBGasCompression-COMPC\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="211,42"
          Id="Package\CFBGasCompression-COMPC\CFBGasCompression MSSQL"
          TopLeft="503,365" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBGasCompression-COMPC\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBGasCompression-COMPC\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="175,42"
          Id="Package\CFBGasCompression-COMPC\CFBGasCompression"
          TopLeft="174,129" />
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPC.Paths[Lookup No Match Output]"
          TopLeft="589.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19,58"
              Start="0,0"
              End="19,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="4,29" />
                  <mssgle:LineSegment
                    End="15,29" />
                  <mssgle:CubicBezierSegment
                    Point1="15,29"
                    Point2="19,29"
                    Point3="19,33" />
                  <mssgle:LineSegment
                    End="19,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-46.30638671875,34,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPC.Paths[Excel Source Output]"
          TopLeft="259.25,171">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPC.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasCompression-COMPC.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasCompression-COMPC\CFBGasCompression">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBGasLiftData">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Convert26"
          TopLeft="1311,170" />
        <NodeLayout
          Size="117,42"
          Id="Package\CFBGasLiftData\EBOK10"
          TopLeft="240.727272727273,24.909090909091" />
        <NodeLayout
          Size="149,42"
          Id="Package\CFBGasLiftData\Is_Duplicate27"
          TopLeft="1107,242" />
        <NodeLayout
          Size="117,42"
          Id="Package\CFBGasLiftData\EBOK12"
          TopLeft="649.090909090909,28.6363636363636" />
        <NodeLayout
          Size="117,42"
          Id="Package\CFBGasLiftData\EBOK26"
          TopLeft="1309,29" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Convert13"
          TopLeft="883,169" />
        <NodeLayout
          Size="199,42"
          Id="Package\CFBGasLiftData\CFBGasLiftData27 MSSQL"
          TopLeft="1079,310" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Derived12"
          TopLeft="649,101" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Convert12"
          TopLeft="655,166" />
        <NodeLayout
          Size="121,42"
          Id="Package\CFBGasLiftData\Derived9"
          TopLeft="27,97" />
        <NodeLayout
          Size="149,42"
          Id="Package\CFBGasLiftData\Is_Duplicate26"
          TopLeft="1305,241" />
        <NodeLayout
          Size="149,42"
          Id="Package\CFBGasLiftData\Is_Duplicate12"
          TopLeft="651,234" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Convert11"
          TopLeft="449.909090909091,167.818181818182" />
        <NodeLayout
          Size="199,42"
          Id="Package\CFBGasLiftData\CFBGasLiftData13 MSSQL"
          TopLeft="857,310" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Derived11"
          TopLeft="444.272727272727,101.181818181818" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Convert10"
          TopLeft="243.181818181818,167" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Derived27"
          TopLeft="1107,104" />
        <NodeLayout
          Size="199,42"
          Id="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL"
          TopLeft="630,309" />
        <NodeLayout
          Size="199,42"
          Id="Package\CFBGasLiftData\CFBGasLiftData26 MSSQL"
          TopLeft="1285,309" />
        <NodeLayout
          Size="111,42"
          Id="Package\CFBGasLiftData\EBOK9"
          TopLeft="28,23" />
        <NodeLayout
          Size="117,42"
          Id="Package\CFBGasLiftData\EBOK13"
          TopLeft="884,29" />
        <NodeLayout
          Size="149,42"
          Id="Package\CFBGasLiftData\Is_Duplicate11"
          TopLeft="443.727272727273,232.818181818182" />
        <NodeLayout
          Size="117,42"
          Id="Package\CFBGasLiftData\EBOK27"
          TopLeft="1106,29" />
        <NodeLayout
          Size="199,42"
          Id="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL"
          TopLeft="425,308.090909090909" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Derived10"
          TopLeft="239.181818181818,96.6363636363635" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Derived26"
          TopLeft="1308,100" />
        <NodeLayout
          Size="117,42"
          Id="Package\CFBGasLiftData\EBOK11"
          TopLeft="441.636363636364,28.4545454545454" />
        <NodeLayout
          Size="121,42"
          Id="Package\CFBGasLiftData\Convert9"
          TopLeft="29,165" />
        <NodeLayout
          Size="143,42"
          Id="Package\CFBGasLiftData\Is_Duplicate9"
          TopLeft="20,231" />
        <NodeLayout
          Size="194,42"
          Id="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL"
          TopLeft="1.72727272727275,301.090909090909" />
        <NodeLayout
          Size="149,42"
          Id="Package\CFBGasLiftData\Is_Duplicate10"
          TopLeft="238.181818181818,237.181818181818" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Convert27"
          TopLeft="1114,174" />
        <NodeLayout
          Size="149,42"
          Id="Package\CFBGasLiftData\Is_Duplicate13"
          TopLeft="879,237" />
        <NodeLayout
          Size="127,42"
          Id="Package\CFBGasLiftData\Derived13"
          TopLeft="882,102" />
        <NodeLayout
          Size="199,42"
          Id="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL"
          TopLeft="219.909090909091,305.454545454545" />
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Lookup No Match Output1]"
          TopLeft="95.1136363636364,273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.0909090909091"
              Start="0,0"
              End="0,20.5909090909091">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5909090909091" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,4.49076704545456,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Lookup No Match Output]"
          TopLeft="955,279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,5.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Lookup No Match Output5]"
          TopLeft="1382,283">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,3.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Lookup No Match Output2]"
          TopLeft="727.5,276">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,6.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Lookup No Match Output6]"
          TopLeft="521.363636363636,274.818181818182">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.2727272727271"
              Start="0,0"
              End="0,25.7727272727271">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.7727272727271" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,7.08167613636357,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Lookup No Match Output4]"
          TopLeft="316.045454545455,279.181818181818">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.2727272727273"
              Start="0,0"
              End="0,18.7727272727273">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.7727272727273" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,3.58167613636363,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Lookup No Match Output3]"
          TopLeft="1180,284">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,3.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Excel Source Output2]"
          TopLeft="300.954545454546,66.909090909091">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.7272727272725"
              Start="0,0"
              End="0,22.2272727272725">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.2272727272725" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Excel Source Output4]"
          TopLeft="1167.5,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Excel Source Output]"
          TopLeft="944,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Excel Source Output3]"
          TopLeft="503.954545454546,70.4545454545454">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.7272727272728"
              Start="0,0"
              End="0,23.2272727272728">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.2272727272728" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Excel Source Output6]"
          TopLeft="1369.5,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Excel Source Output5]"
          TopLeft="85.5,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Excel Source Output1]"
          TopLeft="710.045454545455,70.6363636363636">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.3636363636364"
              Start="0,0"
              End="0,22.8636363636364">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8636363636364" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Derived Column Output3]"
          TopLeft="304.681818181818,138.636363636364">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.3636363636366"
              Start="0,0"
              End="0,20.8636363636366">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.8636363636366" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Derived Column Output4]"
          TopLeft="1174,146">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Derived Column Output5]"
          TopLeft="946,144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Derived Column Output6]"
          TopLeft="88.5,139">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Derived Column Output2]"
          TopLeft="510.590909090909,143.181818181818">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.6363636363636"
              Start="0,0"
              End="0,17.1363636363636">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.1363636363636" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Derived Column Output]"
          TopLeft="1373,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Derived Column Output1]"
          TopLeft="715.5,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23"
              Start="0,0"
              End="0,15.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Data Conversion Output2]"
          TopLeft="722,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Data Conversion Output1]"
          TopLeft="309.681818181818,209">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.181818181818"
              Start="0,0"
              End="0,20.681818181818">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.681818181818" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Data Conversion Output]"
          TopLeft="515.818181818182,209.818181818182">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,22.9999999999999"
              Start="0,0"
              End="0,15.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Data Conversion Output3]"
          TopLeft="1179.5,216">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Data Conversion Output6]"
          TopLeft="90.5,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Data Conversion Output5]"
          TopLeft="1377,212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBGasLiftData.Paths[Data Conversion Output4]"
          TopLeft="950,211">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\EBOK10">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\EBOK12">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\EBOK26">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\CFBGasLiftData12 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\EBOK9">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\EBOK13">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\EBOK27">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\CFBGasLiftData11 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\EBOK11">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\Is_Duplicate9">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\CFBGasLiftData9 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBGasLiftData\CFBGasLiftData10 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBMaintenanceData">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\CFBMaintenanceData\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="175,42"
          Id="Package\CFBMaintenanceData\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBMaintenanceData\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBMaintenanceData\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="215,42"
          Id="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL"
          TopLeft="488,363" />
        <NodeLayout
          Size="179,42"
          Id="Package\CFBMaintenanceData\CFBMaintenanceData"
          TopLeft="115,106" />
        <EdgeLayout
          Id="Package\CFBMaintenanceData.Paths[Lookup No Match Output]"
          TopLeft="592.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBMaintenanceData.Paths[Excel Source Output]"
          TopLeft="294,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBMaintenanceData.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBMaintenanceData.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBMaintenanceData.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBMaintenanceData\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBMaintenanceData\CFBMaintenanceData MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBMaintenanceData\CFBMaintenanceData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBProcessData_GasConsumed">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\CFBProcessData_GasConsumed\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="264,42"
          Id="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL"
          TopLeft="463,363" />
        <NodeLayout
          Size="175,42"
          Id="Package\CFBProcessData_GasConsumed\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBProcessData_GasConsumed\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBProcessData_GasConsumed\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="227,42"
          Id="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed"
          TopLeft="115,106" />
        <EdgeLayout
          Id="Package\CFBProcessData_GasConsumed.Paths[Lookup No Match Output]"
          TopLeft="592.25,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_GasConsumed.Paths[Excel Source Output]"
          TopLeft="342,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51,0"
              Start="0,0"
              End="43.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_GasConsumed.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_GasConsumed.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_GasConsumed.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBProcessData_GasConsumed\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBProcessData_GasConsumed\CFBProcessData_GasConsumed">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBProcessData_GasProduced">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\CFBProcessData_GasProduced\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="258,42"
          Id="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL"
          TopLeft="463,363" />
        <NodeLayout
          Size="175,42"
          Id="Package\CFBProcessData_GasProduced\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBProcessData_GasProduced\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBProcessData_GasProduced\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="222,42"
          Id="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced"
          TopLeft="115,106" />
        <EdgeLayout
          Id="Package\CFBProcessData_GasProduced.Paths[Lookup No Match Output]"
          TopLeft="590.75,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_GasProduced.Paths[Excel Source Output]"
          TopLeft="337,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="56,0"
              Start="0,0"
              End="48.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="48.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_GasProduced.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_GasProduced.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_GasProduced.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBProcessData_GasProduced\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBProcessData_GasProduced\CFBProcessData_GasProduced">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBProcessData_Reading">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="238,42"
          Id="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL"
          TopLeft="503,365" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBProcessData_Reading\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBProcessData_Reading\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="156,42"
          Id="Package\CFBProcessData_Reading\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="199,42"
          Id="Package\CFBProcessData_Reading\CFBProcessData_Reading"
          TopLeft="115,106" />
        <EdgeLayout
          Id="Package\CFBProcessData_Reading.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_Reading.Paths[Lookup No Match Output]"
          TopLeft="589.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32.5,58"
              Start="0,0"
              End="32.5,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="4,29" />
                  <mssgle:LineSegment
                    End="28.5,29" />
                  <mssgle:CubicBezierSegment
                    Point1="28.5,29"
                    Point2="32.5,29"
                    Point3="32.5,33" />
                  <mssgle:LineSegment
                    End="32.5,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.55638671875,34,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_Reading.Paths[Excel Source Output]"
          TopLeft="214.5,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.5,50"
              Start="0,0"
              End="42.5,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="4,25" />
                  <mssgle:LineSegment
                    End="38.5,25" />
                  <mssgle:CubicBezierSegment
                    Point1="38.5,25"
                    Point2="42.5,25"
                    Point3="42.5,29" />
                  <mssgle:LineSegment
                    End="42.5,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBProcessData_Reading.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBProcessData_Reading\CFBProcessData_Reading">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBProcessData_Reading\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBProcessData_Reading\WFBProcessData_Reading MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBSummary">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\CFBSummary\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBSummary\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBSummary\Check For Duplicate"
          TopLeft="562,236" />
        <NodeLayout
          Size="156,42"
          Id="Package\CFBSummary\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="142,42"
          Id="Package\CFBSummary\CFBSummary"
          TopLeft="112,71" />
        <NodeLayout
          Size="178,42"
          Id="Package\CFBSummary\CFBSummary MSSQL"
          TopLeft="563,326" />
        <EdgeLayout
          Id="Package\CFBSummary.Paths[Lookup No Match Output]"
          TopLeft="650.25,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,14.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBSummary.Paths[Excel Source Output]"
          TopLeft="185.75,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBSummary.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBSummary.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBSummary.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBSummary\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBSummary\CFBSummary">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBSummary\CFBSummary MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBWaterInjector">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\CFBWaterInjector\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBWaterInjector\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBWaterInjector\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="198,42"
          Id="Package\CFBWaterInjector\CFBWaterInjector MSSQL"
          TopLeft="488,363" />
        <NodeLayout
          Size="156,42"
          Id="Package\CFBWaterInjector\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="162,42"
          Id="Package\CFBWaterInjector\CFBWaterInjector"
          TopLeft="115,106" />
        <EdgeLayout
          Id="Package\CFBWaterInjector.Paths[Lookup No Match Output]"
          TopLeft="588.25,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWaterInjector.Paths[Excel Source Output]"
          TopLeft="277,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="116,0"
              Start="0,0"
              End="108.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="108.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWaterInjector.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWaterInjector.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWaterInjector.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWaterInjector\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWaterInjector\CFBWaterInjector MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWaterInjector\CFBWaterInjector">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBWaterInjectorMeter">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="189,42"
          Id="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter"
          TopLeft="115,106" />
        <NodeLayout
          Size="156,42"
          Id="Package\CFBWaterInjectorMeter\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="175,42"
          Id="Package\CFBWaterInjectorMeter\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBWaterInjectorMeter\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBWaterInjectorMeter\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="225,42"
          Id="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL"
          TopLeft="463,363" />
        <EdgeLayout
          Id="Package\CFBWaterInjectorMeter.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWaterInjectorMeter.Paths[Lookup No Match Output]"
          TopLeft="589.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14,56"
              Start="0,0"
              End="-14,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24"
                    Point2="0,28"
                    Point3="-4,28" />
                  <mssgle:LineSegment
                    End="-10,28" />
                  <mssgle:CubicBezierSegment
                    Point1="-10,28"
                    Point2="-14,28"
                    Point3="-14,32" />
                  <mssgle:LineSegment
                    End="-14,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-62.80638671875,33,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWaterInjectorMeter.Paths[Excel Source Output]"
          TopLeft="304,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="89,0"
              Start="0,0"
              End="81.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="81.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWaterInjectorMeter.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWaterInjectorMeter.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWaterInjectorMeter\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWaterInjectorMeter\CFBWaterInjectorMeter MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CFBWellData">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\CFBWellData\Remove Empty Cells"
          TopLeft="283,106" />
        <NodeLayout
          Size="154,42"
          Id="Package\CFBWellData\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="156,42"
          Id="Package\CFBWellData\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="176,42"
          Id="Package\CFBWellData\CFBWellData MSSQL"
          TopLeft="503,365" />
        <NodeLayout
          Size="139,42"
          Id="Package\CFBWellData\CFBWellData"
          TopLeft="115,106" />
        <NodeLayout
          Size="157,42"
          Id="Package\CFBWellData\Data Enrichment"
          TopLeft="620,105" />
        <NodeLayout
          Size="173,42"
          Id="Package\CFBWellData\Check For Duplicate"
          TopLeft="503,265" />
        <EdgeLayout
          Id="Package\CFBWellData.Paths[Lookup No Match Output]"
          TopLeft="590.25,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,19.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWellData.Paths[Lookup Match Output]"
          TopLeft="698.5,147">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-441.5,51"
              Start="0,0"
              End="-441.5,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5"
                    Point2="0,25.5"
                    Point3="-4,25.5" />
                  <mssgle:LineSegment
                    End="-437.5,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-437.5,25.5"
                    Point2="-441.5,25.5"
                    Point3="-441.5,29.5" />
                  <mssgle:LineSegment
                    End="-441.5,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-268.94138671875,30.5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWellData.Paths[Excel Source Output]"
          TopLeft="254,127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="29,0"
              Start="0,0"
              End="21.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="21.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWellData.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWellData.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CFBWellData.Paths[Conditional Split Default Output]"
          TopLeft="458,126.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="162,0"
              Start="0,0"
              End="154.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="154.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="6.63609374999999,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWellData\CFBWellData MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWellData\CFBWellData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWellData\Data Enrichment">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[WellTestEnrichmentDatas]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CFBWellData\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\CONSUMABLESANALYSIS">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="172,42"
          Id="Package\CONSUMABLESANALYSIS\Data Conversion R2"
          TopLeft="387,355" />
        <NodeLayout
          Size="214,42"
          Id="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2"
          TopLeft="367,106" />
        <NodeLayout
          Size="191,42"
          Id="Package\CONSUMABLESANALYSIS\Remove Empty Cells R3"
          TopLeft="686,183" />
        <NodeLayout
          Size="250,42"
          Id="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3"
          TopLeft="669,523" />
        <NodeLayout
          Size="189,42"
          Id="Package\CONSUMABLESANALYSIS\Check For Duplicate R2"
          TopLeft="382,428" />
        <NodeLayout
          Size="156,42"
          Id="Package\CONSUMABLESANALYSIS\Data Conversion"
          TopLeft="123,364" />
        <NodeLayout
          Size="170,42"
          Id="Package\CONSUMABLESANALYSIS\Derived Column R3"
          TopLeft="700,272" />
        <NodeLayout
          Size="250,42"
          Id="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2"
          TopLeft="359,523" />
        <NodeLayout
          Size="191,42"
          Id="Package\CONSUMABLESANALYSIS\Remove Empty Cells R2"
          TopLeft="376,183" />
        <NodeLayout
          Size="154,42"
          Id="Package\CONSUMABLESANALYSIS\Derived Column"
          TopLeft="129,290" />
        <NodeLayout
          Size="235,42"
          Id="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL"
          TopLeft="85,529" />
        <NodeLayout
          Size="189,42"
          Id="Package\CONSUMABLESANALYSIS\Check For Duplicate R3"
          TopLeft="692,428" />
        <NodeLayout
          Size="170,42"
          Id="Package\CONSUMABLESANALYSIS\Derived Column R2"
          TopLeft="390,272" />
        <NodeLayout
          Size="214,42"
          Id="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3"
          TopLeft="672,107" />
        <NodeLayout
          Size="172,42"
          Id="Package\CONSUMABLESANALYSIS\Data Conversion R3"
          TopLeft="697,355" />
        <NodeLayout
          Size="175,42"
          Id="Package\CONSUMABLESANALYSIS\Remove Empty Cells"
          TopLeft="120,188" />
        <NodeLayout
          Size="198,42"
          Id="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS"
          TopLeft="115,106" />
        <NodeLayout
          Size="173,42"
          Id="Package\CONSUMABLESANALYSIS\Check For Duplicate"
          TopLeft="112,435" />
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Lookup No Match Output]"
          TopLeft="790.25,470">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,16.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Lookup No Match Output1]"
          TopLeft="200.5,477">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,16.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Lookup No Match Output2]"
          TopLeft="480.25,470">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,16.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Excel Source Output]"
          TopLeft="210.75,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Excel Source Output1]"
          TopLeft="472.75,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Excel Source Output2]"
          TopLeft="780.25,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Derived Column Output]"
          TopLeft="203.5,332">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Derived Column Output1]"
          TopLeft="784,314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Derived Column Output2]"
          TopLeft="474,314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Data Conversion Output]"
          TopLeft="199.75,406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Data Conversion Output1]"
          TopLeft="474.75,397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Data Conversion Output2]"
          TopLeft="784.75,397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Conditional Split Default Output]"
          TopLeft="473.25,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,13.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Conditional Split Default Output1]"
          TopLeft="783.25,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,13.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\CONSUMABLESANALYSIS.Paths[Conditional Split Default Output2]"
          TopLeft="206.75,230">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,20.4208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R3">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CONSUMABLESANALYSIS\Check For Duplicate R2">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL R2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS R3">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CONSUMABLESANALYSIS\CONSUMABLESANALYSIS">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\CONSUMABLESANALYSIS\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DailyProductionSummary">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\DailyProductionSummary\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="197,42"
          Id="Package\DailyProductionSummary\DailyProductionSummary"
          TopLeft="116,105" />
        <NodeLayout
          Size="154,42"
          Id="Package\DailyProductionSummary\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="233,42"
          Id="Package\DailyProductionSummary\DailyProductionSummary MSSQL"
          TopLeft="503,365" />
        <NodeLayout
          Size="173,42"
          Id="Package\DailyProductionSummary\Check For Duplicate"
          TopLeft="503,265" />
        <EdgeLayout
          Id="Package\DailyProductionSummary.Paths[Lookup No Match Output]"
          TopLeft="589.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30,58"
              Start="0,0"
              End="30,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="4,29" />
                  <mssgle:LineSegment
                    End="26,29" />
                  <mssgle:CubicBezierSegment
                    Point1="26,29"
                    Point2="30,29"
                    Point3="30,33" />
                  <mssgle:LineSegment
                    End="30,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-49.6750390625,34,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DailyProductionSummary.Paths[Excel Source Output]"
          TopLeft="214.5,147">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.5,51"
              Start="0,0"
              End="42.5,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5"
                    Point2="0,25.5"
                    Point3="4,25.5" />
                  <mssgle:LineSegment
                    End="38.5,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="38.5,25.5"
                    Point2="42.5,25.5"
                    Point3="42.5,29.5" />
                  <mssgle:LineSegment
                    End="42.5,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DailyProductionSummary.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DailyProductionSummary.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DailyProductionSummary\DailyProductionSummary">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DailyProductionSummary\DailyProductionSummary MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DailyProductionSummary\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DailySafetySummary">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\DailySafetySummary\Remove Empty Cells"
          TopLeft="121,157" />
        <NodeLayout
          Size="154,42"
          Id="Package\DailySafetySummary\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="176,42"
          Id="Package\DailySafetySummary\DailySafetySummary"
          TopLeft="112,71" />
        <NodeLayout
          Size="212,42"
          Id="Package\DailySafetySummary\DailySafetySummary MSSQL"
          TopLeft="573,290" />
        <NodeLayout
          Size="156,42"
          Id="Package\DailySafetySummary\Data Conversion"
          TopLeft="339,235" />
        <NodeLayout
          Size="173,42"
          Id="Package\DailySafetySummary\Check For Duplicate"
          TopLeft="562,220" />
        <EdgeLayout
          Id="Package\DailySafetySummary.Paths[Lookup No Match Output]"
          TopLeft="648.5,262">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.5,28"
              Start="0,0"
              End="30.5,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10"
                    Point2="0,14"
                    Point3="4,14" />
                  <mssgle:LineSegment
                    End="26.5,14" />
                  <mssgle:CubicBezierSegment
                    Point1="26.5,14"
                    Point2="30.5,14"
                    Point3="30.5,18" />
                  <mssgle:LineSegment
                    End="30.5,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.55638671875,19,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DailySafetySummary.Paths[Excel Source Output]"
          TopLeft="200,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,44"
              Start="0,0"
              End="8.5,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18"
                    Point2="0,22"
                    Point3="4,22" />
                  <mssgle:LineSegment
                    End="4.5,22" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,22"
                    Point2="8.5,22"
                    Point3="8.5,26" />
                  <mssgle:LineSegment
                    End="8.5,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DailySafetySummary.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-35,34"
              Start="0,0"
              End="-35,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13"
                    Point2="0,17"
                    Point3="-4,17" />
                  <mssgle:LineSegment
                    End="-31,17" />
                  <mssgle:CubicBezierSegment
                    Point1="-31,17"
                    Point2="-35,17"
                    Point3="-35,21" />
                  <mssgle:LineSegment
                    End="-35,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DailySafetySummary.Paths[Data Conversion Output]"
          TopLeft="495,256">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67,-15"
              Start="0,0"
              End="59.5,-15">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="29.5,0"
                    Point2="33.5,0"
                    Point3="33.5,-4" />
                  <mssgle:LineSegment
                    End="33.5,-11" />
                  <mssgle:CubicBezierSegment
                    Point1="33.5,-11"
                    Point2="33.5,-15"
                    Point3="37.5,-15" />
                  <mssgle:LineSegment
                    End="59.5,-15" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DailySafetySummary.Paths[Conditional Split Default Output]"
          TopLeft="296,179">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79,0"
              Start="0,0"
              End="71.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="71.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DailySafetySummary\DailySafetySummary">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DailySafetySummary\DailySafetySummary MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DailySafetySummary\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DownTimeLossReason">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\DownTimeLossReason\Remove Empty Cells"
          TopLeft="121,157" />
        <NodeLayout
          Size="156,42"
          Id="Package\DownTimeLossReason\Data Conversion"
          TopLeft="339,235" />
        <NodeLayout
          Size="211,42"
          Id="Package\DownTimeLossReason\OperationsSummary MSSQL"
          TopLeft="573,290" />
        <NodeLayout
          Size="184,42"
          Id="Package\DownTimeLossReason\DownTimeLossReason"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\DownTimeLossReason\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\DownTimeLossReason\Check For Duplicate"
          TopLeft="562,220" />
        <EdgeLayout
          Id="Package\DownTimeLossReason.Paths[Lookup No Match Output]"
          TopLeft="648.5,262">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30,28"
              Start="0,0"
              End="30,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10"
                    Point2="0,14"
                    Point3="4,14" />
                  <mssgle:LineSegment
                    End="26,14" />
                  <mssgle:CubicBezierSegment
                    Point1="26,14"
                    Point2="30,14"
                    Point3="30,18" />
                  <mssgle:LineSegment
                    End="30,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.80638671875,19,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DownTimeLossReason.Paths[Excel Source Output]"
          TopLeft="206.25,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DownTimeLossReason.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-35,34"
              Start="0,0"
              End="-35,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13"
                    Point2="0,17"
                    Point3="-4,17" />
                  <mssgle:LineSegment
                    End="-31,17" />
                  <mssgle:CubicBezierSegment
                    Point1="-31,17"
                    Point2="-35,17"
                    Point3="-35,21" />
                  <mssgle:LineSegment
                    End="-35,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DownTimeLossReason.Paths[Data Conversion Output]"
          TopLeft="495,256">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67,-15"
              Start="0,0"
              End="59.5,-15">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="29.5,0"
                    Point2="33.5,0"
                    Point3="33.5,-4" />
                  <mssgle:LineSegment
                    End="33.5,-11" />
                  <mssgle:CubicBezierSegment
                    Point1="33.5,-11"
                    Point2="33.5,-15"
                    Point3="37.5,-15" />
                  <mssgle:LineSegment
                    End="59.5,-15" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DownTimeLossReason.Paths[Conditional Split Default Output]"
          TopLeft="296,179">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79,0"
              Start="0,0"
              End="71.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="71.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DownTimeLossReason\OperationsSummary MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DownTimeLossReason\DownTimeLossReason">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DownTimeLossReason\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\E27GasLift">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\E27GasLift\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="165,42"
          Id="Package\E27GasLift\E27GasLift MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="175,42"
          Id="Package\E27GasLift\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="129,42"
          Id="Package\E27GasLift\E27GasLift"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\E27GasLift\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\E27GasLift\Check For Duplicate"
          TopLeft="562,236" />
        <EdgeLayout
          Id="Package\E27GasLift.Paths[Lookup No Match Output]"
          TopLeft="647,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,14.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\E27GasLift.Paths[Excel Source Output]"
          TopLeft="176.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12,42"
              Start="0,0"
              End="12,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="4,21" />
                  <mssgle:LineSegment
                    End="8,21" />
                  <mssgle:CubicBezierSegment
                    Point1="8,21"
                    Point2="12,21"
                    Point3="12,25" />
                  <mssgle:LineSegment
                    End="12,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\E27GasLift.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\E27GasLift.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\E27GasLift.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\E27GasLift\E27GasLift MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\E27GasLift\E27GasLift">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\E27GasLift\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\EHSSReport">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\EHSSReport\Derived Column 1 1"
          TopLeft="613,246" />
        <NodeLayout
          Size="135,42"
          Id="Package\EHSSReport\EHSSReport 1 1 1"
          TopLeft="891,78" />
        <NodeLayout
          Size="175,42"
          Id="Package\EHSSReport\Remove Empty Cells 1 1"
          TopLeft="602,164" />
        <NodeLayout
          Size="154,42"
          Id="Package\EHSSReport\Derived Column"
          TopLeft="105,236" />
        <NodeLayout
          Size="156,42"
          Id="Package\EHSSReport\Data Conversion"
          TopLeft="109,319" />
        <NodeLayout
          Size="154,42"
          Id="Package\EHSSReport\Derived Column 1"
          TopLeft="345,236" />
        <NodeLayout
          Size="175,42"
          Id="Package\EHSSReport\Remove Empty Cells 1"
          TopLeft="334,154" />
        <NodeLayout
          Size="175,42"
          Id="Package\EHSSReport\Remove Empty Cells"
          TopLeft="94,154" />
        <NodeLayout
          Size="156,42"
          Id="Package\EHSSReport\Data Conversion 1 1 1"
          TopLeft="888,326" />
        <NodeLayout
          Size="154,42"
          Id="Package\EHSSReport\Derived Column 1 1 1"
          TopLeft="884,243" />
        <NodeLayout
          Size="173,42"
          Id="Package\EHSSReport\Check For Duplicate 1"
          TopLeft="334,386" />
        <NodeLayout
          Size="173,42"
          Id="Package\EHSSReport\Check For Duplicate 1 1"
          TopLeft="602,396" />
        <NodeLayout
          Size="172,42"
          Id="Package\EHSSReport\EHSSReport MSSQL"
          TopLeft="89,482" />
        <NodeLayout
          Size="135,42"
          Id="Package\EHSSReport\EHSSReport 1 1"
          TopLeft="620,81" />
        <NodeLayout
          Size="156,42"
          Id="Package\EHSSReport\Data Conversion 1 1"
          TopLeft="617,329" />
        <NodeLayout
          Size="172,42"
          Id="Package\EHSSReport\EHSSReport MSSQL 1"
          TopLeft="329,482" />
        <NodeLayout
          Size="135,42"
          Id="Package\EHSSReport\EHSSReport"
          TopLeft="112,71" />
        <NodeLayout
          Size="135,42"
          Id="Package\EHSSReport\EHSSReport 1"
          TopLeft="352,71" />
        <NodeLayout
          Size="172,42"
          Id="Package\EHSSReport\EHSSReport MSSQL 1 1 1"
          TopLeft="868,489" />
        <NodeLayout
          Size="172,42"
          Id="Package\EHSSReport\EHSSReport MSSQL 1 1"
          TopLeft="601,493" />
        <NodeLayout
          Size="173,42"
          Id="Package\EHSSReport\Check For Duplicate 1 1 1"
          TopLeft="873,393" />
        <NodeLayout
          Size="173,42"
          Id="Package\EHSSReport\Check For Duplicate"
          TopLeft="94,386" />
        <NodeLayout
          Size="156,42"
          Id="Package\EHSSReport\Data Conversion 1"
          TopLeft="349,319" />
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Data Conversion Output1]"
          TopLeft="423.75,361">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Data Conversion Output]"
          TopLeft="962.75,368">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Data Conversion Output3]"
          TopLeft="691.75,371">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Data Conversion Output2]"
          TopLeft="183.75,361">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Conditional Split Default Output]"
          TopLeft="689.75,206">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,10.4208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Conditional Split Default Output1]"
          TopLeft="181.75,196">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,10.4208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Conditional Split Default Output2]"
          TopLeft="421.75,196">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,10.4208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Lookup No Match Output]"
          TopLeft="956.75,435">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,17.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Lookup No Match Output2]"
          TopLeft="687.75,438">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,17.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Lookup No Match Output3]"
          TopLeft="417.75,428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,17.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Lookup No Match Output1]"
          TopLeft="177.75,428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,17.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Excel Source Output1]"
          TopLeft="420.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Excel Source Output]"
          TopLeft="180.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Excel Source Output3]"
          TopLeft="688.5,123">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Excel Source Output2]"
          TopLeft="959.75,120">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,123"
              Start="0,0"
              End="0,115.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,115.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Derived Column Output3]"
          TopLeft="424.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Derived Column Output2]"
          TopLeft="692.5,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Derived Column Output]"
          TopLeft="963.5,285">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\EHSSReport.Paths[Derived Column Output1]"
          TopLeft="184.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\EHSSReport\EHSSReport 1 1 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\EHSSReport\Check For Duplicate 1 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\EHSSReport\EHSSReport MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\EHSSReport\EHSSReport 1 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\EHSSReport\EHSSReport">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\EHSSReport\EHSSReport 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\EHSSReport\EHSSReport MSSQL 1 1 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\EHSSReport\EHSSReport MSSQL 1 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\EHSSReport\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\FSCargoWPData">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\FSCargoWPData\Derived Column"
          TopLeft="120,289" />
        <NodeLayout
          Size="156,42"
          Id="Package\FSCargoWPData\FSCargoWPData"
          TopLeft="115,106" />
        <NodeLayout
          Size="189,42"
          Id="Package\FSCargoWPData\Check For Duplicate R2"
          TopLeft="370,428" />
        <NodeLayout
          Size="172,42"
          Id="Package\FSCargoWPData\Data Conversion R2"
          TopLeft="380,353" />
        <NodeLayout
          Size="192,42"
          Id="Package\FSCargoWPData\FSCargoWPData MSSQL"
          TopLeft="92,529" />
        <NodeLayout
          Size="208,42"
          Id="Package\FSCargoWPData\FSCargoWPData MSSQL R2"
          TopLeft="359,523" />
        <NodeLayout
          Size="170,42"
          Id="Package\FSCargoWPData\Derived Column R2"
          TopLeft="378,272" />
        <NodeLayout
          Size="156,42"
          Id="Package\FSCargoWPData\Data Conversion"
          TopLeft="115,363" />
        <NodeLayout
          Size="171,42"
          Id="Package\FSCargoWPData\FSCargoWPData R2"
          TopLeft="367,106" />
        <NodeLayout
          Size="173,42"
          Id="Package\FSCargoWPData\Check For Duplicate"
          TopLeft="103,435" />
        <NodeLayout
          Size="175,42"
          Id="Package\FSCargoWPData\Remove Empty Cells"
          TopLeft="104,188" />
        <NodeLayout
          Size="191,42"
          Id="Package\FSCargoWPData\Remove Empty Cells R2"
          TopLeft="360,183" />
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Excel Source Output]"
          TopLeft="192.25,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Excel Source Output1]"
          TopLeft="454,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Derived Column Output]"
          TopLeft="195,331">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Derived Column Output1]"
          TopLeft="464.5,314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Data Conversion Output]"
          TopLeft="191.25,405">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Data Conversion Output1]"
          TopLeft="465.25,395">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Conditional Split Default Output]"
          TopLeft="459.25,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,13.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Conditional Split Default Output1]"
          TopLeft="194.25,230">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,19.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Lookup No Match Output]"
          TopLeft="463.75,470">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,16.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSCargoWPData.Paths[Lookup No Match Output1]"
          TopLeft="188.75,477">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,16.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FSCargoWPData\FSCargoWPData MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FSCargoWPData\FSCargoWPData MSSQL R2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FSCargoWPData\FSCargoWPData R2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FSCargoWPData\FSCargoWPData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FSCargoWPData\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\FSOOILQUALITY">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\FSOOILQUALITY\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="156,42"
          Id="Package\FSOOILQUALITY\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="157,42"
          Id="Package\FSOOILQUALITY\FSOOILQUALITY"
          TopLeft="115,106" />
        <NodeLayout
          Size="154,42"
          Id="Package\FSOOILQUALITY\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\FSOOILQUALITY\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="194,42"
          Id="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL"
          TopLeft="488,363" />
        <EdgeLayout
          Id="Package\FSOOILQUALITY.Paths[Lookup No Match Output]"
          TopLeft="587.25,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSOOILQUALITY.Paths[Excel Source Output]"
          TopLeft="272,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121,0"
              Start="0,0"
              End="113.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="113.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSOOILQUALITY.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSOOILQUALITY.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSOOILQUALITY.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FSOOILQUALITY\FSOOILQUALITY">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FSOOILQUALITY\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FSOOILQUALITY\FSOOILQUALITY MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\FSOSummary">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\FSOSummary\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="156,42"
          Id="Package\FSOSummary\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="179,42"
          Id="Package\FSOSummary\FSOSummary MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="143,42"
          Id="Package\FSOSummary\FSOSummary"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\FSOSummary\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\FSOSummary\Check For Duplicate"
          TopLeft="562,236" />
        <EdgeLayout
          Id="Package\FSOSummary.Paths[Lookup No Match Output]"
          TopLeft="650.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,14.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSOSummary.Paths[Excel Source Output]"
          TopLeft="186,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSOSummary.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSOSummary.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FSOSummary.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FSOSummary\FSOSummary MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FSOSummary\FSOSummary">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FSOSummary\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\InstrumentElectrical">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\InstrumentElectrical\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="156,42"
          Id="Package\InstrumentElectrical\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="209,42"
          Id="Package\InstrumentElectrical\InstrumentElectrical MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="173,42"
          Id="Package\InstrumentElectrical\InstrumentElectrical"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\InstrumentElectrical\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\InstrumentElectrical\Check For Duplicate"
          TopLeft="562,236" />
        <EdgeLayout
          Id="Package\InstrumentElectrical.Paths[Lookup No Match Output]"
          TopLeft="648.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19,48"
              Start="0,0"
              End="19,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="15,24" />
                  <mssgle:CubicBezierSegment
                    Point1="15,24"
                    Point2="19,24"
                    Point3="19,28" />
                  <mssgle:LineSegment
                    End="19,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-46.30638671875,29,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\InstrumentElectrical.Paths[Excel Source Output]"
          TopLeft="198.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10,42"
              Start="0,0"
              End="-10,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-6,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-6,21"
                    Point2="-10,21"
                    Point3="-10,25" />
                  <mssgle:LineSegment
                    End="-10,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\InstrumentElectrical.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\InstrumentElectrical.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\InstrumentElectrical.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\InstrumentElectrical\InstrumentElectrical MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\InstrumentElectrical\InstrumentElectrical">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\LastAvialableWellTest">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="217,42"
          Id="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="156,42"
          Id="Package\LastAvialableWellTest\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="180,42"
          Id="Package\LastAvialableWellTest\LastAvialableWellTest"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\LastAvialableWellTest\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\LastAvialableWellTest\Check For Duplicate"
          TopLeft="562,236" />
        <NodeLayout
          Size="175,42"
          Id="Package\LastAvialableWellTest\Remove Empty Cells"
          TopLeft="101,155" />
        <EdgeLayout
          Id="Package\LastAvialableWellTest.Paths[Lookup No Match Output]"
          TopLeft="648.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23,48"
              Start="0,0"
              End="23,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="19,24" />
                  <mssgle:CubicBezierSegment
                    Point1="19,24"
                    Point2="23,24"
                    Point3="23,28" />
                  <mssgle:LineSegment
                    End="23,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-44.30638671875,29,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LastAvialableWellTest.Paths[Excel Source Output]"
          TopLeft="202,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13.5,42"
              Start="0,0"
              End="-13.5,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-9.5,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.5,21"
                    Point2="-13.5,21"
                    Point3="-13.5,25" />
                  <mssgle:LineSegment
                    End="-13.5,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LastAvialableWellTest.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LastAvialableWellTest.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\LastAvialableWellTest.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\LastAvialableWellTest\LastAvialableWellTest MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LastAvialableWellTest\LastAvialableWellTest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\LastAvialableWellTest\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\OperationsSummary">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\OperationsSummary\Remove Empty Cells"
          TopLeft="121,157" />
        <NodeLayout
          Size="156,42"
          Id="Package\OperationsSummary\Data Conversion"
          TopLeft="339,235" />
        <NodeLayout
          Size="211,42"
          Id="Package\OperationsSummary\OperationsSummary MSSQL"
          TopLeft="573,290" />
        <NodeLayout
          Size="175,42"
          Id="Package\OperationsSummary\OperationsSummary"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\OperationsSummary\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\OperationsSummary\Check For Duplicate"
          TopLeft="562,220" />
        <EdgeLayout
          Id="Package\OperationsSummary.Paths[Lookup No Match Output]"
          TopLeft="648.5,262">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30,28"
              Start="0,0"
              End="30,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10"
                    Point2="0,14"
                    Point3="4,14" />
                  <mssgle:LineSegment
                    End="26,14" />
                  <mssgle:CubicBezierSegment
                    Point1="26,14"
                    Point2="30,14"
                    Point3="30,18" />
                  <mssgle:LineSegment
                    End="30,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.80638671875,19,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\OperationsSummary.Paths[Excel Source Output]"
          TopLeft="199.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,44"
              Start="0,0"
              End="9,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18"
                    Point2="0,22"
                    Point3="4,22" />
                  <mssgle:LineSegment
                    End="5,22" />
                  <mssgle:CubicBezierSegment
                    Point1="5,22"
                    Point2="9,22"
                    Point3="9,26" />
                  <mssgle:LineSegment
                    End="9,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\OperationsSummary.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-35,34"
              Start="0,0"
              End="-35,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13"
                    Point2="0,17"
                    Point3="-4,17" />
                  <mssgle:LineSegment
                    End="-31,17" />
                  <mssgle:CubicBezierSegment
                    Point1="-31,17"
                    Point2="-35,17"
                    Point3="-35,21" />
                  <mssgle:LineSegment
                    End="-35,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\OperationsSummary.Paths[Data Conversion Output]"
          TopLeft="495,256">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67,-15"
              Start="0,0"
              End="59.5,-15">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="29.5,0"
                    Point2="33.5,0"
                    Point3="33.5,-4" />
                  <mssgle:LineSegment
                    End="33.5,-11" />
                  <mssgle:CubicBezierSegment
                    Point1="33.5,-11"
                    Point2="33.5,-15"
                    Point3="37.5,-15" />
                  <mssgle:LineSegment
                    End="59.5,-15" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\OperationsSummary.Paths[Conditional Split Default Output]"
          TopLeft="296,179">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79,0"
              Start="0,0"
              End="71.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="71.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\OperationsSummary\OperationsSummary MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\OperationsSummary\OperationsSummary">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\PendingMaintenanceReport">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\PendingMaintenanceReport\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="156,42"
          Id="Package\PendingMaintenanceReport\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="244,42"
          Id="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="207,42"
          Id="Package\PendingMaintenanceReport\PendingMaintenanceReport"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\PendingMaintenanceReport\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\PendingMaintenanceReport\Check For Duplicate"
          TopLeft="562,236" />
        <EdgeLayout
          Id="Package\PendingMaintenanceReport.Paths[Lookup No Match Output]"
          TopLeft="648.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="36.5,48"
              Start="0,0"
              End="36.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="32.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="32.5,24"
                    Point2="36.5,24"
                    Point3="36.5,28" />
                  <mssgle:LineSegment
                    End="36.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-37.55638671875,29,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PendingMaintenanceReport.Paths[Excel Source Output]"
          TopLeft="215.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-27,42"
              Start="0,0"
              End="-27,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-23,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-23,21"
                    Point2="-27,21"
                    Point3="-27,25" />
                  <mssgle:LineSegment
                    End="-27,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PendingMaintenanceReport.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PendingMaintenanceReport.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PendingMaintenanceReport.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\PendingMaintenanceReport\PendingMaintenanceReport MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PendingMaintenanceReport\PendingMaintenanceReport">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PendingMaintenanceReport\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\PendingProjectWorkReport">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\PendingProjectWorkReport\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="156,42"
          Id="Package\PendingProjectWorkReport\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="241,42"
          Id="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="205,42"
          Id="Package\PendingProjectWorkReport\PendingProjectWorkReport"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\PendingProjectWorkReport\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\PendingProjectWorkReport\Check For Duplicate"
          TopLeft="562,236" />
        <EdgeLayout
          Id="Package\PendingProjectWorkReport.Paths[Lookup No Match Output]"
          TopLeft="648.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35,48"
              Start="0,0"
              End="35,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="31,24" />
                  <mssgle:CubicBezierSegment
                    Point1="31,24"
                    Point2="35,24"
                    Point3="35,28" />
                  <mssgle:LineSegment
                    End="35,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.30638671875,29,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PendingProjectWorkReport.Paths[Excel Source Output]"
          TopLeft="214.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-26,42"
              Start="0,0"
              End="-26,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-22,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-22,21"
                    Point2="-26,21"
                    Point3="-26,25" />
                  <mssgle:LineSegment
                    End="-26,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PendingProjectWorkReport.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PendingProjectWorkReport.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PendingProjectWorkReport.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\PendingProjectWorkReport\PendingProjectWorkReport MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PendingProjectWorkReport\PendingProjectWorkReport">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PendingProjectWorkReport\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\PlannedMaintenance">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\PlannedMaintenance\Derived Column 2"
          TopLeft="664,230" />
        <NodeLayout
          Size="175,42"
          Id="Package\PlannedMaintenance\Remove Empty Cells 2 1"
          TopLeft="953,156" />
        <NodeLayout
          Size="154,42"
          Id="Package\PlannedMaintenance\Derived Column"
          TopLeft="120,230" />
        <NodeLayout
          Size="176,42"
          Id="Package\PlannedMaintenance\PlannedMaintenance 2"
          TopLeft="656,71" />
        <NodeLayout
          Size="156,42"
          Id="Package\PlannedMaintenance\Data Conversion"
          TopLeft="118,308" />
        <NodeLayout
          Size="154,42"
          Id="Package\PlannedMaintenance\Derived Column 1"
          TopLeft="392,230" />
        <NodeLayout
          Size="212,42"
          Id="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1"
          TopLeft="356,466" />
        <NodeLayout
          Size="175,42"
          Id="Package\PlannedMaintenance\Remove Empty Cells 2"
          TopLeft="654,155" />
        <NodeLayout
          Size="156,42"
          Id="Package\PlannedMaintenance\Data Conversion 2 1"
          TopLeft="961,309" />
        <NodeLayout
          Size="154,42"
          Id="Package\PlannedMaintenance\Derived Column 2 1"
          TopLeft="963,231" />
        <NodeLayout
          Size="173,42"
          Id="Package\PlannedMaintenance\Check For Duplicate 1"
          TopLeft="376,389" />
        <NodeLayout
          Size="212,42"
          Id="Package\PlannedMaintenance\PlannedMaintenance MSSQL"
          TopLeft="84,466" />
        <NodeLayout
          Size="185,42"
          Id="Package\PlannedMaintenance\PlannedMaintenance 1"
          TopLeft="384,71" />
        <NodeLayout
          Size="173,42"
          Id="Package\PlannedMaintenance\Check For Duplicate 2"
          TopLeft="648,389" />
        <NodeLayout
          Size="175,42"
          Id="Package\PlannedMaintenance\Remove Empty Cells"
          TopLeft="110,155" />
        <NodeLayout
          Size="212,42"
          Id="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2"
          TopLeft="628,466" />
        <NodeLayout
          Size="156,42"
          Id="Package\PlannedMaintenance\Data Conversion 2"
          TopLeft="662,308" />
        <NodeLayout
          Size="212,42"
          Id="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1"
          TopLeft="927,467" />
        <NodeLayout
          Size="175,42"
          Id="Package\PlannedMaintenance\Remove Empty Cells 1"
          TopLeft="382,155" />
        <NodeLayout
          Size="176,42"
          Id="Package\PlannedMaintenance\PlannedMaintenance 2 1"
          TopLeft="955,72" />
        <NodeLayout
          Size="176,42"
          Id="Package\PlannedMaintenance\PlannedMaintenance"
          TopLeft="112,71" />
        <NodeLayout
          Size="173,42"
          Id="Package\PlannedMaintenance\Check For Duplicate 2 1"
          TopLeft="947,390" />
        <NodeLayout
          Size="173,42"
          Id="Package\PlannedMaintenance\Check For Duplicate"
          TopLeft="104,389" />
        <NodeLayout
          Size="156,42"
          Id="Package\PlannedMaintenance\Data Conversion 1"
          TopLeft="390,308" />
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Lookup No Match Output1]"
          TopLeft="190.25,431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,7.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Lookup No Match Output]"
          TopLeft="734.25,431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,7.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Lookup No Match Output3]"
          TopLeft="1033.25,432">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,7.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Lookup No Match Output2]"
          TopLeft="462.25,431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,7.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Excel Source Output1]"
          TopLeft="742.75,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Excel Source Output]"
          TopLeft="473,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Excel Source Output3]"
          TopLeft="1041.75,114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Excel Source Output2]"
          TopLeft="198.75,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Derived Column Output2]"
          TopLeft="468.5,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Derived Column Output3]"
          TopLeft="196.5,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Derived Column Output]"
          TopLeft="1039.5,273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Derived Column Output1]"
          TopLeft="740.5,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Data Conversion Output1]"
          TopLeft="1036.25,351">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Data Conversion Output]"
          TopLeft="193.25,350">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Data Conversion Output3]"
          TopLeft="465.25,350">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Data Conversion Output2]"
          TopLeft="737.25,350">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Conditional Split Default Output1]"
          TopLeft="197.25,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,6.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Conditional Split Default Output]"
          TopLeft="741.25,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,6.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Conditional Split Default Output3]"
          TopLeft="469.25,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,6.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlannedMaintenance.Paths[Conditional Split Default Output2]"
          TopLeft="1040.25,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,6.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\PlannedMaintenance 2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\PlannedMaintenance MSSQL 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\Check For Duplicate 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\PlannedMaintenance MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\PlannedMaintenance 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\PlannedMaintenance MSSQL 2 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\PlannedMaintenance 2 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\PlannedMaintenance">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlannedMaintenance\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\PlantOperationsReport">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\PlantOperationsReport\Remove Empty Cells"
          TopLeft="110,155" />
        <NodeLayout
          Size="156,42"
          Id="Package\PlantOperationsReport\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="221,42"
          Id="Package\PlantOperationsReport\PlantOperationsReport MSSQL"
          TopLeft="542,324" />
        <NodeLayout
          Size="185,42"
          Id="Package\PlantOperationsReport\PlantOperationsReport"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\PlantOperationsReport\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\PlantOperationsReport\Check For Duplicate"
          TopLeft="562,236" />
        <EdgeLayout
          Id="Package\PlantOperationsReport.Paths[Lookup No Match Output]"
          TopLeft="650.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,13.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlantOperationsReport.Paths[Excel Source Output]"
          TopLeft="201,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlantOperationsReport.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlantOperationsReport.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PlantOperationsReport.Paths[Conditional Split Default Output]"
          TopLeft="285,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="90,0"
              Start="0,0"
              End="82.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="82.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.36390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\PlantOperationsReport\PlantOperationsReport MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlantOperationsReport\PlantOperationsReport">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PlantOperationsReport\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\ProducedWaterData">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="174,42"
          Id="Package\ProducedWaterData\Split Additional Data"
          TopLeft="389,111" />
        <NodeLayout
          Size="173,42"
          Id="Package\ProducedWaterData\Data Conversion AD"
          TopLeft="615,255" />
        <NodeLayout
          Size="190,42"
          Id="Package\ProducedWaterData\Check For Duplicate AD"
          TopLeft="609,339" />
        <NodeLayout
          Size="173,42"
          Id="Package\ProducedWaterData\ProducedWaterData"
          TopLeft="115,106" />
        <NodeLayout
          Size="171,42"
          Id="Package\ProducedWaterData\Derived Column AD"
          TopLeft="614,181" />
        <NodeLayout
          Size="154,42"
          Id="Package\ProducedWaterData\Derived Column"
          TopLeft="123,206" />
        <NodeLayout
          Size="226,42"
          Id="Package\ProducedWaterData\ProducedWaterData MSSQL AD"
          TopLeft="595,422" />
        <NodeLayout
          Size="173,42"
          Id="Package\ProducedWaterData\Check For Duplicate"
          TopLeft="118,364" />
        <NodeLayout
          Size="156,42"
          Id="Package\ProducedWaterData\Data Conversion"
          TopLeft="124,280" />
        <NodeLayout
          Size="209,42"
          Id="Package\ProducedWaterData\ProducedWaterData MSSQL"
          TopLeft="106,436" />
        <EdgeLayout
          Id="Package\ProducedWaterData.Paths[Lookup No Match Output]"
          TopLeft="706,381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,10.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProducedWaterData.Paths[Lookup No Match Output1]"
          TopLeft="207.5,406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,5.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProducedWaterData.Paths[Excel Source Output]"
          TopLeft="288,129.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="101,0"
              Start="0,0"
              End="93.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="93.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProducedWaterData.Paths[EmptyRows]"
          TopLeft="448.333333333333,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-248.333333333333,53"
              Start="0,0"
              End="-248.333333333333,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.4897494305239" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.4897494305239"
                    Point2="0,21.4897494305239"
                    Point3="-4,21.4897494305239" />
                  <mssgle:LineSegment
                    End="-244.333333333333,21.4897494305239" />
                  <mssgle:CubicBezierSegment
                    Point1="-244.333333333333,21.4897494305239"
                    Point2="-248.333333333333,21.4897494305239"
                    Point3="-248.333333333333,25.4897494305239" />
                  <mssgle:LineSegment
                    End="-248.333333333333,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-150.394244791667,26.4897494305239,52.45515625,11.2822265625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProducedWaterData.Paths[Derived Column Output]"
          TopLeft="700.5,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProducedWaterData.Paths[Derived Column Output1]"
          TopLeft="201,248">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProducedWaterData.Paths[Data Conversion Output]"
          TopLeft="702.75,297">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProducedWaterData.Paths[Data Conversion Output1]"
          TopLeft="203.25,322">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProducedWaterData.Paths[Conditional Split Default Output]"
          TopLeft="503.666666666667,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="195.833333333333,28"
              Start="0,0"
              End="195.833333333333,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.35307517084283" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.35307517084283"
                    Point2="0,11.3530751708428"
                    Point3="4,11.3530751708428" />
                  <mssgle:LineSegment
                    End="191.833333333333,11.3530751708428" />
                  <mssgle:CubicBezierSegment
                    Point1="191.833333333333,11.3530751708428"
                    Point2="195.833333333333,11.3530751708428"
                    Point3="195.833333333333,15.3530751708428" />
                  <mssgle:LineSegment
                    End="195.833333333333,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="27.3027604166667,16.3530751708428,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\ProducedWaterData\ProducedWaterData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ProducedWaterData\ProducedWaterData MSSQL AD">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ProducedWaterData\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ProducedWaterData\ProducedWaterData MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\ProductionPotential">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="206,42"
          Id="Package\ProductionPotential\ProductionPotential MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="156,42"
          Id="Package\ProductionPotential\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="170,42"
          Id="Package\ProductionPotential\ProductionPotential"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\ProductionPotential\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\ProductionPotential\Check For Duplicate"
          TopLeft="562,236" />
        <NodeLayout
          Size="175,42"
          Id="Package\ProductionPotential\Remove Empty Cells"
          TopLeft="101,155" />
        <EdgeLayout
          Id="Package\ProductionPotential.Paths[Lookup No Match Output]"
          TopLeft="648.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17.5,48"
              Start="0,0"
              End="17.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="13.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="13.5,24"
                    Point2="17.5,24"
                    Point3="17.5,28" />
                  <mssgle:LineSegment
                    End="17.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.05638671875,29,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProductionPotential.Paths[Excel Source Output]"
          TopLeft="197,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.5,42"
              Start="0,0"
              End="-8.5,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-4.5,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.5,21"
                    Point2="-8.5,21"
                    Point3="-8.5,25" />
                  <mssgle:LineSegment
                    End="-8.5,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProductionPotential.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProductionPotential.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProductionPotential.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\ProductionPotential\ProductionPotential MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ProductionPotential\ProductionPotential">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\ProjectActivity">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,42"
          Id="Package\ProjectActivity\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="156,42"
          Id="Package\ProjectActivity\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="182,42"
          Id="Package\ProjectActivity\ProjectActivity MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="146,42"
          Id="Package\ProjectActivity\ProjectActivity"
          TopLeft="112,71" />
        <NodeLayout
          Size="154,42"
          Id="Package\ProjectActivity\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\ProjectActivity\Check For Duplicate"
          TopLeft="562,236" />
        <EdgeLayout
          Id="Package\ProjectActivity.Paths[Lookup No Match Output]"
          TopLeft="651.25,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,14.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProjectActivity.Paths[Excel Source Output]"
          TopLeft="186.75,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProjectActivity.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProjectActivity.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ProjectActivity.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\ProjectActivity\ProjectActivity MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ProjectActivity\ProjectActivity">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ProjectActivity\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\UnPlannedMaintenance">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\UnPlannedMaintenance\Derived Column 2"
          TopLeft="664,230" />
        <NodeLayout
          Size="234,42"
          Id="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1"
          TopLeft="356,466" />
        <NodeLayout
          Size="154,42"
          Id="Package\UnPlannedMaintenance\Derived Column"
          TopLeft="120,230" />
        <NodeLayout
          Size="156,42"
          Id="Package\UnPlannedMaintenance\Data Conversion"
          TopLeft="118,308" />
        <NodeLayout
          Size="154,42"
          Id="Package\UnPlannedMaintenance\Derived Column 1"
          TopLeft="392,230" />
        <NodeLayout
          Size="198,42"
          Id="Package\UnPlannedMaintenance\UnPlannedMaintenance 3"
          TopLeft="955,72" />
        <NodeLayout
          Size="156,42"
          Id="Package\UnPlannedMaintenance\Data Conversion 2 1"
          TopLeft="961,309" />
        <NodeLayout
          Size="154,42"
          Id="Package\UnPlannedMaintenance\Derived Column 2 1"
          TopLeft="963,231" />
        <NodeLayout
          Size="173,42"
          Id="Package\UnPlannedMaintenance\Check For Duplicate 1"
          TopLeft="376,389" />
        <NodeLayout
          Size="198,42"
          Id="Package\UnPlannedMaintenance\UnPlannedMaintenance 1"
          TopLeft="384,71" />
        <NodeLayout
          Size="175,42"
          Id="Package\UnPlannedMaintenance\Remove Empty Cells 1"
          TopLeft="382,155" />
        <NodeLayout
          Size="173,42"
          Id="Package\UnPlannedMaintenance\Check For Duplicate 2"
          TopLeft="648,389" />
        <NodeLayout
          Size="234,42"
          Id="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2"
          TopLeft="628,466" />
        <NodeLayout
          Size="243,42"
          Id="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 2 1"
          TopLeft="927,467" />
        <NodeLayout
          Size="225,42"
          Id="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL"
          TopLeft="84,466" />
        <NodeLayout
          Size="156,42"
          Id="Package\UnPlannedMaintenance\Data Conversion 2"
          TopLeft="662,308" />
        <NodeLayout
          Size="198,42"
          Id="Package\UnPlannedMaintenance\UnPlannedMaintenance 2"
          TopLeft="656,71" />
        <NodeLayout
          Size="175,42"
          Id="Package\UnPlannedMaintenance\Remove Empty Cells 2 1"
          TopLeft="953,156" />
        <NodeLayout
          Size="175,42"
          Id="Package\UnPlannedMaintenance\Remove Empty Cells 2"
          TopLeft="654,155" />
        <NodeLayout
          Size="189,42"
          Id="Package\UnPlannedMaintenance\UnPlannedMaintenance"
          TopLeft="112,71" />
        <NodeLayout
          Size="175,42"
          Id="Package\UnPlannedMaintenance\Remove Empty Cells"
          TopLeft="110,155" />
        <NodeLayout
          Size="173,42"
          Id="Package\UnPlannedMaintenance\Check For Duplicate 2 1"
          TopLeft="947,390" />
        <NodeLayout
          Size="173,42"
          Id="Package\UnPlannedMaintenance\Check For Duplicate"
          TopLeft="104,389" />
        <NodeLayout
          Size="156,42"
          Id="Package\UnPlannedMaintenance\Data Conversion 1"
          TopLeft="390,308" />
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Lookup No Match Output1]"
          TopLeft="193.5,431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,7.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Lookup No Match Output]"
          TopLeft="734.5,431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.5,35"
              Start="0,0"
              End="10.5,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5"
                    Point2="0,17.5"
                    Point3="4,17.5" />
                  <mssgle:LineSegment
                    End="6.5,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="6.5,17.5"
                    Point2="10.5,17.5"
                    Point3="10.5,21.5" />
                  <mssgle:LineSegment
                    End="10.5,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-50.55638671875,22.5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Lookup No Match Output3]"
          TopLeft="1033.5,432">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15,35"
              Start="0,0"
              End="15,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5"
                    Point2="0,17.5"
                    Point3="4,17.5" />
                  <mssgle:LineSegment
                    End="11,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="11,17.5"
                    Point2="15,17.5"
                    Point3="15,21.5" />
                  <mssgle:LineSegment
                    End="15,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.30638671875,22.5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Lookup No Match Output2]"
          TopLeft="462.5,431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.5,35"
              Start="0,0"
              End="10.5,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5"
                    Point2="0,17.5"
                    Point3="4,17.5" />
                  <mssgle:LineSegment
                    End="6.5,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="6.5,17.5"
                    Point2="10.5,17.5"
                    Point3="10.5,21.5" />
                  <mssgle:LineSegment
                    End="10.5,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-50.55638671875,22.5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Excel Source Output1]"
          TopLeft="755,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13.5,42"
              Start="0,0"
              End="-13.5,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-9.5,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.5,21"
                    Point2="-13.5,21"
                    Point3="-13.5,25" />
                  <mssgle:LineSegment
                    End="-13.5,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Excel Source Output]"
          TopLeft="483,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13.5,42"
              Start="0,0"
              End="-13.5,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-9.5,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.5,21"
                    Point2="-13.5,21"
                    Point3="-13.5,25" />
                  <mssgle:LineSegment
                    End="-13.5,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Excel Source Output3]"
          TopLeft="1054,114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13.5,42"
              Start="0,0"
              End="-13.5,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-9.5,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.5,21"
                    Point2="-13.5,21"
                    Point3="-13.5,25" />
                  <mssgle:LineSegment
                    End="-13.5,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Excel Source Output2]"
          TopLeft="206.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9,42"
              Start="0,0"
              End="-9,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-5,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-5,21"
                    Point2="-9,21"
                    Point3="-9,25" />
                  <mssgle:LineSegment
                    End="-9,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Derived Column Output2]"
          TopLeft="468.5,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Derived Column Output3]"
          TopLeft="196.5,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Derived Column Output]"
          TopLeft="1039.5,273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Derived Column Output1]"
          TopLeft="740.5,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Data Conversion Output1]"
          TopLeft="1036.25,351">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Data Conversion Output]"
          TopLeft="193.25,350">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Data Conversion Output3]"
          TopLeft="465.25,350">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Data Conversion Output2]"
          TopLeft="737.25,350">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Conditional Split Default Output1]"
          TopLeft="197.25,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,6.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Conditional Split Default Output]"
          TopLeft="741.25,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,6.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Conditional Split Default Output3]"
          TopLeft="469.25,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,6.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenance.Paths[Conditional Split Default Output2]"
          TopLeft="1040.25,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,6.9208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\UnPlannedMaintenance\UnPlannedMaintenance MSSQL 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\UnPlannedMaintenance\UnPlannedMaintenance 3">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\UnPlannedMaintenance\UnPlannedMaintenance 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\UnPlannedMaintenance\UnPlannedMaintenance 2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\UnPlannedMaintenance\UnPlannedMaintenance">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\UnPlannedMaintenanceReport">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="220,42"
          Id="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport"
          TopLeft="112,71" />
        <NodeLayout
          Size="256,42"
          Id="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="156,42"
          Id="Package\UnPlannedMaintenanceReport\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="175,42"
          Id="Package\UnPlannedMaintenanceReport\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="154,42"
          Id="Package\UnPlannedMaintenanceReport\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\UnPlannedMaintenanceReport\Check For Duplicate"
          TopLeft="562,236" />
        <EdgeLayout
          Id="Package\UnPlannedMaintenanceReport.Paths[Lookup No Match Output]"
          TopLeft="648.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.5,48"
              Start="0,0"
              End="42.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="38.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="38.5,24"
                    Point2="42.5,24"
                    Point3="42.5,28" />
                  <mssgle:LineSegment
                    End="42.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.55638671875,29,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenanceReport.Paths[Excel Source Output]"
          TopLeft="222,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-33.5,42"
              Start="0,0"
              End="-33.5,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-29.5,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-29.5,21"
                    Point2="-33.5,21"
                    Point3="-33.5,25" />
                  <mssgle:LineSegment
                    End="-33.5,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenanceReport.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenanceReport.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\UnPlannedMaintenanceReport.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\UnPlannedMaintenanceReport\UnPlannedMaintenanceReport MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\UnPlannedMaintenanceReport\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WellTestResult">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="185,42"
          Id="Package\WellTestResult\WellTestResult MSSQL"
          TopLeft="503,365" />
        <NodeLayout
          Size="175,42"
          Id="Package\WellTestResult\Remove Empty Cells"
          TopLeft="283,106" />
        <NodeLayout
          Size="154,42"
          Id="Package\WellTestResult\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="156,42"
          Id="Package\WellTestResult\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="148,42"
          Id="Package\WellTestResult\WellTestResult"
          TopLeft="112,106" />
        <NodeLayout
          Size="157,42"
          Id="Package\WellTestResult\Data Enrichment"
          TopLeft="620,105" />
        <NodeLayout
          Size="173,42"
          Id="Package\WellTestResult\Check For Duplicate"
          TopLeft="503,265" />
        <EdgeLayout
          Id="Package\WellTestResult.Paths[Lookup Match Output]"
          TopLeft="698.5,147">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-441.5,51"
              Start="0,0"
              End="-441.5,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5"
                    Point2="0,25.5"
                    Point3="-4,25.5" />
                  <mssgle:LineSegment
                    End="-437.5,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-437.5,25.5"
                    Point2="-441.5,25.5"
                    Point3="-441.5,29.5" />
                  <mssgle:LineSegment
                    End="-441.5,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-268.94138671875,30.5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WellTestResult.Paths[Excel Source Output]"
          TopLeft="260,127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23,0"
              Start="0,0"
              End="15.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WellTestResult.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WellTestResult.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WellTestResult.Paths[Conditional Split Default Output]"
          TopLeft="458,126.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="162,0"
              Start="0,0"
              End="154.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="154.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="6.63609374999999,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WellTestResult.Paths[Lookup No Match Output]"
          TopLeft="592.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,19.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WellTestResult\WellTestResult MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WellTestResult\WellTestResult">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WellTestResult\Data Enrichment">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[WellTestEnrichmentDatas]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WellTestResult\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WFBGasAllocation">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\WFBGasAllocation\WFBGasAllocation"
          TopLeft="112,71" />
        <NodeLayout
          Size="156,42"
          Id="Package\WFBGasAllocation\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="175,42"
          Id="Package\WFBGasAllocation\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="154,42"
          Id="Package\WFBGasAllocation\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\WFBGasAllocation\Check For Duplicate"
          TopLeft="562,236" />
        <NodeLayout
          Size="200,42"
          Id="Package\WFBGasAllocation\WFBGasAllocation MSSQL"
          TopLeft="563,326" />
        <EdgeLayout
          Id="Package\WFBGasAllocation.Paths[Lookup No Match Output]"
          TopLeft="648.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.5,48"
              Start="0,0"
              End="14.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="10.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="10.5,24"
                    Point2="14.5,24"
                    Point3="14.5,28" />
                  <mssgle:LineSegment
                    End="14.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.55638671875,29,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasAllocation.Paths[Excel Source Output]"
          TopLeft="191,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasAllocation.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasAllocation.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasAllocation.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasAllocation\WFBGasAllocation">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasAllocation\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasAllocation\WFBGasAllocation MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WFBGasLiftData">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="117,42"
          Id="Package\WFBGasLiftData\EBOK21"
          TopLeft="655.090909090909,20.636363636364" />
        <NodeLayout
          Size="203,42"
          Id="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL"
          TopLeft="636,309" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Derived18"
          TopLeft="245.181818181818,96.636363636364" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Derived28"
          TopLeft="888,102" />
        <NodeLayout
          Size="203,42"
          Id="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL"
          TopLeft="3.72727272727271,301.090909090909" />
        <NodeLayout
          Size="117,42"
          Id="Package\WFBGasLiftData\EBOK42"
          TopLeft="1117,27" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Derived16"
          TopLeft="33,97" />
        <NodeLayout
          Size="117,42"
          Id="Package\WFBGasLiftData\EBOK20"
          TopLeft="447.636363636364,25.454545454545" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Derived27"
          TopLeft="1113,104" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Convert28"
          TopLeft="889,169" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Convert27"
          TopLeft="1120,174" />
        <NodeLayout
          Size="149,42"
          Id="Package\WFBGasLiftData\Is_Duplicate18"
          TopLeft="244.181818181818,237.181818181818" />
        <NodeLayout
          Size="203,42"
          Id="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL"
          TopLeft="863,310" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Derived21"
          TopLeft="655,101" />
        <NodeLayout
          Size="117,42"
          Id="Package\WFBGasLiftData\EBOK18"
          TopLeft="247.727272727273,23.909090909091" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Convert21"
          TopLeft="661,166" />
        <NodeLayout
          Size="117,42"
          Id="Package\WFBGasLiftData\EBOK28"
          TopLeft="893,25" />
        <NodeLayout
          Size="203,42"
          Id="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL"
          TopLeft="1085,310" />
        <NodeLayout
          Size="149,42"
          Id="Package\WFBGasLiftData\Is_Duplicate27"
          TopLeft="1113,242" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Convert20"
          TopLeft="455.909090909091,167.818181818182" />
        <NodeLayout
          Size="203,42"
          Id="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL"
          TopLeft="221.909090909091,305.454545454545" />
        <NodeLayout
          Size="149,42"
          Id="Package\WFBGasLiftData\Is_Duplicate16"
          TopLeft="26,231" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Derived20"
          TopLeft="450.272727272727,101.181818181818" />
        <NodeLayout
          Size="203,42"
          Id="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL"
          TopLeft="427,308.090909090909" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Convert18"
          TopLeft="249.181818181818,167" />
        <NodeLayout
          Size="117,42"
          Id="Package\WFBGasLiftData\EBOK16"
          TopLeft="34,23" />
        <NodeLayout
          Size="149,42"
          Id="Package\WFBGasLiftData\Is_Duplicate20"
          TopLeft="449.727272727273,232.818181818182" />
        <NodeLayout
          Size="149,42"
          Id="Package\WFBGasLiftData\Is_Duplicate21"
          TopLeft="657,234" />
        <NodeLayout
          Size="127,42"
          Id="Package\WFBGasLiftData\Convert16"
          TopLeft="35,165" />
        <NodeLayout
          Size="149,42"
          Id="Package\WFBGasLiftData\Is_Duplicate28"
          TopLeft="885,237" />
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Lookup No Match Output2]"
          TopLeft="1187,284">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,3.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Lookup No Match Output1]"
          TopLeft="102.863636363636,273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.090909090909"
              Start="0,0"
              End="0,20.590909090909">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.590909090909" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,4.4907670454545,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Lookup No Match Output]"
          TopLeft="962,279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,5.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Lookup No Match Output5]"
          TopLeft="526.363636363636,274.818181818182">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.272727272727"
              Start="0,0"
              End="0,25.772727272727">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.772727272727" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,7.08167613636351,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Lookup No Match Output4]"
          TopLeft="734.5,276">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,6.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Lookup No Match Output3]"
          TopLeft="321.045454545455,279.181818181818">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.272727272727"
              Start="0,0"
              End="0,18.772727272727">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.772727272727" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,3.58167613636351,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Excel Source Output2]"
          TopLeft="509.954545454546,67.454545454545">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.727272727273"
              Start="0,0"
              End="0,26.227272727273">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.227272727273" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Excel Source Output1]"
          TopLeft="1176,69">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Excel Source Output]"
          TopLeft="951.5,67">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Excel Source Output5]"
          TopLeft="307.454545454546,65.909090909091">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.727272727273"
              Start="0,0"
              End="0,23.227272727273">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.227272727273" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Excel Source Output4]"
          TopLeft="94.5,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Excel Source Output3]"
          TopLeft="716.045454545455,62.636363636364">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.363636363636"
              Start="0,0"
              End="0,30.863636363636">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.863636363636" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Derived Column Output5]"
          TopLeft="310.681818181818,138.636363636364">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.363636363636"
              Start="0,0"
              End="0,20.863636363636">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.863636363636" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Derived Column Output3]"
          TopLeft="1180,146">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Derived Column Output4]"
          TopLeft="952,144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Derived Column Output2]"
          TopLeft="516.590909090909,143.181818181818">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.636363636364"
              Start="0,0"
              End="0,17.136363636364">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.136363636364" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Derived Column Output]"
          TopLeft="721.5,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23"
              Start="0,0"
              End="0,15.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Derived Column Output1]"
          TopLeft="97.5,139">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Data Conversion Output2]"
          TopLeft="728,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Data Conversion Output1]"
          TopLeft="315.681818181818,209">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.181818181818"
              Start="0,0"
              End="0,20.681818181818">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.681818181818" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Data Conversion Output]"
          TopLeft="521.818181818182,209.818181818182">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23"
              Start="0,0"
              End="0,15.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Data Conversion Output5]"
          TopLeft="99.5,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Data Conversion Output4]"
          TopLeft="956,211">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGasLiftData.Paths[Data Conversion Output3]"
          TopLeft="1185.5,216">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\EBOK21">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\WFBGasLiftData21 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\WFBGasLiftData16 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\EBOK42">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\EBOK20">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\Is_Duplicate18">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\WFBGasLiftData28 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\EBOK18">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\EBOK28">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\WFBGasLiftData27 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\Is_Duplicate27">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\WFBGasLiftData18 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\Is_Duplicate16">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\WFBGasLiftData20 MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\EBOK16">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\Is_Duplicate20">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\Is_Duplicate21">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGasLiftData\Is_Duplicate28">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WFBGeneralReport">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="168,42"
          Id="Package\WFBGeneralReport\WFBGeneralReport"
          TopLeft="112,71" />
        <NodeLayout
          Size="204,42"
          Id="Package\WFBGeneralReport\WFBGeneralReport MSSQL"
          TopLeft="563,326" />
        <NodeLayout
          Size="156,42"
          Id="Package\WFBGeneralReport\Data Conversion"
          TopLeft="374,239" />
        <NodeLayout
          Size="175,42"
          Id="Package\WFBGeneralReport\Remove Empty Cells"
          TopLeft="101,155" />
        <NodeLayout
          Size="154,42"
          Id="Package\WFBGeneralReport\Derived Column"
          TopLeft="375,159" />
        <NodeLayout
          Size="173,42"
          Id="Package\WFBGeneralReport\Check For Duplicate"
          TopLeft="562,236" />
        <EdgeLayout
          Id="Package\WFBGeneralReport.Paths[Lookup No Match Output]"
          TopLeft="648.5,278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16.5,48"
              Start="0,0"
              End="16.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="12.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="12.5,24"
                    Point2="16.5,24"
                    Point3="16.5,28" />
                  <mssgle:LineSegment
                    End="16.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.55638671875,29,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGeneralReport.Paths[Excel Source Output]"
          TopLeft="192.25,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGeneralReport.Paths[Derived Column Output]"
          TopLeft="452,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGeneralReport.Paths[Data Conversion Output]"
          TopLeft="530,258.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32,0"
              Start="0,0"
              End="24.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBGeneralReport.Paths[Conditional Split Default Output]"
          TopLeft="276,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,0"
              Start="0,0"
              End="91.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.86390625,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGeneralReport\WFBGeneralReport">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGeneralReport\WFBGeneralReport MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBGeneralReport\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WFBMaintenanceData">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="182,42"
          Id="Package\WFBMaintenanceData\WFBMaintenanceData"
          TopLeft="115,106" />
        <NodeLayout
          Size="156,42"
          Id="Package\WFBMaintenanceData\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="175,42"
          Id="Package\WFBMaintenanceData\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\WFBMaintenanceData\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\WFBMaintenanceData\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="218,42"
          Id="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL"
          TopLeft="488,363" />
        <EdgeLayout
          Id="Package\WFBMaintenanceData.Paths[Lookup No Match Output]"
          TopLeft="593.25,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBMaintenanceData.Paths[Excel Source Output]"
          TopLeft="297,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBMaintenanceData.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBMaintenanceData.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBMaintenanceData.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WFBMaintenanceData\WFBMaintenanceData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBMaintenanceData\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBMaintenanceData\WFBMaintenanceData MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WFBProcessData_GasConsumed">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="231,42"
          Id="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed"
          TopLeft="115,106" />
        <NodeLayout
          Size="156,42"
          Id="Package\WFBProcessData_GasConsumed\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="267,42"
          Id="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL"
          TopLeft="463,363" />
        <NodeLayout
          Size="175,42"
          Id="Package\WFBProcessData_GasConsumed\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\WFBProcessData_GasConsumed\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\WFBProcessData_GasConsumed\Check For Duplicate"
          TopLeft="503,265" />
        <EdgeLayout
          Id="Package\WFBProcessData_GasConsumed.Paths[Lookup No Match Output]"
          TopLeft="593,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_GasConsumed.Paths[Excel Source Output]"
          TopLeft="346,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="47,0"
              Start="0,0"
              End="39.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="39.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_GasConsumed.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_GasConsumed.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_GasConsumed.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBProcessData_GasConsumed\WFBProcessData_GasConsumed MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBProcessData_GasConsumed\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WFBProcessData_GasProduced">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="225,42"
          Id="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced"
          TopLeft="115,106" />
        <NodeLayout
          Size="156,42"
          Id="Package\WFBProcessData_GasProduced\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="261,42"
          Id="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL"
          TopLeft="463,363" />
        <NodeLayout
          Size="175,42"
          Id="Package\WFBProcessData_GasProduced\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\WFBProcessData_GasProduced\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\WFBProcessData_GasProduced\Check For Duplicate"
          TopLeft="503,265" />
        <EdgeLayout
          Id="Package\WFBProcessData_GasProduced.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_GasProduced.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_GasProduced.Paths[Lookup No Match Output]"
          TopLeft="591.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_GasProduced.Paths[Excel Source Output]"
          TopLeft="340,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="53,0"
              Start="0,0"
              End="45.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="45.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_GasProduced.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBProcessData_GasProduced\WFBProcessData_GasProduced MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBProcessData_GasProduced\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WFBProcessData_Reading">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="238,42"
          Id="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL"
          TopLeft="503,365" />
        <NodeLayout
          Size="156,42"
          Id="Package\WFBProcessData_Reading\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="202,42"
          Id="Package\WFBProcessData_Reading\WFBProcessData_Reading"
          TopLeft="115,106" />
        <NodeLayout
          Size="154,42"
          Id="Package\WFBProcessData_Reading\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\WFBProcessData_Reading\Check For Duplicate"
          TopLeft="503,265" />
        <EdgeLayout
          Id="Package\WFBProcessData_Reading.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_Reading.Paths[Lookup No Match Output]"
          TopLeft="589.5,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32.5,58"
              Start="0,0"
              End="32.5,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="4,29" />
                  <mssgle:LineSegment
                    End="28.5,29" />
                  <mssgle:CubicBezierSegment
                    Point1="28.5,29"
                    Point2="32.5,29"
                    Point3="32.5,33" />
                  <mssgle:LineSegment
                    End="32.5,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.55638671875,34,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_Reading.Paths[Excel Source Output]"
          TopLeft="216,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="41,50"
              Start="0,0"
              End="41,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="4,25" />
                  <mssgle:LineSegment
                    End="37,25" />
                  <mssgle:CubicBezierSegment
                    Point1="37,25"
                    Point2="41,25"
                    Point3="41,29" />
                  <mssgle:LineSegment
                    End="41,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBProcessData_Reading.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WFBProcessData_Reading\WFBProcessData_Reading">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBProcessData_Reading\WFBProcessData_Reading MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBProcessData_Reading\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WFBWaterInjectorMeter">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="192,42"
          Id="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter"
          TopLeft="115,106" />
        <NodeLayout
          Size="229,42"
          Id="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL"
          TopLeft="470,363" />
        <NodeLayout
          Size="156,42"
          Id="Package\WFBWaterInjectorMeter\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="175,42"
          Id="Package\WFBWaterInjectorMeter\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\WFBWaterInjectorMeter\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\WFBWaterInjectorMeter\Check For Duplicate"
          TopLeft="503,265" />
        <EdgeLayout
          Id="Package\WFBWaterInjectorMeter.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBWaterInjectorMeter.Paths[Lookup No Match Output]"
          TopLeft="587,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBWaterInjectorMeter.Paths[Excel Source Output]"
          TopLeft="307,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86,0"
              Start="0,0"
              End="78.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="78.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBWaterInjectorMeter.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBWaterInjectorMeter.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBWaterInjectorMeter\WFBWaterInjectorMeter MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBWaterInjectorMeter\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WFBWellData">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157,42"
          Id="Package\WFBWellData\Data Enrichment"
          TopLeft="620,105" />
        <NodeLayout
          Size="173,42"
          Id="Package\WFBWellData\Check For Duplicate"
          TopLeft="503,265" />
        <NodeLayout
          Size="175,42"
          Id="Package\WFBWellData\Remove Empty Cells"
          TopLeft="283,106" />
        <NodeLayout
          Size="154,42"
          Id="Package\WFBWellData\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="156,42"
          Id="Package\WFBWellData\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="176,42"
          Id="Package\WFBWellData\CFBWellData MSSQL"
          TopLeft="503,365" />
        <NodeLayout
          Size="143,42"
          Id="Package\WFBWellData\WFBWellData"
          TopLeft="115,106" />
        <EdgeLayout
          Id="Package\WFBWellData.Paths[Lookup No Match Output]"
          TopLeft="590.25,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,19.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBWellData.Paths[Lookup Match Output]"
          TopLeft="698.5,147">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-441.5,51"
              Start="0,0"
              End="-441.5,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5"
                    Point2="0,25.5"
                    Point3="-4,25.5" />
                  <mssgle:LineSegment
                    End="-437.5,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-437.5,25.5"
                    Point2="-441.5,25.5"
                    Point3="-441.5,29.5" />
                  <mssgle:LineSegment
                    End="-441.5,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-268.94138671875,30.5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBWellData.Paths[Excel Source Output]"
          TopLeft="258,127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="25,0"
              Start="0,0"
              End="17.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBWellData.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBWellData.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WFBWellData.Paths[Conditional Split Default Output]"
          TopLeft="458,126.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="162,0"
              Start="0,0"
              End="154.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="154.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="6.63609374999999,5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WFBWellData\Data Enrichment">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[WellTestEnrichmentDatas]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBWellData\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBWellData\CFBWellData MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WFBWellData\WFBWellData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\WIJManifoldMeter">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,42"
          Id="Package\WIJManifoldMeter\WIJManifoldMeter"
          TopLeft="115,106" />
        <NodeLayout
          Size="200,42"
          Id="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL"
          TopLeft="488,363" />
        <NodeLayout
          Size="156,42"
          Id="Package\WIJManifoldMeter\Data Conversion"
          TopLeft="272,272" />
        <NodeLayout
          Size="175,42"
          Id="Package\WIJManifoldMeter\Remove Empty Cells"
          TopLeft="393,107" />
        <NodeLayout
          Size="154,42"
          Id="Package\WIJManifoldMeter\Derived Column"
          TopLeft="180,198" />
        <NodeLayout
          Size="173,42"
          Id="Package\WIJManifoldMeter\Check For Duplicate"
          TopLeft="503,265" />
        <EdgeLayout
          Id="Package\WIJManifoldMeter.Paths[Lookup No Match Output]"
          TopLeft="588.75,307">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,18.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WIJManifoldMeter.Paths[Excel Source Output]"
          TopLeft="279,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114,0"
              Start="0,0"
              End="106.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="106.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WIJManifoldMeter.Paths[Derived Column Output]"
          TopLeft="257,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,32"
              Start="0,0"
              End="93,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="89,16" />
                  <mssgle:CubicBezierSegment
                    Point1="89,16"
                    Point2="93,16"
                    Point3="93,20" />
                  <mssgle:LineSegment
                    End="93,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WIJManifoldMeter.Paths[Data Conversion Output]"
          TopLeft="428,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,0"
              Start="0,0"
              End="67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\WIJManifoldMeter.Paths[Conditional Split Default Output]"
          TopLeft="480.5,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-223.5,49"
              Start="0,0"
              End="-223.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-219.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-219.5,24.5"
                    Point2="-223.5,24.5"
                    Point3="-223.5,28.5" />
                  <mssgle:LineSegment
                    End="-223.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.36390625,29.5,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\WIJManifoldMeter\WIJManifoldMeter">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WIJManifoldMeter\WIJManifoldMeter MSSQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\WIJManifoldMeter\Check For Duplicate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>